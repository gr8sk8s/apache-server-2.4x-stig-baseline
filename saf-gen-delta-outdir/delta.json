{
  "ignoreFormattingDiff": {
    "addedControlIDs": [],
    "removedControlIDs": [
      "V-92759"
    ],
    "renamedControlIDs": {
      "V-92597": "SV-214228",
      "V-92599": "SV-214229",
      "V-92601": "SV-214230",
      "V-92607": "SV-214231",
      "V-92609": "SV-214232",
      "V-92621": "SV-214233",
      "V-92627": "SV-214234",
      "V-92629": "SV-214235",
      "V-92631": "SV-214236",
      "V-92635": "SV-214237",
      "V-92637": "SV-214238",
      "V-92639": "SV-214239",
      "V-92641": "SV-214240",
      "V-92643": "SV-214241",
      "V-92645": "SV-214242",
      "V-92653": "SV-214243",
      "V-92655": "SV-214244",
      "V-92659": "SV-214245",
      "V-92661": "SV-214246",
      "V-92671": "SV-214247",
      "V-92673": "SV-214248",
      "V-92675": "SV-214249",
      "V-92677": "SV-214250",
      "V-92679": "SV-214251",
      "V-92687": "SV-214252",
      "V-92689": "SV-214253",
      "V-92695": "SV-214254",
      "V-92697": "SV-214255",
      "V-92699": "SV-214256",
      "V-92701": "SV-214257",
      "V-92705": "SV-214258",
      "V-92709": "SV-214259",
      "V-92711": "SV-214260",
      "V-92713": "SV-214261",
      "V-92715": "SV-214262",
      "V-92717": "SV-214263",
      "V-92719": "SV-214264",
      "V-92723": "SV-214265",
      "V-92727": "SV-214266",
      "V-92731": "SV-214267",
      "V-92741": "SV-214268",
      "V-92745": "SV-214269",
      "V-92749": "SV-214270",
      "V-92751": "SV-214271",
      "V-92753": "SV-214272",
      "V-92755": "SV-214273",
      "V-92757": "SV-214274"
    },
    "changedControlIDs": [
      "SV-214228",
      "SV-214229",
      "SV-214230",
      "SV-214231",
      "SV-214232",
      "SV-214233",
      "SV-214234",
      "SV-214235",
      "SV-214236",
      "SV-214237",
      "SV-214238",
      "SV-214239",
      "SV-214240",
      "SV-214241",
      "SV-214242",
      "SV-214243",
      "SV-214244",
      "SV-214245",
      "SV-214246",
      "SV-214247",
      "SV-214248",
      "SV-214249",
      "SV-214250",
      "SV-214251",
      "SV-214252",
      "SV-214253",
      "SV-214254",
      "SV-214255",
      "SV-214256",
      "SV-214257",
      "SV-214258",
      "SV-214259",
      "SV-214260",
      "SV-214261",
      "SV-214262",
      "SV-214263",
      "SV-214264",
      "SV-214265",
      "SV-214266",
      "SV-214267",
      "SV-214268",
      "SV-214269",
      "SV-214270",
      "SV-214271",
      "SV-214272",
      "SV-214273",
      "SV-214274"
    ],
    "addedControls": {},
    "changedControls": {
      "SV-214228": {
        "tags": {
          "check_id__added": "C-15442r881402_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214228",
          "rid": "SV-214228r881404_rule",
          "fix_id": "F-15440r881403_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214228",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nSearch for the directives \"KeepAlive\" and \"MaxKeepAliveRequests\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"keepalive\"\n\nKeepAlive On\nMaxKeepAliveRequests 100\n\nIf the value of \"KeepAlive\" is set to \"off\" or does not exist, this is a finding.\n\nIf the value of \"MaxKeepAliveRequests\" is set to a value less than \"100\" or does not exist, this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSet the \"KeepAlive\" directive to a value of \"on\"; add the directive if it does not exist.\n\nSet the \"MaxKeepAliveRequests\" directive to a value of \"100\" or greater; add the directive if it does not exist.\n\nRestart Apache: apachectl restart"
        }
      },
      "SV-214229": {
        "tags": {
          "check_id__added": "C-15443r881405_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214229",
          "rid": "SV-214229r881406_rule",
          "fix_id": "F-15441r276948_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214229",
        "descs": {
          "check": "Issue the following command:\nhttpd -M |grep -E 'session_module|usertrack'\n\nExpected output:\nusertrack_module (shared)\nsession_module (shared)\n\nIf results do not return both \"usertrack_module (shared)\" and \"session_module (shared)\", this is a finding.\n\nAlternatively, determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the \"session_module\" and \"usertrack_module\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"session_module\"\n# cat /<path_to_file>/httpd.conf | grep -i \"usertrack_module\"\nIf \"session_module\" and \"usertrack_module\" are not enabled or do not exist, this is a finding."
        }
      },
      "SV-214230": {
        "tags": {
          "check_id__added": "C-15444r881407_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214230",
          "rid": "SV-214230r881408_rule",
          "fix_id": "F-15442r803399_fix",
          "nist": [
            "AC-17 (2)"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214230",
        "descs": {
          "check": "Verify the \"ssl module\" module is loaded\n# httpd -M | grep -i ssl_module\nOutput:  ssl_module (shared) \n\nIf the \"ssl_module\" is not found, this is a finding. \n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the directive \"SSLProtocol\" in the \"httpd.conf\" file: \n\n# cat /<path_to_file>/httpd.conf | grep -i \"SSLProtocol\" \n\nIf the \"SSLProtocol\" directive is missing or does not look like the following, this is a finding: \n\nSSLProtocol -ALL +TLSv1.2 \n\nIf the TLS version is not TLS 1.2 or higher, according to NIST SP 800-52 Rev 2, or if non-FIPS-approved algorithms are enabled, this is a finding.",
          "fix": "# cat /etc/httpd/conf.d/ssl.conf | grep \"SSLProtocol - ALL +TLSv1.2\"\n\nEnsure the \"SSLProtocol\" is added to the ssl.conf file and looks like the following:\n\nSSLProtocol -ALL +TLSv1.2\n\nRestart Apache: apachectl restart"
        }
      },
      "SV-214231": {
        "tags": {
          "check_id__added": "C-15445r881409_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214231",
          "rid": "SV-214231r881410_rule",
          "fix_id": "F-15443r276954_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214231",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nSearch for the directive \"CustomLog\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"CustomLog\"\n\nIf the \"CustomLog\" directive is missing, this is a finding:\n\nAn example CustomLog directive would be as follows:\nCustomLog \"logs/access_log\" common or CustomLog “log/access_log” combined\n(May also be \"Logs/access_log\")"
        }
      },
      "SV-214232": {
        "tags": {
          "check_id__added": "C-15446r881411_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214232",
          "rid": "SV-214232r881413_rule",
          "fix_id": "F-15444r881412_fix",
          "nist": [
            "AU-3 a",
            "AU-3 b",
            "AU-3 c",
            "AU-3 d",
            "AU-3 e",
            "AU-3 f"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214232",
        "descs": {
          "check": "Verify the Log Configuration Module is loaded:\n# httpd -M | grep -i log_config_module\nOutput:  log_config_module (shared)\n\nIf the \"log_config_module\" is not enabled, this is a finding.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the directive \"LogFormat\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\nIf the \"LogFormat\" directive is missing, this is a finding:\n\nAn example is:\nLogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nUncomment the \"log_config_module\" module line.\n\nConfigure the \"LogFormat\" in the \"httpd.conf\" file to look like the following:\n\nLogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common\n\nRestart Apache: apachectl restart\n\nNote: The log format could be using different variables based on the environment; however it should be verified to ensure it is producing the same end result of logged elements.  \n\nThe logging elements required breakdown as follows:\n%a       remote IP address\n%A       local IP address\n%h       IP address of requesting client\n%H      the request protocol\n%l        user ID of the requesting client\n%m      request method\n%s        status\n%t        time the request was received\n%u       user ID of the remote user\n%U       URL path requested"
        }
      },
      "SV-214233": {
        "tags": {
          "check_id__added": "C-15447r881414_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214233",
          "rid": "SV-214233r881415_rule",
          "fix_id": "F-15445r505080_fix",
          "nist": [
            "AU-3 d"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214233",
        "desc": "Apache web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.\n\nAscertaining the correct source of the events (e.g., source IP) is important during forensic analysis. Correctly determining the source of events will add information to the overall reconstruction of the loggable event. By determining the source of the event correctly, analysis of the enterprise can be undertaken to determine if events tied to the source occurred in other areas within the enterprise.\n\nA web server behind a load balancer or proxy server, when not configured correctly, will record the load balancer or proxy server as the source of every loggable event. When looking at the information forensically, this information is not helpful in the investigation of events. The web server must record with each event the client source of the event.",
        "descs": {
          "check": "If Apache server is not behind a load balancer or proxy server, this check is Not Applicable.\n\nInterview the System Administrator to review the configuration of the Apache web server architecture and determine if inbound web traffic is passed through a proxy.\n\nIf the Apache web server is receiving inbound web traffic through a proxy, the audit logs must be reviewed to determine if correct source information is being passed through by the proxy server.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nReview the location of the log files.\n\nWhen the log file is displayed, review the source IP information in the log entries and verify the entries do not reflect the IP address of the proxy server.\nIf the log entries in the log file(s) reflect the IP address of the client in addition to the proxy address, this is not a finding.\nIf the log entries in the log file(s) reflect the IP address of the proxy server as the source, this is a finding.\n\nIf logs containing source/destination IPs can be obtained at the load balancer/proxy server, this is not a finding."
        }
      },
      "SV-214234": {
        "tags": {
          "check_id__added": "C-15448r276962_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214234",
          "rid": "SV-214234r879570_rule",
          "fix_id": "F-15446r276963_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214234",
        "descs": {}
      },
      "SV-214235": {
        "tags": {
          "check_id__added": "C-15449r881416_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214235",
          "rid": "SV-214235r881417_rule",
          "fix_id": "F-15447r276966_fix",
          "nist": [
            "AU-9 a"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214235",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nWork with the Administrator to locate the log files:\nExample: /etc/httpd/logs\n\nList the POSIX permission set and owner/group of the log files:\n# ls -laH /etc/httpd/logs/*log*\nOutput Example:\n-rw-r------. 1 apache root    0 Sep 27 2020 /etc/httpd/logs/access_log\n-rw-r------. 1 apache root 1235 Sep 23 2020 /etc/httpd/logs/access_log-20200927\n-rw-r------. 1 apache root  332 Sep 26 03:40 /etc/httpd/logs/error_log\n\nOnly system administrators and service accounts running the server should have permissions to the files and the POSIX permissions should be set to 640 or more restrictive\n\nIf any users other than those authorized have read access to the log files, this is a finding."
        }
      },
      "SV-214236": {
        "tags": {
          "check_id__added": "C-15450r276968_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214236",
          "rid": "SV-214236r881419_rule",
          "fix_id": "F-15448r881418_fix",
          "nist": [
            "AU-9 a",
            "AU-9 a"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214236",
        "descs": {
          "fix": "Determine the location of the \"ErrorLog\" directory in the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nOpen the \"httpd.conf\" file.\n\nLook for the \"ErrorLog\" directive.\n\nEnsure the permissions and ownership of all files in the Apache log directory are correct by executing the following commands as an administrative service account:\n \n# chown <'service account'> <'ErrorLog directive PATH'>/*"
        }
      },
      "SV-214237": {
        "tags": {
          "check_id__added": "C-15451r276971_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214237",
          "rid": "SV-214237r879582_rule",
          "fix_id": "F-15449r276972_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214237",
        "descs": {}
      },
      "SV-214238": {
        "tags": {
          "check_id__added": "C-15452r276974_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214238",
          "rid": "SV-214238r879584_rule",
          "fix_id": "F-15450r276975_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214238",
        "descs": {}
      },
      "SV-214239": {
        "tags": {
          "check_id__added": "C-15453r276977_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214239",
          "rid": "SV-214239r879587_rule",
          "fix_id": "F-15451r276978_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214239",
        "descs": {}
      },
      "SV-214240": {
        "tags": {
          "check_id__added": "C-15454r622512_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214240",
          "rid": "SV-214240r879587_rule",
          "fix_id": "F-15452r622513_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214240",
        "descs": {
          "check": "If the site requires the use of a particular piece of software, verify that the Information System Security Officer (ISSO) maintains documentation identifying this software as necessary for operations. The software must be operated at the vendor’s current patch level and must be a supported vendor release.\n\nIf programs or utilities that meet the above criteria are installed on the web server and appropriate documentation and signatures are in evidence, this is not a finding.\n\nDetermine whether the web server is configured with unnecessary software.\n\nDetermine whether processes other than those that support the web server are loaded and/or run on the web server.\n\nExamples of software that should not be on the web server are all web development tools, office suites (unless the web server is a private web development server), compilers, and other utilities that are not part of the web server suite or the basic operating system.\n\nCheck the directory structure of the server and verify that additional, unintended, or unneeded applications are not loaded on the system.\n\nIf, after review of the application on the system, there is no justification for the identified software, this is a finding.",
          "fix": "Remove any unnecessary applications per ISSO documentation."
        }
      },
      "SV-214241": {
        "tags": {
          "check_id__added": "C-15455r881420_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214241",
          "rid": "SV-214241r881421_rule",
          "fix_id": "F-15453r276984_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214241",
        "descs": {
          "check": "If the server is a proxy server and not a web server, this check is Not Applicable.\n\nIn a command line, run \"httpd -M | sort\" to view a list of installed modules.\n\nIf any of the following modules are present, this is a finding:\n\nproxy_module\nproxy_ajp_module\nproxy_balancer_module\nproxy_ftp_module\nproxy_http_module\nproxy_connect_module\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the directive \"ProxyRequest\" in the \"httpd.conf\" file. \nIf the ProxyRequest directive is set to “On”, this is a finding."
        }
      },
      "SV-214242": {
        "tags": {
          "check_id__added": "C-15456r622509_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214242",
          "rid": "SV-214242r879587_rule",
          "fix_id": "F-15454r622510_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214242",
        "descs": {
          "check": "Verify the document root directory and the configuration files do not provide for default index.html or welcome page.\n\nVerify the Apache User Manual content is not installed by checking the configuration files for manual location directives.\n\nVerify the Apache configuration files do not have the Server Status handler configured.\n\nVerify the Server Information handler is not configured.\n\nVerify that any other handler configurations such as perl-status are not enabled.\n\nIf any of these are present, this is a finding.",
          "fix": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as \"welcome.conf\" is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default \"Welcome\"\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n##<LocationMatch \"^/+$\">\n## Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##</LocationMatch>\n\nRemove the Apache User Manual content or comment out configurations referencing the manual.\n\nExample:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /server-status>\n## SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nRemove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /server-info>\n## SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nRemove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /perl-status>\n## SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nThe default source build provides extra content available in the <'INSTALLED PATH'>/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in \"httpd.conf\":\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1\n<IfModule proxy_html_module>\nInclude conf/extra/proxy-html.conf\n</IfModule>\n# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment."
        }
      },
      "SV-214243": {
        "tags": {
          "check_id__added": "C-15457r881422_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214243",
          "rid": "SV-214243r881424_rule",
          "fix_id": "F-15455r881423_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214243",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nReview any \"Action\" or \"AddHandler\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Action\"\n# cat /<path_to_file>/httpd.conf | grep -i \"AddHandler\"\n\nIf \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com, .bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\nIf this is not documented and approved by the Information System Security Officer (ISSO), this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nDisable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\nIf \"Action\" or \"AddHandler\" exist within the \"httpd.conf\" file and they configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\nRestart Apache: apachectl restart\n\nEnsure this process is documented and approved by the ISSO."
        }
      },
      "SV-214244": {
        "tags": {
          "check_id__added": "C-15458r881425_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214244",
          "rid": "SV-214244r881427_rule",
          "fix_id": "F-15456r881426_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214244",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nLocate \"cgi-bin\" files and directories enabled in the Apache configuration via \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and \"ScriptInterpreterSource\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Script\"\n\nIf any scripts are present that are not needed for application operation, this is a finding.\n\nIf this is not documented and approved by the Information System Security Officer (ISSO), this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nReview \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and \"ScriptInterpreterSource\" directives.\n\nGo into each directory and locate \"cgi-bin\" files. Remove any script that is not needed for application operation.\n\nEnsure this process is documented and approved by the ISSO."
        }
      },
      "SV-214245": {
        "tags": {
          "check_id__added": "C-15459r276995_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214245",
          "rid": "SV-214245r879587_rule",
          "fix_id": "F-15457r276996_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214245",
        "descs": {}
      },
      "SV-214246": {
        "tags": {
          "check_id__added": "C-15460r881428_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214246",
          "rid": "SV-214246r881430_rule",
          "fix_id": "F-15458r881429_fix",
          "nist": [
            "IA-5 (2) (a) (1)"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214246",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \nSearch for the \"Listen\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Listen\"\n\nVerify that any enabled \"Listen\" directives specify both an IP address and port number.\n\nIf the \"Listen\" directive is found with only an IP address or only a port number specified, this is finding.\n\nIf the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80), this is a finding.\n\nIf the \"Listen\" directive does not exist, this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nSet the \"Listen\" directive to listen on a specific IP address and port.\n\nRestart Apache: apachectl restart"
        }
      },
      "SV-214247": {
        "tags": {
          "check_id__added": "C-15461r277001_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214247",
          "rid": "SV-214247r879631_rule",
          "fix_id": "F-15459r277002_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214247",
        "descs": {}
      },
      "SV-214248": {
        "tags": {
          "satisfies__deleted": [],
          "check_id__added": "C-15462r505082_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214248",
          "rid": "SV-214248r879631_rule",
          "fix_id": "F-15460r505083_fix",
          "nist": [
            "CM-5 (1) (a)"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214248",
        "desc": "By separating Apache web server security functions from non-privileged users, roles can be developed that can then be used to administer the Apache web server. Forcing users to change from a non-privileged account to a privileged account when operating on the Apache web server or on security-relevant information forces users to only operate as a Web Server Administrator when necessary. Operating in this manner allows for better logging of changes and better forensic information and limits accidental changes to the Apache web server.\n\nTo limit changes to the Apache web server and limit exposure to any adverse effects from the changes, files such as the Apache web server application files, libraries, and configuration files must have permissions and ownership set properly to only allow privileged users access.",
        "descs": {}
      },
      "SV-214249": {
        "tags": {
          "check_id__added": "C-15463r277007_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214249",
          "rid": "SV-214249r879631_rule",
          "fix_id": "F-15461r277008_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214249",
        "descs": {}
      },
      "SV-214250": {
        "tags": {
          "check_id__added": "C-15464r881431_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214250",
          "rid": "SV-214250r881433_rule",
          "fix_id": "F-15462r881432_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214250",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the following directive:\n\n\"SessionMaxAge\"\n\n# cat /<path_to_file>/httpd.conf | grep -i \"SessionMaxAge\"\n\nVerify the value of \"SessionMaxAge\" is set to \"600\" or less.\n\nIf the \"SessionMaxAge\" does not exist or is set to more than \"600\", this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd the following line to the \"httpd.conf\" file:\n\nSessionMaxAge 600\n\nRestart Apache: apachectl restart"
        }
      },
      "SV-214251": {
        "tags": {
          "check_id__added": "C-15465r457879_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214251",
          "rid": "SV-214251r879638_rule",
          "fix_id": "F-15463r277014_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214251",
        "descs": {
          "check": "Note: For web servers acting as a public facing with static content that do not require authentication, this is Not Applicable.\n\nReview the web server documentation and configuration to determine if cookies between the web server and client are accessible by applications or web servers other than the originating pair.\n\ngrep SessionCookieName <'INSTALL LOCATION'>/mod_session.conf\n\nConfirm that the \"HttpOnly\" and \"Secure\" settings are present in the line returned.\n\nConfirm that the line does not contain the \"Domain\" cookie setting.\n\nVerify the \"headers_module (shared)\" module is loaded in the web server:\n\n\"# httpd -M \nVerify \" headers_module (shared)\" is returned in the list of Loaded Modules from the above command.\"\n\nIf the \"headers_module (shared)\" is not loaded, this is a finding."
        }
      },
      "SV-214252": {
        "tags": {
          "check_id__added": "C-15466r881434_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214252",
          "rid": "SV-214252r881435_rule",
          "fix_id": "F-15464r277017_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214252",
        "descs": {
          "check": "Review the web server documentation and deployed configuration to determine the length of the generated session identifiers.\n\nFirst ensure that \"session_crypto\" is enabled:\n\nhttpd -M |grep session_crypto\n\nIf the above command returns \"session_crypto_module\", the module is enabled in the running server.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nReview the \"httpd.conf\" file.\n\nIf the \"SessionCryptoCipher\" is not used or \"SessionCryptoCipher\" is not set to \"aes256\", this is a finding."
        }
      },
      "SV-214253": {
        "tags": {
          "check_id__added": "C-15467r881436_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214253",
          "rid": "SV-214253r881438_rule",
          "fix_id": "F-15465r881437_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214253",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify the \"unique_id_module\" is loaded:\n\nrun httpd -M | grep unique_id \nIf no unique_id is returned, this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nLoad the \"unique_id_module\". \n\nExample: LoadModule unique_id_module modules/mod_unique_id.so\n\nRestart Apache: apachectl restart"
        }
      },
      "SV-214254": {
        "tags": {
          "check_id__added": "C-15468r277022_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214254",
          "rid": "SV-214254r879640_rule",
          "fix_id": "F-15466r277023_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214254",
        "descs": {}
      },
      "SV-214255": {
        "tags": {
          "check_id__added": "C-15469r881439_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214255",
          "rid": "SV-214255r881441_rule",
          "fix_id": "F-15467r881440_fix",
          "nist": [
            "SC-5 a"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214255",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify that the \"Timeout\" directive is specified to have a value of \"10\" seconds or less.\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Timeout\"\n\nIf the \"Timeout\" directive is not configured or is set for more than \"10\" seconds, this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd or modify the \"Timeout\" directive to have a value of \"10\" seconds or less:\n\n\"Timeout 10\""
        }
      },
      "SV-214256": {
        "tags": {
          "check_id__added": "C-15470r881442_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214256",
          "rid": "SV-214256r881444_rule",
          "fix_id": "F-15468r881443_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214256",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nIf the \"ErrorDocument\" directive is not being used for custom error pages for \"4xx\" or \"5xx\" HTTP status codes, this is a finding.\n\n# cat /<path_to_file>/httpd.conf | grep -i \"ErrorDocument\"",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nUse the \"ErrorDocument\" directive to enable custom error pages for 4xx or 5xx HTTP status codes.\n\nErrorDocument 500 \"Sorry, our script crashed. Oh dear\"\nErrorDocument 500 /cgi-bin/crash-recover\nErrorDocument 500 http://error.example.com/server_error.html\nErrorDocument 404 /errors/not_found.html\nErrorDocument 401 /subscription/how_to_subscribe.html\n\nThe syntax of the ErrorDocument directive is:\n\nErrorDocument <3-digit-code> <action>\n\nAdditional information: \n\nhttps://httpd.apache.org/docs/2.4/custom-error.html"
        }
      },
      "SV-214257": {
        "tags": {
          "check_id__added": "C-15471r881445_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214257",
          "rid": "SV-214257r881447_rule",
          "fix_id": "F-15469r881446_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214257",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nFor any enabled \"TraceEnable\" directives, verify they are part of the server-level configuration (i.e., not nested in a \"Directory\" or \"Location\" directive). \n\nVerify that the \"TraceEnable\" directive is set to \"Off\":\n\n# cat /<path_to_file>/httpd.conf | grep -i \"TraceEnable\"\n\nIf the \"TraceEnable\" directive is not part of the server-level configuration and/or is not set to \"Off\", this is a finding.\n\nIf the directive does not exist in the \"conf\" file, this is a finding because the default value is \"On\".\n\nIf the \"LogLevel\" directive is not being used, this is a finding: \n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogLevel\"",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd or set the value of \"TraceEnable\" to \"Off\". \n\nSet the \"LogLevel\" directive to \"info\" or below."
        }
      },
      "SV-214258": {
        "tags": {
          "check_id__added": "C-15472r881448_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214258",
          "rid": "SV-214258r881450_rule",
          "fix_id": "F-15470r881449_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214258",
        "desc": "Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user. By closing sessions after a set period of inactivity, the Apache web server can make certain that those sessions that are not closed through the user logging out of an application are eventually closed. mod_reqtimeout is an Apache module designed to shut down connections from clients taking too long to send their request, as seen in many attacks. This module provides a directive that allows Apache to close the connection if it senses that the client is not sending data quickly enough.\n\nAcceptable values are 5 minutes for high-value applications, 10 minutes for medium-value applications, and 20 minutes for low-value applications.",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify the \"reqtimeout_module\" is loaded:\n\nChange to the root directory of Apache and run the following command to verify the \"reqtimeout_module\" is loaded:\n\n# httpd -M | grep reqtimeout_module\nOutout: reqtimeout_module (shared)\n\nIf the \"reqtimeout_module\" is not loaded, this is a finding.\n\nVerify the \"RequestReadTimeout\" directive is configured. \nExample: RequestReadTimeout handshake=5 header=10 body=30\nAllows for 5 seconds to complete the TLS handshake, 10 seconds to receive the request headers, and 30 seconds for receiving the request body.\nThe values will depend upon the website. \nThe intent of this requirement is to ensure the RequestReadTimeout is explicitly configured.\nIf the \"reqtimeout_module\" is loaded and the \"RequestReadTimeout\" directive is not configured, this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nLoad the \"reqtimeout_module\".\n\nSet the \"RequestReadTimeout\" directive to specific values applicable to the website."
        }
      },
      "SV-214259": {
        "tags": {
          "check_id__added": "C-15473r881451_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214259",
          "rid": "SV-214259r881452_rule",
          "fix_id": "F-15471r277038_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214259",
        "descs": {
          "check": "If external controls such as host-based firewalls are used to restrict this access, this check is Not Applicable.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the \"RequireAll\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"RequireAll\"\n\nIf \"RequireAll\" is not configured, or IP ranges configured to allow are not restrictive enough to prevent connections from nonsecure zones, this is a finding."
        }
      },
      "SV-214260": {
        "tags": {
          "check_id__added": "C-15474r881453_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214260",
          "rid": "SV-214260r881454_rule",
          "fix_id": "F-15472r854699_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214260",
        "descs": {
          "check": "Interview the SA and Web Manager.\n\nAsk for documentation for the Apache web server administration.\n\nVerify there are documented procedures for shutting down an Apache website in the event of an attack. \n\nThe procedure must, at a minimum, provide the following steps:\n\n1. Determine the respective website for the application at risk of an attack.\n\n2. Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file|pidlog'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n-D DEFAULT_PIDLOG=”/run/httpd/httpd.pid”\n \n3. Search for the PidFile runtime directive. (This example uses the combined results of HTTPD_ROOT and SERVER_CONFIG_FILE, above.) \n\n# grep -i pidfile /etc/httpd/conf/httpd.conf  \n\n4. If this command returns a result, use this value in the kill command, otherwise, use the DEFAULT_PIDLOG value, above.\n\n# kill -TERM `cat <FULLY-QUALIFIED_PIDFILE_FILENAME>`\nNote: These should be documented steps, validators should not run kill commands while reviewing production systems.\n\nIf the web server is not capable of or cannot be configured to disconnect or disable remote access to the hosted applications when necessary, this is a finding.",
          "fix": "Prepare documented procedures for shutting down an Apache website in the event of an attack.\n\nThe procedure should, at a minimum, provide the following steps:\n\nSearch for the PidFile runtime directive. (This example uses the combined results of HTTPD_ROOT and SERVER_CONFIG_FILE, above.) If this command returns a result, use this value in the kill command, otherwise, use the DEFAULT_PIDLOG value, above.\n\nIn a command line, enter the following command:\n\n# grep -i pidfile /etc/httpd/conf/httpd.conf  \n\n# kill -TERM 'cat <FULLY-QUALIFIED_PIDFILE_FILENAME>'"
        }
      },
      "SV-214261": {
        "tags": {
          "check_id__added": "C-15475r277043_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214261",
          "rid": "SV-214261r879717_rule",
          "fix_id": "F-15473r277044_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214261",
        "descs": {}
      },
      "SV-214262": {
        "tags": {
          "check_id__added": "C-15476r277046_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214262",
          "rid": "SV-214262r879730_rule",
          "fix_id": "F-15474r277047_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214262",
        "descs": {}
      },
      "SV-214263": {
        "tags": {
          "check_id__added": "C-15477r277049_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214263",
          "rid": "SV-214263r879731_rule",
          "fix_id": "F-15475r277050_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214263",
        "descs": {}
      },
      "SV-214264": {
        "tags": {
          "check_id__added": "C-15478r277052_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214264",
          "rid": "SV-214264r879731_rule",
          "fix_id": "F-15476r277053_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214264",
        "descs": {}
      },
      "SV-214265": {
        "tags": {
          "check_id__added": "C-15479r881455_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214265",
          "rid": "SV-214265r881456_rule",
          "fix_id": "F-15477r277056_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214265",
        "descs": {
          "check": "Review the web server documentation and configuration to determine the time stamp format for log data.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the \"log_config_module\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\nVerify the \"LogFormat\" directive exists.\n\nIf the \"LogFormat\" directive does not exist, this is a finding.\n\nVerify the \"LogFormat\" line contains the \"%t\" flag.\n \nIf \"%t\" flag is not present, time is not mapped to UTC or GMT time, this is a finding."
        }
      },
      "SV-214266": {
        "tags": {
          "check_id__added": "C-15480r277058_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214266",
          "rid": "SV-214266r879756_rule",
          "fix_id": "F-15478r277059_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214266",
        "descs": {}
      },
      "SV-214267": {
        "tags": {
          "check_id__added": "C-15481r881457_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214267",
          "rid": "SV-214267r881458_rule",
          "fix_id": "F-15479r277062_fix",
          "nist": [
            "SC-5 a"
          ]
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214267",
        "descs": {
          "check": "Review the web server documentation and deployed configuration to determine where the process ID is stored and which utilities are used to start/stop the web server.\n\nLocate the httpd.pid file and list its permission set and owner/group\n\n# find / -name “httpd.pid\nOutput should be similar to: /run/httpd/httpd.pid \n\n# ls -laH /run/httpd/httpd.pid\nOutput should be similar -rw-r--r--. 1 root root 5 Jun 13 03:18 /run/httpd/httpd.pid\n\nIf the file owner/group is not an administrative service account, this is a finding.\n\nIf permission set is not 644 or more restrictive, this is a finding.\n \nVerify the Apache service utilities (binaries) have the correct permission set and are user/group owned by an administrator account\n\n# ls -laH /usr/sbin/service\nOutput should be similar: -rwxr-xr-x. 1 root root 3.2K Aug 19, 2019 /usr/sbin/service\n\n# ls -laH /usr/sbin/apachectl\nOutput should be similar: -rwxr-xr-x. 1 root root 4.2K Oct 8, 2019 /usr/sbin/apachectl\n \nIf the service utilities owner/group is not an administrative service account, this is a finding.\n \nIf permission set is not 755 or more restrictive, this is a finding."
        }
      },
      "SV-214268": {
        "tags": {
          "check_id__added": "C-15482r881459_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214268",
          "rid": "SV-214268r881461_rule",
          "fix_id": "F-15480r881460_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214268",
        "descs": {
          "check": "Verify the session cookie module is loaded\n\n# httpd -M | grep -i session_cookie_module\nOutput should look similar to: session_cookie_module (shared)\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the directive \"Session\" in the \"httpd.conf\" file:\n\n# cat httpd.conf  | grep -i \"Session\"\nOutput should be similar to: \nSession on\nSessionCookieName httpOnly Secure\nSessionCryptoCipher aes256\nSessionMaxAge 600\n\nNote: SSL directives can also be located in /etc/httpd/conf.d/ssl.conf.\n\nIf the \"Session\" and \"SessionCookieName\" directives are not present, this is a finding.\n\nIf \"Session\" is not set to \"on\" and \"SessionCookieName\" does not contain \"httpOnly\" and \"secure\", this is a finding.",
          "fix": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n \nNOTE: SSL directives may also be located in /etc/httpd/conf.d/ssl.conf.\n\nSet \"Session\" to \"on\".\n\nEnsure the \"SessionCookieName\" directive includes \"httpOnly\" and \"secure\"."
        }
      },
      "SV-214269": {
        "tags": {
          "check_id__added": "C-15483r881462_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214269",
          "rid": "SV-214269r881463_rule",
          "fix_id": "F-15481r505086_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214269",
        "desc": "During the initial setup of a Transport Layer Security (TLS) connection to the Apache web server, the client sends a list of supported cipher suites in order of preference. The Apache web server will reply with the cipher suite it will use for communication from the client list. If an attacker can intercept the submission of cipher suites to the Apache web server and place, as the preferred cipher suite, a weak export suite, the encryption used for the session becomes easy for the attacker to break, often within minutes to hours.\n\nConfiguring the Apache server with only strong ciphersuites, denying or disabling weak ciphersuites, will prevent this vulnerability.",
        "descs": {
          "check": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" and \"ssl.conf\" files:\n\nSearch the httpd.conf and ssl.conf file for the following uncommented directive: SSLCipherSuite\n\n# cat httpd.conf  | grep -i SSLCipherSuite\nOutput: None\n\n# cat /etc/httpd/conf.d/ssl.conf | grep -i SSLCipherSuite\nOutput: SSLCipherSuite HIGH:3DES:!NULL:!MD5:!SEED:!IDEA:!EXPORT\n\nFor all enabled SSLCipherSuite directives, ensure the cipher specification string contains the kill cipher from list option for all export cipher suites, i.e., !EXPORT, which may be abbreviated !EXP as in the following example:\n\nExample: SSLCipherSuite=\"HIGH:MEDIUM:!MD5!EXP:!NULL:!LOW:!ADH\n\nIf the SSLCipherSuite directive does not contain !EXPORT or !EXP or there are no enabled SSLCipherSuite directives, this is a finding.",
          "fix": "Update the cipher specification string for all enabled SSLCipherSuite directives to include !EXPORT."
        }
      },
      "SV-214270": {
        "tags": {
          "check_id__added": "C-15484r854710_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214270",
          "rid": "SV-214270r879827_rule",
          "fix_id": "F-15482r277071_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214270",
        "descs": {
          "check": "Determine the most recent patch level of the Apache Web Server 2.4 software, as posted on the Apache HTTP Server Project website. If the Apache installation is a proprietary installation supporting an application and is supported by a vendor, determine the most recent patch level of the vendor’s installation.\n\nIn a command line, type \"httpd -v\".\n\nIf the version is more than one version behind the most recent patch level, this is a finding."
        }
      },
      "SV-214271": {
        "tags": {
          "check_id__added": "C-15485r277073_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214271",
          "rid": "SV-214271r879887_rule",
          "fix_id": "F-15483r277074_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214271",
        "descs": {}
      },
      "SV-214272": {
        "tags": {
          "check_id__added": "C-15486r277076_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214272",
          "rid": "SV-214272r879887_rule",
          "fix_id": "F-15484r277077_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214272",
        "descs": {}
      },
      "SV-214273": {
        "tags": {
          "check_id__added": "C-15487r277079_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214273",
          "rid": "SV-214273r879887_rule",
          "fix_id": "F-15485r277080_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214273",
        "descs": {}
      },
      "SV-214274": {
        "tags": {
          "check_id__added": "C-15488r277082_chk",
          "documentable__added": false,
          "legacy__added": [],
          "gid": "V-214274",
          "rid": "SV-214274r879887_rule",
          "fix_id": "F-15486r277083_fix"
        },
        "refs": [
          "DPMS Target Apache Server 2.4 UNIX Server"
        ],
        "id": "SV-214274",
        "descs": {}
      }
    }
  },
  "rawDiff": {
    "addedControlIDs": [],
    "removedControlIDs": [
      "V-92759"
    ],
    "renamedControlIDs": {
      "V-92597": "SV-214228",
      "V-92599": "SV-214229",
      "V-92601": "SV-214230",
      "V-92607": "SV-214231",
      "V-92609": "SV-214232",
      "V-92621": "SV-214233",
      "V-92627": "SV-214234",
      "V-92629": "SV-214235",
      "V-92631": "SV-214236",
      "V-92635": "SV-214237",
      "V-92637": "SV-214238",
      "V-92639": "SV-214239",
      "V-92641": "SV-214240",
      "V-92643": "SV-214241",
      "V-92645": "SV-214242",
      "V-92653": "SV-214243",
      "V-92655": "SV-214244",
      "V-92659": "SV-214245",
      "V-92661": "SV-214246",
      "V-92671": "SV-214247",
      "V-92673": "SV-214248",
      "V-92675": "SV-214249",
      "V-92677": "SV-214250",
      "V-92679": "SV-214251",
      "V-92687": "SV-214252",
      "V-92689": "SV-214253",
      "V-92695": "SV-214254",
      "V-92697": "SV-214255",
      "V-92699": "SV-214256",
      "V-92701": "SV-214257",
      "V-92705": "SV-214258",
      "V-92709": "SV-214259",
      "V-92711": "SV-214260",
      "V-92713": "SV-214261",
      "V-92715": "SV-214262",
      "V-92717": "SV-214263",
      "V-92719": "SV-214264",
      "V-92723": "SV-214265",
      "V-92727": "SV-214266",
      "V-92731": "SV-214267",
      "V-92741": "SV-214268",
      "V-92745": "SV-214269",
      "V-92749": "SV-214270",
      "V-92751": "SV-214271",
      "V-92753": "SV-214272",
      "V-92755": "SV-214273",
      "V-92757": "SV-214274"
    },
    "changedControlIDs": [
      "SV-214228",
      "SV-214229",
      "SV-214230",
      "SV-214231",
      "SV-214232",
      "SV-214233",
      "SV-214234",
      "SV-214235",
      "SV-214236",
      "SV-214237",
      "SV-214238",
      "SV-214239",
      "SV-214240",
      "SV-214241",
      "SV-214242",
      "SV-214243",
      "SV-214244",
      "SV-214245",
      "SV-214246",
      "SV-214247",
      "SV-214248",
      "SV-214249",
      "SV-214250",
      "SV-214251",
      "SV-214252",
      "SV-214253",
      "SV-214254",
      "SV-214255",
      "SV-214256",
      "SV-214257",
      "SV-214258",
      "SV-214259",
      "SV-214260",
      "SV-214261",
      "SV-214262",
      "SV-214263",
      "SV-214264",
      "SV-214265",
      "SV-214266",
      "SV-214267",
      "SV-214268",
      "SV-214269",
      "SV-214270",
      "SV-214271",
      "SV-214272",
      "SV-214273",
      "SV-214274"
    ],
    "addedControls": {},
    "changedControls": {
      "SV-214228": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('KeepAlive') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).KeepAlive.nil?\n    apache_conf(config_path).KeepAlive.each do |value|\n      describe 'KeepAlive value should be set to On' do\n        subject { value }\n        it { should cmp 'On' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('MaxKeepAliveRequests') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).MaxKeepAliveRequests.nil?\n    apache_conf(config_path).MaxKeepAliveRequests.each do |value|\n      describe 'If the value of \"MaxKeepAliveRequests\" is set to a value less than \"100\" or does not exist, this is a finding.' do\n        subject { value }\n        it { should cmp < '100' }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15442r881402_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102685",
            "V-92597"
          ],
          "gid": {
            "__old": "V-92597",
            "__new": "V-214228"
          },
          "rid": {
            "__old": "SV-102685r1_rule",
            "__new": "SV-214228r881404_rule"
          },
          "fix_id": {
            "__old": "F-98839r1_fix",
            "__new": "F-15440r881403_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92597",
          "__new": "SV-214228"
        },
        "title": {
          "__old": "The Apache web server must limit the number of allowed simultaneous\nsession requests.",
          "__new": "The Apache web server must limit the number of allowed simultaneous session requests."
        },
        "desc": {
          "__old": "Apache web server management includes the ability to control the\nnumber of users and user sessions that utilize an Apache web server. Limiting\nthe number of allowed users and sessions per user is helpful in limiting risks\nrelated to several types of denial-of-service (DOS) attacks.\n\n    Although there is some latitude concerning the settings, they should follow\nDoD-recommended values and be configurable to allow for future DoD direction.\nWhile the DoD will specify recommended values, the values can be adjusted to\naccommodate the operational requirements of a given system.",
          "__new": "Apache web server management includes the ability to control the number of users and user sessions that utilize an Apache web server. Limiting the number of allowed users and sessions per user is helpful in limiting risks related to several types of denial-of-service (DOS) attacks.\n\nAlthough there is some latitude concerning the settings, they should follow DoD-recommended values and be configurable to allow for future DoD direction. While the DoD will specify recommended values, the values can be adjusted to accommodate the operational requirements of a given system."
        },
        "descs": {
          "default__deleted": "Apache web server management includes the ability to control the\nnumber of users and user sessions that utilize an Apache web server. Limiting\nthe number of allowed users and sessions per user is helpful in limiting risks\nrelated to several types of denial-of-service (DOS) attacks.\n\n    Although there is some latitude concerning the settings, they should follow\nDoD-recommended values and be configurable to allow for future DoD direction.\nWhile the DoD will specify recommended values, the values can be adjusted to\naccommodate the operational requirements of a given system.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directives \"KeepAlive\" and \"MaxKeepAliveRequests\" in the\n\"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"keepalive\"\n\n    KeepAlive On\n    MaxKeepAliveRequests 100\n\n    If the value of \"KeepAlive\" is set to \"off\" or does not exist, this is\na finding.\n\n    If the value of \"MaxKeepAliveRequests\" is set to a value less than\n\"100\" or does not exist, this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nSearch for the directives \"KeepAlive\" and \"MaxKeepAliveRequests\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"keepalive\"\n\nKeepAlive On\nMaxKeepAliveRequests 100\n\nIf the value of \"KeepAlive\" is set to \"off\" or does not exist, this is a finding.\n\nIf the value of \"MaxKeepAliveRequests\" is set to a value less than \"100\" or does not exist, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set the \"KeepAlive\" directive to a value of \"on\"; add the directive if\nit does not exist.\n\n    Set the \"MaxKeepAliveRequests\" directive to a value of \"100\" or\ngreater; add the directive if it does not exist.\n\n    Restart Apache: apachectl restart",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSet the \"KeepAlive\" directive to a value of \"on\"; add the directive if it does not exist.\n\nSet the \"MaxKeepAliveRequests\" directive to a value of \"100\" or greater; add the directive if it does not exist.\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214229": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('LoadModule') { should include 'session_module modules/mod_session.so' }\n    its('LoadModule') { should include 'usertrack_module modules/mod_usertrack.so' }\n  end",
        "tags": {
          "check_id__added": "C-15443r881405_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102687",
            "V-92599"
          ],
          "gid": {
            "__old": "V-92599",
            "__new": "V-214229"
          },
          "rid": {
            "__old": "SV-102687r2_rule",
            "__new": "SV-214229r881406_rule"
          },
          "fix_id": {
            "__old": "F-98841r1_fix",
            "__new": "F-15441r276948_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92599",
          "__new": "SV-214229"
        },
        "desc": {
          "__old": "Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.",
          "__new": "Session management is the practice of protecting the bulk of the user authorization and identity information. This data can be stored on the client system or on the server.\n\nWhen the session information is stored on the client, the session ID, along with the user authorization and identity information, is sent along with each client request and is stored in a cookie, embedded in the uniform resource locator (URL), or placed in a hidden field on the displayed form. Each of these offers advantages and disadvantages. The biggest disadvantage to all three is the possibility of the hijacking of a session along with all of the user's credentials.\n\nWhen the user authorization and identity information is stored on the server in a protected and encrypted database, the communication between the client and Apache web server will only send the session identifier, and the server can then retrieve user credentials for the session when needed. If, during transmission, the session were to be hijacked, the user's credentials would not be compromised."
        },
        "descs": {
          "default__deleted": "Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"session_module\" and \"usertrack_module\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"session_module\"\n    # cat /<path_to_file>/httpd.conf | grep -i \"usertrack_module\"\n    If \"session_module\" and \"usertrack_module\" are not enabled or do not\nexist, this is a finding.\n\n    Alternatively, issue the following command:\n    httpd -M |grep -E 'session_module|usertrack'\n    If results do not return both usertrack_module (shared) and session_module\n(shared), this is a finding.",
            "__new": "Issue the following command:\nhttpd -M |grep -E 'session_module|usertrack'\n\nExpected output:\nusertrack_module (shared)\nsession_module (shared)\n\nIf results do not return both \"usertrack_module (shared)\" and \"session_module (shared)\", this is a finding.\n\nAlternatively, determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the \"session_module\" and \"usertrack_module\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"session_module\"\n# cat /<path_to_file>/httpd.conf | grep -i \"usertrack_module\"\nIf \"session_module\" and \"usertrack_module\" are not enabled or do not exist, this is a finding."
          }
        }
      },
      "SV-214230": {
        "describe__deleted": "  config_path = input('config_path')\n\n  ssl_module = command('httpd -M | grep ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLCACertificateFile') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCACertificateFile.nil?\n    ca_path = File.dirname(apache_conf(config_path).SSLCACertificateFile[0])\n    ca_bundle = File.join(ca_path, 'ca-bundle.crt')\n    describe 'Examine CA Bundle' do\n      skip \"Check #{ca_bundle} to determine if the trusted CAs are DoD approved\"\n    end\n  end",
        "tags": {
          "check_id__added": "C-15444r881407_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92601",
            "SV-102689"
          ],
          "gid": {
            "__old": "V-92601",
            "__new": "V-214230"
          },
          "rid": {
            "__old": "SV-102689r1_rule",
            "__new": "SV-214230r881408_rule"
          },
          "fix_id": {
            "__old": "F-98843r1_fix",
            "__new": "F-15442r803399_fix"
          },
          "nist": [
            [
              " "
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              "-",
              "AC-17\n(2)"
            ],
            [
              "+",
              "AC-17 (2)"
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              " "
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92601",
          "__new": "SV-214230"
        },
        "title": {
          "__old": "The Apache web server must use cryptography to protect the integrity\nof remote sessions.",
          "__new": "The Apache web server must use cryptography to protect the integrity of remote sessions."
        },
        "desc": {
          "__old": "Data exchanged between the user and the Apache web server can range\nfrom static display data to credentials used to log on to the hosted\napplication. Even when data appears to be static, the non-displayed logic in a\nweb page may expose business logic or trusted system relationships. The\nintegrity of all the data being exchanged between the user and the Apache web\nserver must always be trusted. To protect the integrity and trust, encryption\nmethods should be used to protect the complete communication session.",
          "__new": "Data exchanged between the user and the Apache web server can range from static display data to credentials used to log on to the hosted application. Even when data appears to be static, the non-displayed logic in a web page may expose business logic or trusted system relationships. The integrity of all the data being exchanged between the user and the Apache web server must always be trusted. To protect the integrity and trust, encryption methods should be used to protect the complete communication session.\n\n"
        },
        "descs": {
          "default__deleted": "Data exchanged between the user and the Apache web server can range\nfrom static display data to credentials used to log on to the hosted\napplication. Even when data appears to be static, the non-displayed logic in a\nweb page may expose business logic or trusted system relationships. The\nintegrity of all the data being exchanged between the user and the Apache web\nserver must always be trusted. To protect the integrity and trust, encryption\nmethods should be used to protect the complete communication session.",
          "rationale__deleted": "",
          "check": {
            "__old": "In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not found, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"SSLCACertificateFile\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLCACertificateFile\"\n\n    Review the path of the \"SSLCACertificateFile\" directive.\n\n    Review the contents of <'path of SSLCACertificateFile'>\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.",
            "__new": "Verify the \"ssl module\" module is loaded\n# httpd -M | grep -i ssl_module\nOutput:  ssl_module (shared) \n\nIf the \"ssl_module\" is not found, this is a finding. \n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the directive \"SSLProtocol\" in the \"httpd.conf\" file: \n\n# cat /<path_to_file>/httpd.conf | grep -i \"SSLProtocol\" \n\nIf the \"SSLProtocol\" directive is missing or does not look like the following, this is a finding: \n\nSSLProtocol -ALL +TLSv1.2 \n\nIf the TLS version is not TLS 1.2 or higher, according to NIST SP 800-52 Rev 2, or if non-FIPS-approved algorithms are enabled, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLProtocol\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart",
            "__new": "# cat /etc/httpd/conf.d/ssl.conf | grep \"SSLProtocol - ALL +TLSv1.2\"\n\nEnsure the \"SSLProtocol\" is added to the ssl.conf file and looks like the following:\n\nSSLProtocol -ALL +TLSv1.2\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214231": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('CustomLog') { should_not be_empty }\n  end",
        "tags": {
          "check_id__added": "C-15445r881409_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102695",
            "V-92607"
          ],
          "gid": {
            "__old": "V-92607",
            "__new": "V-214231"
          },
          "rid": {
            "__old": "SV-102695r3_rule",
            "__new": "SV-214231r881410_rule"
          },
          "fix_id": {
            "__old": "F-98849r1_fix",
            "__new": "F-15443r276954_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92607",
          "__new": "SV-214231"
        },
        "desc": {
          "__old": "The server error logs are invaluable because they can also be used to\nidentify potential problems and enable proactive remediation. Log data can\nreveal anomalous behavior such as “not found” or “unauthorized” errors that may\nbe an evidence of attack attempts. Failure to enable error logging can\nsignificantly reduce the ability of Web Administrators to detect or remediate\nproblems. The CustomLog directive specifies the log file, syslog facility, or\npiped logging utility.",
          "__new": "The server error logs are invaluable because they can also be used to identify potential problems and enable proactive remediation. Log data can reveal anomalous behavior such as “not found” or “unauthorized” errors that may be an evidence of attack attempts. Failure to enable error logging can significantly reduce the ability of Web Administrators to detect or remediate problems. The CustomLog directive specifies the log file, syslog facility, or piped logging utility."
        },
        "descs": {
          "default__deleted": "The server error logs are invaluable because they can also be used to\nidentify potential problems and enable proactive remediation. Log data can\nreveal anomalous behavior such as “not found” or “unauthorized” errors that may\nbe an evidence of attack attempts. Failure to enable error logging can\nsignificantly reduce the ability of Web Administrators to detect or remediate\nproblems. The CustomLog directive specifies the log file, syslog facility, or\npiped logging utility.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"CustomLog\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"CustomLog\"\n\n    If the \"CustomLog\" directive is missing, this is a finding:\n\n    An example CustomLog directive would be as follows:\n    CustomLog \"logs/access_log\" common or CustomLog “log/access_log” combined\n    (May also be \"Logs/access_log\")",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nSearch for the directive \"CustomLog\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"CustomLog\"\n\nIf the \"CustomLog\" directive is missing, this is a finding:\n\nAn example CustomLog directive would be as follows:\nCustomLog \"logs/access_log\" common or CustomLog “log/access_log” combined\n(May also be \"Logs/access_log\")"
          },
          "fix": {
            "__old": "Edit the \"httpd.conf\" file and enter the name, path and level\nfor the CustomLog.",
            "__new": "Edit the \"httpd.conf\" file and enter the name, path and level for the CustomLog."
          }
        }
      },
      "SV-214232": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('LogFormat') { should_not be_empty }\n  end\n\n  describe 'Module log_config_module should be installed' do\n    subject { command('httpd -M | grep -i log_config_module').stdout.strip }\n    it { should_not cmp '' }\n  end",
        "tags": {
          "check_id__added": "C-15446r881411_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102697",
            "V-92609"
          ],
          "gid": {
            "__old": "V-92609",
            "__new": "V-214232"
          },
          "rid": {
            "__old": "SV-102697r2_rule",
            "__new": "SV-214232r881413_rule"
          },
          "fix_id": {
            "__old": "F-98851r1_fix",
            "__new": "F-15444r881412_fix"
          },
          "nist": [
            [
              "-",
              "AU-3"
            ],
            [
              "-",
              "AU-3"
            ],
            [
              "-",
              "AU-3"
            ],
            [
              "-",
              "AU-3"
            ],
            [
              "-",
              "AU-3"
            ],
            [
              "+",
              "AU-3 a"
            ],
            [
              "+",
              "AU-3 b"
            ],
            [
              "+",
              "AU-3 c"
            ],
            [
              "+",
              "AU-3 d"
            ],
            [
              "+",
              "AU-3 e"
            ],
            [
              " "
            ],
            [
              " "
            ],
            [
              "-",
              "AU-3"
            ],
            [
              "+",
              "AU-3 f"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92609",
          "__new": "SV-214232"
        },
        "title": {
          "__old": "The Apache web server must generate, at a minimum, log records for\nsystem startup and shutdown, system access, and system authentication events.",
          "__new": "The Apache web server must generate, at a minimum, log records for system startup and shutdown, system access, and system authentication events."
        },
        "desc": {
          "__old": "Log records can be generated from various components within the Apache\nweb server (e.g., httpd, plug-ins to external backends, etc.). From a web\nserver perspective, certain specific Apache web server functionalities may be\nlogged as well. The Apache web server must allow the definition of what events\nare to be logged. As conditions change, the number and types of events to be\nlogged may change, and the Apache web server must be able to facilitate these\nchanges.\n\n    The minimum list of logged events should be those pertaining to system\nstartup and shutdown, system access, and system authentication events. If these\nevents are not logged at a minimum, any type of forensic investigation would be\nmissing pertinent information needed to replay what occurred.",
          "__new": "Log records can be generated from various components within the Apache web server (e.g., httpd, plug-ins to external backends, etc.). From a web server perspective, certain specific Apache web server functionalities may be logged as well. The Apache web server must allow the definition of what events are to be logged. As conditions change, the number and types of events to be logged may change, and the Apache web server must be able to facilitate these changes.\n\nThe minimum list of logged events should be those pertaining to system startup and shutdown, system access, and system authentication events. If these events are not logged at a minimum, any type of forensic investigation would be missing pertinent information needed to replay what occurred.\n\n\n"
        },
        "descs": {
          "default__deleted": "Log records can be generated from various components within the Apache\nweb server (e.g., httpd, plug-ins to external backends, etc.). From a web\nserver perspective, certain specific Apache web server functionalities may be\nlogged as well. The Apache web server must allow the definition of what events\nare to be logged. As conditions change, the number and types of events to be\nlogged may change, and the Apache web server must be able to facilitate these\nchanges.\n\n    The minimum list of logged events should be those pertaining to system\nstartup and shutdown, system access, and system authentication events. If these\nevents are not logged at a minimum, any type of forensic investigation would be\nmissing pertinent information needed to replay what occurred.",
          "rationale__deleted": "",
          "check": {
            "__old": "In a command line, run \"httpd -M | grep -i log_config_module\".\n\n    If the \"log_config_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"LogFormat\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\n    If the \"LogFormat\" directive is missing, this is a finding:\n\n    An example is:\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common",
            "__new": "Verify the Log Configuration Module is loaded:\n# httpd -M | grep -i log_config_module\nOutput:  log_config_module (shared)\n\nIf the \"log_config_module\" is not enabled, this is a finding.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the directive \"LogFormat\" in the \"httpd.conf\" file:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\nIf the \"LogFormat\" directive is missing, this is a finding:\n\nAn example is:\nLogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common"
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Uncomment the \"log_config_module\" module line.\n\n    Configure the \"LogFormat\" in the \"httpd.conf\" file to look like the\nfollowing:\n\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common\n\n    Restart Apache: apachectl restart\n\n    NOTE: Your log format may be using different variables based on your\nenvironment, however  it should be verified to be producing the same end result\nof logged elements.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nUncomment the \"log_config_module\" module line.\n\nConfigure the \"LogFormat\" in the \"httpd.conf\" file to look like the following:\n\nLogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common\n\nRestart Apache: apachectl restart\n\nNote: The log format could be using different variables based on the environment; however it should be verified to ensure it is producing the same end result of logged elements.  \n\nThe logging elements required breakdown as follows:\n%a       remote IP address\n%A       local IP address\n%h       IP address of requesting client\n%H      the request protocol\n%l        user ID of the requesting client\n%m      request method\n%s        status\n%t        time the request was received\n%u       user ID of the remote user\n%U       URL path requested"
          }
        }
      },
      "SV-214233": {
        "describe__deleted": "  describe 'This is a manual check' do\n    skip \"Review Apache web server logging capability. Review the location of the log files.\n    When the log file is displayed, review the source IP information in the log entries\n    and verify the entries do not reflect the IP address of the proxy server. If the log\n    entries in the log file(s) reflect the IP address of the client in addition to the\n    proxy address, this is not a finding. If the log entries in the log file(s) reflect\n    the IP address of the proxy server as the source, this is a finding.\"\n  end",
        "tags": {
          "check_id__added": "C-15447r881414_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102709",
            "V-92621"
          ],
          "gid": {
            "__old": "V-92621",
            "__new": "V-214233"
          },
          "rid": {
            "__old": "SV-102709r2_rule",
            "__new": "SV-214233r881415_rule"
          },
          "fix_id": {
            "__old": "F-98863r1_fix",
            "__new": "F-15445r505080_fix"
          },
          "nist": [
            [
              "-",
              "AU-3"
            ],
            [
              "+",
              "AU-3 d"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92621",
          "__new": "SV-214233"
        },
        "title": {
          "__old": "An Apache web server, behind a load balancer or proxy server, must\nproduce log records containing the client IP information as the source and\ndestination and not the load balancer or proxy IP information with each event.",
          "__new": "An Apache web server, behind a load balancer or proxy server, must produce log records containing the client IP information as the source and destination and not the load balancer or proxy IP information with each event."
        },
        "desc": {
          "__old": "Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct source of the events (e.g., source IP) is\nimportant during forensic analysis. Correctly determining the source of events\nwill add information to the overall reconstruction of the logable event. By\ndetermining the source of the event correctly, analysis of the enterprise can\nbe undertaken to determine if events tied to the source occurred in other areas\nwithin the enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\ncorrectly, will record the load balancer or proxy server as the source of every\nlogable event. When looking at the information forensically, this information\nis not helpful in the investigation of events. The web server must record with\neach event the client source of the event.",
          "__new": "Apache web server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined.\n\nAscertaining the correct source of the events (e.g., source IP) is important during forensic analysis. Correctly determining the source of events will add information to the overall reconstruction of the loggable event. By determining the source of the event correctly, analysis of the enterprise can be undertaken to determine if events tied to the source occurred in other areas within the enterprise.\n\nA web server behind a load balancer or proxy server, when not configured correctly, will record the load balancer or proxy server as the source of every loggable event. When looking at the information forensically, this information is not helpful in the investigation of events. The web server must record with each event the client source of the event."
        },
        "descs": {
          "default__deleted": "Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct source of the events (e.g., source IP) is\nimportant during forensic analysis. Correctly determining the source of events\nwill add information to the overall reconstruction of the logable event. By\ndetermining the source of the event correctly, analysis of the enterprise can\nbe undertaken to determine if events tied to the source occurred in other areas\nwithin the enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\ncorrectly, will record the load balancer or proxy server as the source of every\nlogable event. When looking at the information forensically, this information\nis not helpful in the investigation of events. The web server must record with\neach event the client source of the event.",
          "rationale__deleted": "",
          "check": {
            "__old": "Interview the System Administrator to review the configuration of the\nApache web server architecture and determine if inbound web traffic is passed\nthrough a proxy.\n\n    If the Apache web server is receiving inbound web traffic through a proxy,\nthe audit logs must be reviewed to determine if correct source information is\nbeing passed through by the proxy server.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the location of the log files.\n\n    When the log file is displayed, review the source IP information in the log\nentries and verify the entries do not reflect the IP address of the proxy\nserver.\n    If the log entries in the log file(s) reflect the IP address of the client\nin addition to the proxy address, this is not a finding.\n    If the log entries in the log file(s) reflect the IP address of the proxy\nserver as the source, this is a finding.\n\n    If logs containing source/destination IPs can be obtained at the load\nbalancer/proxy server, this is not a finding.",
            "__new": "If Apache server is not behind a load balancer or proxy server, this check is Not Applicable.\n\nInterview the System Administrator to review the configuration of the Apache web server architecture and determine if inbound web traffic is passed through a proxy.\n\nIf the Apache web server is receiving inbound web traffic through a proxy, the audit logs must be reviewed to determine if correct source information is being passed through by the proxy server.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nReview the location of the log files.\n\nWhen the log file is displayed, review the source IP information in the log entries and verify the entries do not reflect the IP address of the proxy server.\nIf the log entries in the log file(s) reflect the IP address of the client in addition to the proxy address, this is not a finding.\nIf the log entries in the log file(s) reflect the IP address of the proxy server as the source, this is a finding.\n\nIf logs containing source/destination IPs can be obtained at the load balancer/proxy server, this is not a finding."
          },
          "fix": {
            "__old": "Access the proxy server through which inbound web traffic is passed and\nconfigure settings to pass web traffic to the Apache web server transparently.\n\n    Refer to https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html for\nadditional information on logging options based on your proxy/load balancing\nsetup.",
            "__new": "Access the proxy server through which inbound web traffic is passed and configure settings to pass web traffic to the Apache web server transparently.\n\nRefer to https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html for additional information on logging options based on your proxy/load balancing setup."
          }
        }
      },
      "SV-214234": {
        "describe__deleted": "  describe 'Review server logging and alert configuration' do\n    skip \"Work with the SIEM administrator to determine if an alert is configured when audit\n    data is no longer received as expected. If there is no alert configured, this is a finding.\"\n  end",
        "tags": {
          "check_id__added": "C-15448r276962_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102715",
            "V-92627"
          ],
          "gid": {
            "__old": "V-92627",
            "__new": "V-214234"
          },
          "rid": {
            "__old": "SV-102715r1_rule",
            "__new": "SV-214234r879570_rule"
          },
          "fix_id": {
            "__old": "F-98869r1_fix",
            "__new": "F-15446r276963_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92627",
          "__new": "SV-214234"
        },
        "title": {
          "__old": "The Apache web server must use a logging mechanism that is configured\nto alert the Information System Security Officer (ISSO) and System\nAdministrator (SA) in the event of a processing failure.",
          "__new": "The Apache web server must use a logging mechanism that is configured to alert the Information System Security Officer (ISSO) and System Administrator (SA) in the event of a processing failure."
        },
        "desc": {
          "__old": "Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto SAs in their daily administrative duties on the hosted system or within the\nhosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations must define logging failure events, at which time the application\nor the logging mechanism the application uses will provide a warning to the\nISSO and SA at a minimum.",
          "__new": "Reviewing log data allows an investigator to recreate the path of an attacker and to capture forensic data for later use. Log data is also essential to SAs in their daily administrative duties on the hosted system or within the hosted applications.\n\nIf the logging system begins to fail, events will not be recorded. Organizations must define logging failure events, at which time the application or the logging mechanism the application uses will provide a warning to the ISSO and SA at a minimum.\n\n"
        },
        "descs": {
          "default__deleted": "Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto SAs in their daily administrative duties on the hosted system or within the\nhosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations must define logging failure events, at which time the application\nor the logging mechanism the application uses will provide a warning to the\nISSO and SA at a minimum.",
          "rationale__deleted": "",
          "check": {
            "__old": "Work with the SIEM administrator to determine if an alert is configured\nwhen audit data is no longer received as expected.\n\n    If there is no alert configured, this is a finding.",
            "__new": "Work with the SIEM administrator to determine if an alert is configured when audit data is no longer received as expected.\n\nIf there is no alert configured, this is a finding."
          },
          "fix": {
            "__old": "Work with the SIEM administrator to configure an alert when no\naudit data is received from Apache based on the defined schedule of\nconnections.",
            "__new": "Work with the SIEM administrator to configure an alert when no audit data is received from Apache based on the defined schedule of connections."
          }
        }
      },
      "SV-214235": {
        "describe__deleted": "  config_path = input('config_path')\n  apache_conf_dir = apache_conf(config_path).conf_dir\n  apache_logs_dir = File.join(apache_conf_dir[0], 'logs')\n  log_files = command(\"find #{apache_logs_dir}\").stdout.split(\"\\n\")\n\n  if !log_files.empty?\n    log_files.each do |log|\n      describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n        subject { file(log) }\n        its('owner') { should be_in input('server_admins') }\n        its('group') { should be_in input('server_admin_groups') }\n      end\n    end\n  else\n    describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n      skip 'Logs files could not be found. This check has to be manually reviewed.'\n    end\n  end",
        "tags": {
          "check_id__added": "C-15449r881416_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102717",
            "V-92629"
          ],
          "gid": {
            "__old": "V-92629",
            "__new": "V-214235"
          },
          "rid": {
            "__old": "SV-102717r2_rule",
            "__new": "SV-214235r881417_rule"
          },
          "fix_id": {
            "__old": "F-98871r1_fix",
            "__new": "F-15447r276966_fix"
          },
          "nist": [
            [
              "-",
              "AU-9"
            ],
            [
              "+",
              "AU-9 a"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92629",
          "__new": "SV-214235"
        },
        "title": {
          "__old": "The Apache web server log files must only be accessible by privileged\nusers.",
          "__new": "The Apache web server log files must only be accessible by privileged users."
        },
        "desc": {
          "__old": "Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.",
          "__new": "Log data is essential in the investigation of events. If log data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be difficult, if not impossible, to achieve. In addition, access to log records provides information an attacker could potentially use to their advantage since each event record might contain communication ports, protocols, services, trust relationships, user names, etc.\n\nThe web server must protect the log data from unauthorized read, write, copy, etc. This can be done by the web server if the web server is also doing the logging function. The web server may also use an external log system. In either case, the logs must be protected from access by non-privileged users."
        },
        "descs": {
          "default__deleted": "Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the log file location.\n\n    To determine permissions for log files, from the command line, navigate to\nthe directory where the log files are located and enter the following command:\n\n    ls -alH <HTTPD_ROOT>/log*\n\n    Note the owner and group permissions on these files. Only system\nadministrators and service accounts running the server should have permissions\nto the files.\n\n    If any users other than those authorized have read access to the log files,\nthis is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nWork with the Administrator to locate the log files:\nExample: /etc/httpd/logs\n\nList the POSIX permission set and owner/group of the log files:\n# ls -laH /etc/httpd/logs/*log*\nOutput Example:\n-rw-r------. 1 apache root    0 Sep 27 2020 /etc/httpd/logs/access_log\n-rw-r------. 1 apache root 1235 Sep 23 2020 /etc/httpd/logs/access_log-20200927\n-rw-r------. 1 apache root  332 Sep 26 03:40 /etc/httpd/logs/error_log\n\nOnly system administrators and service accounts running the server should have permissions to the files and the POSIX permissions should be set to 640 or more restrictive\n\nIf any users other than those authorized have read access to the log files, this is a finding."
          },
          "fix": {
            "__old": "To protect the integrity of the data that is being captured in\nthe log files, ensure that only the members of the Auditors group,\nAdministrators, and the user assigned to run the web server software is granted\npermissions to read the log files.",
            "__new": "To protect the integrity of the data that is being captured in the log files, ensure that only the members of the Auditors group, Administrators, and the user assigned to run the web server software is granted permissions to read the log files."
          }
        }
      },
      "SV-214236": {
        "describe__deleted": "  config_path = input('config_path')\n  apache_conf_dir = apache_conf(config_path).conf_dir\n  apache_logs_dir = File.join(apache_conf_dir[0], 'logs')\n  log_files = command(\"find #{apache_logs_dir}\").stdout.split(\"\\n\")\n\n  if !log_files.empty?\n    log_files.each do |log|\n      describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n        subject { file(log) }\n        its('owner') { should be_in input('server_admins') }\n        its('group') { should be_in input('server_admin_groups') }\n      end\n    end\n  else\n    describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n      skip 'Logs files could not be found. This check has to be manually reviewed.'\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('ErrorLog') { should_not be_nil }\n  end",
        "tags": {
          "check_id__added": "C-15450r276968_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102719",
            "V-92631"
          ],
          "gid": {
            "__old": "V-92631",
            "__new": "V-214236"
          },
          "rid": {
            "__old": "SV-102719r1_rule",
            "__new": "SV-214236r881419_rule"
          },
          "fix_id": {
            "__old": "F-98873r1_fix",
            "__new": "F-15448r881418_fix"
          },
          "nist": [
            [
              "-",
              "AU-9"
            ],
            [
              "-",
              "AU-9"
            ],
            [
              "+",
              "AU-9 a"
            ],
            [
              "+",
              "AU-9 a"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92631",
          "__new": "SV-214236"
        },
        "title": {
          "__old": "The log information from the Apache web server must be protected from\nunauthorized modification or deletion.",
          "__new": "The log information from the Apache web server must be protected from unauthorized modification or deletion."
        },
        "desc": {
          "__old": "Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.",
          "__new": "Log data is essential in the investigation of events. If log data were to become compromised, competent forensic analysis and discovery of the true source of potentially malicious system activity would be difficult, if not impossible, to achieve. In addition, access to log records provides information an attacker could potentially use to their advantage since each event record might contain communication ports, protocols, services, trust relationships, user names, etc.\n\nThe web server must protect the log data from unauthorized read, write, copy, etc. This can be done by the web server if the web server is also doing the logging function. The web server may also use an external log system. In either case, the logs must be protected from access by non-privileged users.\n\n"
        },
        "descs": {
          "default__deleted": "Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.",
          "rationale__deleted": "",
          "check": {
            "__old": "Verify the log information from the web server must be protected from\nunauthorized modification.\n\n    Review the web server documentation and deployed configuration settings to\ndetermine if the web server logging features protect log information from\nunauthorized modification.\n\n    Review file system settings to verify the log files have secure file\npermissions. Run the following command:\n\n    ls -l <'INSTALL PATH'>/logs\n\n    If the web server log files present are owned by anyone other than an\nadministrative service account this is a finding.",
            "__new": "Verify the log information from the web server must be protected from unauthorized modification.\n\nReview the web server documentation and deployed configuration settings to determine if the web server logging features protect log information from unauthorized modification.\n \nReview file system settings to verify the log files have secure file permissions. Run the following command:\n \nls -l <'INSTALL PATH'>/logs\n \nIf the web server log files present are owned by anyone other than an administrative service account this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"ErrorLog\" directory in the \"httpd.conf\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Open the \"httpd.conf\" file.\n\n    Look for the \"ErrorLog\" directive.\n\n    Ensure the permissions and ownership of all files in the Apache log\ndirectory are correct by executing the following commands as an administrative\nservice account:\n\n    # chown <'service account'> <'ErrorLog directive PATH'>/*",
            "__new": "Determine the location of the \"ErrorLog\" directory in the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nOpen the \"httpd.conf\" file.\n\nLook for the \"ErrorLog\" directive.\n\nEnsure the permissions and ownership of all files in the Apache log directory are correct by executing the following commands as an administrative service account:\n \n# chown <'service account'> <'ErrorLog directive PATH'>/*"
          }
        }
      },
      "SV-214237": {
        "describe__deleted": "  describe 'Review backup and recovery process for the web server' do\n    skip 'Interview the Information System Security Officer, System Administrator, Web Manager, Webmaster, or\n    developers as necessary to determine whether a tested and verifiable backup strategy has been implemented\n    for web server software and all web server data files.'\n  end",
        "tags": {
          "check_id__added": "C-15451r276971_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102723",
            "V-92635"
          ],
          "gid": {
            "__old": "V-92635",
            "__new": "V-214237"
          },
          "rid": {
            "__old": "SV-102723r1_rule",
            "__new": "SV-214237r879582_rule"
          },
          "fix_id": {
            "__old": "F-98877r1_fix",
            "__new": "F-15449r276972_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92635",
          "__new": "SV-214237"
        },
        "title": {
          "__old": "The log data and records from the Apache web server must be backed up\nonto a different system or media.",
          "__new": "The log data and records from the Apache web server must be backed up onto a different system or media."
        },
        "desc": {
          "__old": "Protection of log data includes ensuring log data is not accidentally\nlost or deleted. Backing up log records to an unrelated system or onto separate\nmedia than the system the web server is actually running on helps to ensure\nthat, in the event of a catastrophic system failure, the log records will be\nretained.",
          "__new": "Protection of log data includes ensuring log data is not accidentally lost or deleted. Backing up log records to an unrelated system or onto separate media than the system the web server is actually running on helps to ensure that, in the event of a catastrophic system failure, the log records will be retained."
        },
        "descs": {
          "default__deleted": "Protection of log data includes ensuring log data is not accidentally\nlost or deleted. Backing up log records to an unrelated system or onto separate\nmedia than the system the web server is actually running on helps to ensure\nthat, in the event of a catastrophic system failure, the log records will be\nretained.",
          "rationale__deleted": "",
          "check": {
            "__old": "Interview the Information System Security Officer, System Administrator,\nWeb Manager, Webmaster, or developers as necessary to determine whether a\ntested and verifiable backup strategy has been implemented for web server\nsoftware and all web server data files.\n\n    Proposed questions:\n    - Who maintains the backup and recovery procedures?\n    - Do you have a copy of the backup and recovery procedures?\n    - Where is the off-site backup location?\n    - Is the contingency plan documented?\n    - When was the last time the contingency plan was tested?\n    - Are the test dates and results documented?\n\n    If there is not a backup and recovery process for the web server, this is a\nfinding.",
            "__new": "Interview the Information System Security Officer, System Administrator, Web Manager, Webmaster, or developers as necessary to determine whether a tested and verifiable backup strategy has been implemented for web server software and all web server data files.\n\nProposed questions:\n- Who maintains the backup and recovery procedures?\n- Do you have a copy of the backup and recovery procedures?\n- Where is the off-site backup location?\n- Is the contingency plan documented?\n- When was the last time the contingency plan was tested?\n- Are the test dates and results documented?\n\nIf there is not a backup and recovery process for the web server, this is a finding."
          }
        }
      },
      "SV-214238": {
        "describe__deleted": "  modules_command = 'httpd -M'\n  modules = command(modules_command).stdout\n\n  describe 'Check for unused modules' do\n    skip \"The output of the command #{modules_command} is below. Validate that all displayed modules are required for operations.\\nModules Installed: \\n#{modules}\"\n  end",
        "tags": {
          "check_id__added": "C-15452r276974_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102725",
            "V-92637"
          ],
          "gid": {
            "__old": "V-92637",
            "__new": "V-214238"
          },
          "rid": {
            "__old": "SV-102725r1_rule",
            "__new": "SV-214238r879584_rule"
          },
          "fix_id": {
            "__old": "F-98879r1_fix",
            "__new": "F-15450r276975_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92637",
          "__new": "SV-214238"
        },
        "title": {
          "__old": "Expansion modules must be fully reviewed, tested, and signed before\nthey can exist on a production Apache web server.",
          "__new": "Expansion modules must be fully reviewed, tested, and signed before they can exist on a production Apache web server."
        },
        "desc": {
          "__old": "In the case of a production web server, areas for content development\nand testing will not exist, as this type of content is only permissible on a\ndevelopment website. The process of developing on a functional production\nwebsite entails a degree of trial and error and repeated testing. This process\nis often accomplished in an environment where debugging, sequencing, and\nformatting of content are the main goals. The opportunity for a malicious user\nto obtain files that reveal business logic and logon schemes is high in this\nsituation. The existence of such immature content on a web server represents a\nsignificant security risk that is totally avoidable.\n\n    The web server must enforce, internally or through an external utility, the\nsigning of modules before they are implemented into a production environment.\nBy signing modules, the author guarantees that the module has been reviewed and\ntested before production implementation.",
          "__new": "In the case of a production web server, areas for content development and testing will not exist, as this type of content is only permissible on a development website. The process of developing on a functional production website entails a degree of trial and error and repeated testing. This process is often accomplished in an environment where debugging, sequencing, and formatting of content are the main goals. The opportunity for a malicious user to obtain files that reveal business logic and logon schemes is high in this situation. The existence of such immature content on a web server represents a significant security risk that is totally avoidable.\n\nThe web server must enforce, internally or through an external utility, the signing of modules before they are implemented into a production environment. By signing modules, the author guarantees that the module has been reviewed and tested before production implementation."
        },
        "descs": {
          "default__deleted": "In the case of a production web server, areas for content development\nand testing will not exist, as this type of content is only permissible on a\ndevelopment website. The process of developing on a functional production\nwebsite entails a degree of trial and error and repeated testing. This process\nis often accomplished in an environment where debugging, sequencing, and\nformatting of content are the main goals. The opportunity for a malicious user\nto obtain files that reveal business logic and logon schemes is high in this\nsituation. The existence of such immature content on a web server represents a\nsignificant security risk that is totally avoidable.\n\n    The web server must enforce, internally or through an external utility, the\nsigning of modules before they are implemented into a production environment.\nBy signing modules, the author guarantees that the module has been reviewed and\ntested before production implementation.",
          "rationale__deleted": "",
          "check": {
            "__old": "Enter the following command:\n\n    \"httpd -M\"\n\n    This will provide a list of the loaded modules. Validate that all displayed\nmodules are required for operations.\n\n    If any module is not required for operation, this is a finding.\n\n    NOTE: The following modules are needed for basic web function and do not\nneed to be reviewed:\n\n    core_module\n    http_module\n    so_module\n    mpm_prefork_module\n\n    For a complete list of signed Apache Modules, review\nhttps://httpd.apache.org/docs/2.4/mod/.",
            "__new": "Enter the following command:\n\n\"httpd -M\"\n\nThis will provide a list of the loaded modules. Validate that all displayed modules are required for operations.\n\nIf any module is not required for operation, this is a finding.\n\nNOTE: The following modules are needed for basic web function and do not need to be reviewed:\n\ncore_module\nhttp_module\nso_module\nmpm_prefork_module\n\nFor a complete list of signed Apache Modules, review https://httpd.apache.org/docs/2.4/mod/."
          }
        }
      },
      "SV-214239": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('AuthUserFile') { should be_nil }\n  end",
        "tags": {
          "check_id__added": "C-15453r276977_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102727",
            "V-92639"
          ],
          "gid": {
            "__old": "V-92639",
            "__new": "V-214239"
          },
          "rid": {
            "__old": "SV-102727r1_rule",
            "__new": "SV-214239r879587_rule"
          },
          "fix_id": {
            "__old": "F-98881r1_fix",
            "__new": "F-15451r276978_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92639",
          "__new": "SV-214239"
        },
        "title": {
          "__old": "The Apache web server must not perform user management for hosted\napplications.",
          "__new": "The Apache web server must not perform user management for hosted applications."
        },
        "desc": {
          "__old": "User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, such as LDAP and Active Directory.",
          "__new": "User management and authentication can be an essential part of any application hosted by the web server. Along with authenticating users, the user management function must perform several other tasks such as password complexity, locking users after a configurable number of failed logons, and management of temporary and emergency accounts. All of this must be done enterprise-wide.\n\nThe web server contains a minimal user management function, but the web server user management function does not offer enterprise-wide user management, and user management is not the primary function of the web server. User management for the hosted applications should be done through a facility that is built for enterprise-wide user management, such as LDAP and Active Directory."
        },
        "descs": {
          "default__deleted": "User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, such as LDAP and Active Directory.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and configuration to determine if the\nweb server is being used as a user management application.\n\n    Search for \"AuthUserFile\" in the configuration files in the installed\nApache Path.\n\n    Example:\n\n    grep -rin AuthUserFile *\n\n    If there are uncommented lines pointing to files on disk using the above\nconfiguration option, this is a finding.",
            "__new": "Review the web server documentation and configuration to determine if the web server is being used as a user management application.\n \nSearch for \"AuthUserFile\" in the configuration files in the installed Apache Path.\n \nExample:\n\ngrep -rin AuthUserFile *\n \nIf there are uncommented lines pointing to files on disk using the above configuration option, this is a finding."
          },
          "fix": {
            "__old": "Comment out the \"AuthUserFile\" lines found in the Apache\nconfiguration.",
            "__new": "Comment out the \"AuthUserFile\" lines found in the Apache configuration."
          }
        }
      },
      "SV-214240": {
        "describe__deleted": "  describe 'The Apache web server must only contain services and functions necessary for operation' do\n    skip 'Verify the document root directory and the configuration files do not provide for default index.html or welcome page.'\n  end\n\n  describe package('httpd-manual') do\n    it { should_not be_installed }\n  end\n\n  config_path = input('config_path')\n  apache_config = apache_conf(config_path)\n\n  describe apache_config.params('SetHandler') do\n    it { should_not include 'server-status' }\n    it { should_not include 'server-info' }\n    it { should_not include 'perl-script' }\n  end",
        "tags": {
          "check_id__added": "C-15454r622512_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102729",
            "V-92641"
          ],
          "gid": {
            "__old": "V-92641",
            "__new": "V-214240"
          },
          "rid": {
            "__old": "SV-102729r1_rule",
            "__new": "SV-214240r879587_rule"
          },
          "fix_id": {
            "__old": "F-98883r1_fix",
            "__new": "F-15452r622513_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92641",
          "__new": "SV-214240"
        },
        "title": {
          "__old": "The Apache web server must only contain services and functions\nnecessary for operation.",
          "__new": "The Apache web server must only contain services and functions necessary for operation."
        },
        "desc": {
          "__old": "A web server can provide many features, services, and processes. Some\nof these may be deemed unnecessary or too unsecure to run on a production DoD\nsystem.\n\n    The web server must provide the capability to disable, uninstall, or\ndeactivate functionality and services that are deemed to be non-essential to\nthe web server mission or can adversely impact server performance.",
          "__new": "A web server can provide many features, services, and processes. Some of these may be deemed unnecessary or too unsecure to run on a production DoD system.\n\nThe web server must provide the capability to disable, uninstall, or deactivate functionality and services that are deemed to be non-essential to the web server mission or can adversely impact server performance."
        },
        "descs": {
          "default__deleted": "A web server can provide many features, services, and processes. Some\nof these may be deemed unnecessary or too unsecure to run on a production DoD\nsystem.\n\n    The web server must provide the capability to disable, uninstall, or\ndeactivate functionality and services that are deemed to be non-essential to\nthe web server mission or can adversely impact server performance.",
          "rationale__deleted": "",
          "check": {
            "__old": "Verify the document root directory and the configuration files do not\nprovide for default index.html or welcome page.\n\n    Verify the Apache User Manual content is not installed by checking the\nconfiguration files for manual location directives.\n\n    Verify the Apache configuration files do not have the Server Status handler\nconfigured.\n\n    Verify the Server Information handler is not configured.\n\n    Verify that any other handler configurations such as perl-status are not\nenabled.\n\n    If any of these are present, this is a finding.",
            "__new": "If the site requires the use of a particular piece of software, verify that the Information System Security Officer (ISSO) maintains documentation identifying this software as necessary for operations. The software must be operated at the vendor’s current patch level and must be a supported vendor release.\n\nIf programs or utilities that meet the above criteria are installed on the web server and appropriate documentation and signatures are in evidence, this is not a finding.\n\nDetermine whether the web server is configured with unnecessary software.\n\nDetermine whether processes other than those that support the web server are loaded and/or run on the web server.\n\nExamples of software that should not be on the web server are all web development tools, office suites (unless the web server is a private web development server), compilers, and other utilities that are not part of the web server suite or the basic operating system.\n\nCheck the directory structure of the server and verify that additional, unintended, or unneeded applications are not loaded on the system.\n\nIf, after review of the application on the system, there is no justification for the identified software, this is a finding."
          },
          "fix": {
            "__old": "Review all pre-installed content and remove content that is not required.\nIn particular, look for the unnecessary content that may be found in the\ndocument root directory, a configuration directory such as conf/extra\ndirectory, or as a UNIX/Linux package.\n\n    Remove the default index.html or welcome page if it is a separate package.\nIf the default welcome page is part of the main Apache httpd package as it is\non Red Hat Linux, then comment out the configuration as shown below. Removing a\nfile such as \"welcome.conf\" is not recommended as it may be replaced if the\npackage is updated.\n\n    #\n    # This configuration file enables the default \"Welcome\"\n    # page if there is no default index page present for\n    # the root URL. To disable the Welcome page, comment\n    # out all the lines below.\n    #\n    ##<LocationMatch \"^/+$\">\n    ## Options -Indexes\n    ## ErrorDocument 403 /error/noindex.html\n    ##</LocationMatch>\n\n    Remove the Apache User Manual content or comment out configurations\nreferencing the manual.\n\n    Example:\n\n    # yum erase httpd-manual\n\n    Remove or comment out any Server Status handler configuration:\n\n    #\n    # Allow server status reports generated by mod_status,\n    # with the URL of http://servername/server-status\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /server-status>\n    ## SetHandler server-status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any Server Information handler configuration:\n\n    #\n    # Allow remote server configuration reports, with the URL of\n    # http://servername/server-info (requires that mod_info.c be loaded).\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /server-info>\n    ## SetHandler server-info\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any other handler configuration such as perl-status:\n\n    # This will allow remote server configuration reports, with the URL of\n    # http://servername/perl-status\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /perl-status>\n    ## SetHandler perl-script\n    ## PerlResponseHandler Apache2::Status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    The default source build provides extra content available in the\n<'INSTALLED PATH'>/conf/extra/ directory, but the configuration of most of the\nextra content is commented out by default. In particular, the inclusion of\nconf/extra/proxyhtml.conf is not commented out in \"httpd.conf\":\n\n    # Server-pool management (MPM specific)\n    #Include conf/extra/httpd-mpm.conf\n    # Multi-language error messages\n    #Include conf/extra/httpd-multilang-errordoc.conf\n    # Fancy directory listings\n    #Include conf/extra/httpd-autoindex.conf\n    # Language settings\n    #Include conf/extra/httpd-languages.conf\n    # User home directories\n    #Include conf/extra/httpd-userdir.conf\n    # Real-time info on requests and configuration\n    #Include conf/extra/httpd-info.conf\n    # Virtual hosts\n    #Include conf/extra/httpd-vhosts.conf\n    # Local access to the Apache HTTP Server Manual\n    #Include conf/extra/httpd-manual.conf\n    # Distributed authoring and versioning (WebDAV)\n    #Include conf/extra/httpd-dav.conf\n    # Various default settings\n    #Include conf/extra/httpd-default.conf\n    # Configure mod_proxy_html to understand HTML4/XHTML1\n    <IfModule proxy_html_module>\n    Include conf/extra/proxy-html.conf\n    </IfModule>\n    # Secure (SSL/TLS) connections\n    #Include conf/extra/httpd-ssl.conf\n\n    For applications developed in-house, ensure that development artifacts\n(sample data and scripts; unused libraries, components, debug code; or tools)\nare not included in the deployed software or accessible in the production\nenvironment.",
            "__new": "Remove any unnecessary applications per ISSO documentation."
          }
        }
      },
      "SV-214241": {
        "describe__deleted": "  proxy_server = input('proxy_server')\n  config_path = input('config_path')\n  modules_command = 'httpd -M | sort'\n  installed_modules = command(modules_command).stdout.split\n\n  check_modules = %w(\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n  )\n\n  if proxy_server\n    impact 0.0\n  else\n    impact 0.5\n  end\n\n  proxy_modules = installed_modules.select do |im|\n    check_modules.any? { |cm| im.include?(cm) }\n  end\n\n  describe 'Proxy modules should not be present on the Apache server' do\n    subject { proxy_modules.empty? }\n    it { should cmp true }\n  end\n\n  unless apache_conf(config_path).ProxyRequest.nil?\n    apache_conf(config_path).ProxyRequest.each do |value|\n      describe 'ProxyRequest value should be set to On' do\n        subject { value }\n        it { should cmp 'On' }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15455r881420_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102731",
            "V-92643"
          ],
          "gid": {
            "__old": "V-92643",
            "__new": "V-214241"
          },
          "rid": {
            "__old": "SV-102731r2_rule",
            "__new": "SV-214241r881421_rule"
          },
          "fix_id": {
            "__old": "F-98885r2_fix",
            "__new": "F-15453r276984_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92643",
          "__new": "SV-214241"
        },
        "desc": {
          "__old": "A web server should be primarily a web server or a proxy server but\nnot both, for the same reasons that other multi-use servers are not\nrecommended. Scanning for web servers that will also proxy requests into an\notherwise protected network is a very common attack, making the attack\nanonymous.",
          "__new": "A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests into an otherwise protected network is a very common attack, making the attack anonymous."
        },
        "descs": {
          "default__deleted": "A web server should be primarily a web server or a proxy server but\nnot both, for the same reasons that other multi-use servers are not\nrecommended. Scanning for web servers that will also proxy requests into an\notherwise protected network is a very common attack, making the attack\nanonymous.",
          "rationale__deleted": "",
          "check": {
            "__old": "If the server is a proxy server and not a web server, this check is Not\nApplicable.\n\n    In a command line, run \"httpd -M | sort\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"ProxyRequest\" in the \"httpd.conf\" file.\n    If the ProxyRequest directive is set to “On”, this is a finding.",
            "__new": "If the server is a proxy server and not a web server, this check is Not Applicable.\n\nIn a command line, run \"httpd -M | sort\" to view a list of installed modules.\n\nIf any of the following modules are present, this is a finding:\n\nproxy_module\nproxy_ajp_module\nproxy_balancer_module\nproxy_ftp_module\nproxy_http_module\nproxy_connect_module\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the directive \"ProxyRequest\" in the \"httpd.conf\" file. \nIf the ProxyRequest directive is set to “On”, this is a finding."
          },
          "fix": {
            "__old": "Determine where the proxy modules are located by running the following\ncommand:\n\n    grep -rl \"proxy_module\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Comment out the ProxyRequext directive in the httpd.conf file.\n\n    Restart Apache: apachectl restart",
            "__new": "Determine where the proxy modules are located by running the following command:\n\ngrep -rl \"proxy_module\" <'INSTALL PATH'>\n\nEdit the file and comment out the following modules:\n\nproxy_module\nproxy_ajp_module\nproxy_balancer_module\nproxy_ftp_module\nproxy_http_module\nproxy_connect_module\nComment out the ProxyRequext directive in the httpd.conf file.\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214242": {
        "describe__deleted": "  describe 'Remove any unnecessary applications per ISSO documentation.' do\n    skip 'If the site requires the use of a particular piece of software, verify that the Information System Security Officer (ISSO) maintains documentation identifying this software as necessary for operations. The software must be operated at the vendor’s current patch level and must be a supported vendor release.'\n  end",
        "tags": {
          "check_id__added": "C-15456r622509_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102733",
            "V-92645"
          ],
          "gid": {
            "__old": "V-92645",
            "__new": "V-214242"
          },
          "rid": {
            "__old": "SV-102733r1_rule",
            "__new": "SV-214242r879587_rule"
          },
          "fix_id": {
            "__old": "F-98887r1_fix",
            "__new": "F-15454r622510_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92645",
          "__new": "SV-214242"
        },
        "title": {
          "__old": "The Apache web server must provide install options to exclude the\ninstallation of documentation, sample code, example applications, and\ntutorials.",
          "__new": "The Apache web server must provide install options to exclude the installation of documentation, sample code, example applications, and tutorials."
        },
        "desc": {
          "__old": "Apache web server documentation, sample code, example applications,\nand tutorials may be an exploitable threat to an Apache web server because this\ntype of code has not been evaluated and approved. A production Apache web\nserver must only contain components that are operationally necessary (e.g.,\ncompiled code, scripts, web content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\nremoved from a production Apache web server. To ensure that the documentation\nand code are not installed or are uninstalled completely, the Apache web server\nmust offer an option as part of the installation process to exclude these\npackages or to uninstall the packages if necessary.",
          "__new": "Apache web server documentation, sample code, example applications, and tutorials may be an exploitable threat to an Apache web server because this type of code has not been evaluated and approved. A production Apache web server must only contain components that are operationally necessary (e.g., compiled code, scripts, web content, etc.).\n\nAny documentation, sample code, example applications, and tutorials must be removed from a production Apache web server. To ensure that the documentation and code are not installed or are uninstalled completely, the Apache web server must offer an option as part of the installation process to exclude these packages or to uninstall the packages if necessary.\n\n"
        },
        "descs": {
          "default__deleted": "Apache web server documentation, sample code, example applications,\nand tutorials may be an exploitable threat to an Apache web server because this\ntype of code has not been evaluated and approved. A production Apache web\nserver must only contain components that are operationally necessary (e.g.,\ncompiled code, scripts, web content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\nremoved from a production Apache web server. To ensure that the documentation\nand code are not installed or are uninstalled completely, the Apache web server\nmust offer an option as part of the installation process to exclude these\npackages or to uninstall the packages if necessary.",
          "rationale__deleted": "",
          "check": {
            "__old": "If the site requires the use of a particular piece of software, verify that\nthe Information System Security Officer (ISSO) maintains documentation\nidentifying this software as necessary for operations. The software must be\noperated at the vendor’s current patch level and must be a supported vendor\nrelease.\n\n    If programs or utilities that meet the above criteria are installed on the\nweb server and appropriate documentation and signatures are in evidence, this\nis not a finding.\n\n    Determine whether the web server is configured with unnecessary software.\n\n    Determine whether processes other than those that support the web server\nare loaded and/or run on the web server.\n\n    Examples of software that should not be on the web server are all web\ndevelopment tools, office suites (unless the web server is a private web\ndevelopment server), compilers, and other utilities that are not part of the\nweb server suite or the basic operating system.\n\n    Check the directory structure of the server and verify that additional,\nunintended, or unneeded applications are not loaded on the system.\n\n    If, after review of the application on the system, there is no\njustification for the identified software, this is a finding.",
            "__new": "Verify the document root directory and the configuration files do not provide for default index.html or welcome page.\n\nVerify the Apache User Manual content is not installed by checking the configuration files for manual location directives.\n\nVerify the Apache configuration files do not have the Server Status handler configured.\n\nVerify the Server Information handler is not configured.\n\nVerify that any other handler configurations such as perl-status are not enabled.\n\nIf any of these are present, this is a finding."
          },
          "fix": {
            "__old": "Remove any unnecessary applications per ISSO documentation.",
            "__new": "Review all pre-installed content and remove content that is not required. In particular, look for the unnecessary content that may be found in the document root directory, a configuration directory such as conf/extra directory, or as a UNIX/Linux package.\n\nRemove the default index.html or welcome page if it is a separate package. If the default welcome page is part of the main Apache httpd package as it is on Red Hat Linux, then comment out the configuration as shown below. Removing a file such as \"welcome.conf\" is not recommended as it may be replaced if the package is updated.\n\n#\n# This configuration file enables the default \"Welcome\"\n# page if there is no default index page present for\n# the root URL. To disable the Welcome page, comment\n# out all the lines below.\n#\n##<LocationMatch \"^/+$\">\n## Options -Indexes\n## ErrorDocument 403 /error/noindex.html\n##</LocationMatch>\n\nRemove the Apache User Manual content or comment out configurations referencing the manual.\n\nExample:\n\n# yum erase httpd-manual\n\nRemove or comment out any Server Status handler configuration:\n\n#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /server-status>\n## SetHandler server-status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nRemove or comment out any Server Information handler configuration:\n\n#\n# Allow remote server configuration reports, with the URL of\n# http://servername/server-info (requires that mod_info.c be loaded).\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /server-info>\n## SetHandler server-info\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nRemove or comment out any other handler configuration such as perl-status:\n\n# This will allow remote server configuration reports, with the URL of\n# http://servername/perl-status\n# Change the \".example.com\" to match your domain to enable.\n#\n##<Location /perl-status>\n## SetHandler perl-script\n## PerlResponseHandler Apache2::Status\n## Order deny,allow\n## Deny from all\n## Allow from .example.com\n##</Location>\n\nThe default source build provides extra content available in the <'INSTALLED PATH'>/conf/extra/ directory, but the configuration of most of the extra content is commented out by default. In particular, the inclusion of conf/extra/proxyhtml.conf is not commented out in \"httpd.conf\":\n\n# Server-pool management (MPM specific)\n#Include conf/extra/httpd-mpm.conf\n# Multi-language error messages\n#Include conf/extra/httpd-multilang-errordoc.conf\n# Fancy directory listings\n#Include conf/extra/httpd-autoindex.conf\n# Language settings\n#Include conf/extra/httpd-languages.conf\n# User home directories\n#Include conf/extra/httpd-userdir.conf\n# Real-time info on requests and configuration\n#Include conf/extra/httpd-info.conf\n# Virtual hosts\n#Include conf/extra/httpd-vhosts.conf\n# Local access to the Apache HTTP Server Manual\n#Include conf/extra/httpd-manual.conf\n# Distributed authoring and versioning (WebDAV)\n#Include conf/extra/httpd-dav.conf\n# Various default settings\n#Include conf/extra/httpd-default.conf\n# Configure mod_proxy_html to understand HTML4/XHTML1\n<IfModule proxy_html_module>\nInclude conf/extra/proxy-html.conf\n</IfModule>\n# Secure (SSL/TLS) connections\n#Include conf/extra/httpd-ssl.conf\n\nFor applications developed in-house, ensure that development artifacts (sample data and scripts; unused libraries, components, debug code; or tools) are not included in the deployed software or accessible in the production environment."
          }
        }
      },
      "SV-214243": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('AddHandler.to_s') { should_not match '.exe' }\n    its('AddHandler.to_s') { should_not match '.dll' }\n    its('AddHandler.to_s') { should_not match '.com' }\n    its('AddHandler.to_s') { should_not match '.bat' }\n    its('AddHandler.to_s') { should_not match '.csh' }\n  end\n\n  describe apache_conf(config_path) do\n    its('Action.to_s') { should_not match '.exe' }\n    its('Action.to_s') { should_not match '.dll' }\n    its('Action.to_s') { should_not match '.com' }\n    its('Action.to_s') { should_not match '.bat' }\n    its('Action.to_s') { should_not match '.csh' }\n  end",
        "tags": {
          "check_id__added": "C-15457r881422_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102741",
            "V-92653"
          ],
          "gid": {
            "__old": "V-92653",
            "__new": "V-214243"
          },
          "rid": {
            "__old": "SV-102741r1_rule",
            "__new": "SV-214243r881424_rule"
          },
          "fix_id": {
            "__old": "F-98895r1_fix",
            "__new": "F-15455r881423_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92653",
          "__new": "SV-214243"
        },
        "title": {
          "__old": "The Apache web server must have resource mappings set to disable the\nserving of certain file types.",
          "__new": "The Apache web server must have resource mappings set to disable the serving of certain file types."
        },
        "desc": {
          "__old": "Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.",
          "__new": "Resource mapping is the process of tying a particular file type to a process in the web server that can serve that type of file to a requesting client and to identify which file types are not to be delivered to a client.\n\nBy not specifying which files can and cannot be served to a user, the web server could deliver to a user web server configuration files, log files, password files, etc.\n\nThe web server must only allow hosted application file types to be served to a user, and all other types must be disabled.\n\n"
        },
        "descs": {
          "default__deleted": "Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review any \"Action\" or \"AddHandler\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Action\"\n    # cat /<path_to_file>/httpd.conf | grep -i \"AddHandler\"\n\n    If \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.\n\nReview any \"Action\" or \"AddHandler\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Action\"\n# cat /<path_to_file>/httpd.conf | grep -i \"AddHandler\"\n\nIf \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com, .bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\nIf this is not documented and approved by the Information System Security Officer (ISSO), this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \"Action\" or \"AddHandler\" exist within the \"httpd.conf\" file and\nthey configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nDisable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\nIf \"Action\" or \"AddHandler\" exist within the \"httpd.conf\" file and they configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\nRestart Apache: apachectl restart\n\nEnsure this process is documented and approved by the ISSO."
          }
        }
      },
      "SV-214244": {
        "describe__deleted": "  config_path = input('config_path')\n  apache_conf_file = apache_conf(config_path)\n  scripts = apache_conf_file.params('Script')\n  script_alias = apache_conf_file.params('ScriptAlias')\n  script_alias_match = apache_conf_file.params('ScriptAliasMatch')\n  script_interpreter_source = apache_conf_file.params('ScriptInterpreterSource')\n\n  check_dirs_final = []\n\n  scripts ? scripts.map { |e| check_dirs_final.push(e) } : nil\n  script_alias ? script_alias.map { |e| check_dirs_final.push(e) } : nil\n  script_alias_match ? script_alias_match.map { |e| check_dirs_final.push(e) } : nil\n  script_interpreter_source ? script_interpreter_source.map { |e| check_dirs_final.push(e) } : nil\n\n  describe 'Check for scripts that are present and are not needed for application operation' do\n    skip \"The following locations need to be checked for cgi-bin files. Remove any scripts that are not needed.\\n\\nScript Locations:\\n#{check_dirs_final.join(\"\\n\")}\"\n  end",
        "tags": {
          "check_id__added": "C-15458r881425_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102743",
            "V-92655"
          ],
          "gid": {
            "__old": "V-92655",
            "__new": "V-214244"
          },
          "rid": {
            "__old": "SV-102743r1_rule",
            "__new": "SV-214244r881427_rule"
          },
          "fix_id": {
            "__old": "F-98897r1_fix",
            "__new": "F-15456r881426_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92655",
          "__new": "SV-214244"
        },
        "title": {
          "__old": "The Apache web server must allow the mappings to unused and vulnerable\nscripts to be removed.",
          "__new": "The Apache web server must allow the mappings to unused and vulnerable scripts to be removed."
        },
        "desc": {
          "__old": "Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.",
          "__new": "Scripts allow server-side processing on behalf of the hosted application user or as processes needed in the implementation of hosted applications. Removing scripts not needed for application operation or deemed vulnerable helps to secure the web server.\n\nTo ensure scripts are not added to the web server and run maliciously, script mappings that are not needed or used by the web server for hosted application operation must be removed."
        },
        "descs": {
          "default__deleted": "Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Locate \"cgi-bin\" files and directories enabled in the Apache\nconfiguration via \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and\n\"ScriptInterpreterSource\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Script\"\n\n    If any scripts are present that are not needed for application operation,\nthis is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nLocate \"cgi-bin\" files and directories enabled in the Apache configuration via \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and \"ScriptInterpreterSource\" directives:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Script\"\n\nIf any scripts are present that are not needed for application operation, this is a finding.\n\nIf this is not documented and approved by the Information System Security Officer (ISSO), this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and\n\"ScriptInterpreterSource\" directives.\n\n    Go into each directory and locate \"cgi-bin\" files. Remove any script that\nis not needed for application operation.\n\n    Ensure this process is documented and approved by the ISSO.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nReview \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and \"ScriptInterpreterSource\" directives.\n\nGo into each directory and locate \"cgi-bin\" files. Remove any script that is not needed for application operation.\n\nEnsure this process is documented and approved by the ISSO."
          }
        }
      },
      "SV-214245": {
        "describe__deleted": "  modules_command = 'httpd -M | sort'\n  installed_modules = command(modules_command).stdout.split\n\n  check_modules = %w(\n    dav_module\n    dav_fs_module\n    dav_lock_module\n  )\n\n  bad_modules = installed_modules.select do |i|\n    check_modules.any? { |j| i.include?(j) }\n  end\n\n  describe bad_modules do\n    it 'The following modules should be removed from Apache server' do\n      failure_message = \"The following modules should be removed: #{bad_modules.join(', ')}\"\n      expect(bad_modules).to be_empty, failure_message\n    end\n  end",
        "tags": {
          "check_id__added": "C-15459r276995_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102747",
            "V-92659"
          ],
          "gid": {
            "__old": "V-92659",
            "__new": "V-214245"
          },
          "rid": {
            "__old": "SV-102747r1_rule",
            "__new": "SV-214245r879587_rule"
          },
          "fix_id": {
            "__old": "F-98901r1_fix",
            "__new": "F-15457r276996_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92659",
          "__new": "SV-214245"
        },
        "title": {
          "__old": "The Apache web server must have Web Distributed Authoring (WebDAV)\ndisabled.",
          "__new": "The Apache web server must have Web Distributed Authoring (WebDAV) disabled."
        },
        "desc": {
          "__old": "A web server can be installed with functionality that, by its nature,\nis not secure. WebDAV is an extension to the HTTP protocol that, when\ndeveloped, was meant to allow users to create, change, and move documents on a\nserver, typically a web server or web share. Allowing this functionality,\ndevelopment, and deployment is much easier for web authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\nallow clients to modify unauthorized files on the web server.",
          "__new": "A web server can be installed with functionality that, by its nature, is not secure. WebDAV is an extension to the HTTP protocol that, when developed, was meant to allow users to create, change, and move documents on a server, typically a web server or web share. Allowing this functionality, development, and deployment is much easier for web authors.\n\nWebDAV is not widely used and has serious security concerns because it may allow clients to modify unauthorized files on the web server."
        },
        "descs": {
          "default__deleted": "A web server can be installed with functionality that, by its nature,\nis not secure. WebDAV is an extension to the HTTP protocol that, when\ndeveloped, was meant to allow users to create, change, and move documents on a\nserver, typically a web server or web share. Allowing this functionality,\ndevelopment, and deployment is much easier for web authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\nallow clients to modify unauthorized files on the web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "In a command line, run \"httpd -M | sort\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module",
            "__new": "In a command line, run \"httpd -M | sort\" to view a list of installed modules.\n\nIf any of the following modules are present, this is a finding:\n\ndav_module\ndav_fs_module\ndav_lock_module"
          },
          "fix": {
            "__old": "Determine where the \"dav\" modules are located by running the following\ncommand:\n\n    grep -rl \"dav_module\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module\n\n    Restart Apache: apachectl restart",
            "__new": "Determine where the \"dav\" modules are located by running the following command:\n\ngrep -rl \"dav_module\" <'INSTALL PATH'>\n\nEdit the file and comment out the following modules:\n\ndav_module\ndav_fs_module\ndav_lock_module\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214246": {
        "describe__deleted": "  config_path = input('config_path')\n  listen = apache_conf(config_path).params('Listen')\n\n  if !listen.nil?\n    listen.each do |address|\n      describe address do\n        it { should match /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]):[0-9]+$/ }\n        it { should_not match /^0.0.0.0:[0-9]+$/ }\n      end\n    end\n  else\n    describe apache_conf(config_path) do\n      its('Listen') { should_not cmp nil }\n    end\n  end",
        "tags": {
          "check_id__added": "C-15460r881428_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102749",
            "V-92661"
          ],
          "gid": {
            "__old": "V-92661",
            "__new": "V-214246"
          },
          "rid": {
            "__old": "SV-102749r1_rule",
            "__new": "SV-214246r881430_rule"
          },
          "fix_id": {
            "__old": "F-98903r1_fix",
            "__new": "F-15458r881429_fix"
          },
          "nist": [
            [
              "-",
              "IA-5 (2) (b)"
            ],
            [
              "+",
              "IA-5 (2) (a) (1)"
            ],
            [
              " "
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92661",
          "__new": "SV-214246"
        },
        "title": {
          "__old": "The Apache web server must be configured to use a specified IP address\nand port.",
          "__new": "The Apache web server must be configured to use a specified IP address and port."
        },
        "desc": {
          "__old": "The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.",
          "__new": "The web server must be configured to listen on a specified IP address and port. Without specifying an IP address and port for the web server to use, the web server will listen on all IP addresses available to the hosting server. If the web server has multiple IP addresses, i.e., a management IP address, the web server will also accept connections on the management IP address.\n\nAccessing the hosted application through an IP address normally used for non-application functions opens the possibility of user access to resources, utilities, files, ports, and protocols that are protected on the desired application IP address.\n\n"
        },
        "descs": {
          "default__deleted": "The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"Listen\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Listen\"\n\n    Verify that any enabled \"Listen\" directives specify both an IP address\nand port number.\n\n    If the \"Listen\" directive is found with only an IP address or only a port\nnumber specified, this is finding.\n\n    If the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80),\nthis is a finding.\n\n    If the \"Listen\" directive does not exist, this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \nSearch for the \"Listen\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Listen\"\n\nVerify that any enabled \"Listen\" directives specify both an IP address and port number.\n\nIf the \"Listen\" directive is found with only an IP address or only a port number specified, this is finding.\n\nIf the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80), this is a finding.\n\nIf the \"Listen\" directive does not exist, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set the \"Listen\" directive to listen on a specific IP address and port.\n\n    Restart Apache: apachectl restart",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nSet the \"Listen\" directive to listen on a specific IP address and port.\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214247": {
        "describe__deleted": "  describe 'Check the web server documentation and configration to determine web server accounts' do\n    skip 'Any directories or files owned by anyone other than an administrative service account is a finding. If non-privileged web server accounts are available with access to functions, directories, or files not needed for the role of the account, this is a finding'\n  end",
        "tags": {
          "check_id__added": "C-15461r277001_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102759",
            "V-92671"
          ],
          "gid": {
            "__old": "V-92671",
            "__new": "V-214247"
          },
          "rid": {
            "__old": "SV-102759r1_rule",
            "__new": "SV-214247r879631_rule"
          },
          "fix_id": {
            "__old": "F-98913r1_fix",
            "__new": "F-15459r277002_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92671",
          "__new": "SV-214247"
        },
        "title": {
          "__old": "Apache web server accounts accessing the directory tree, the shell, or\nother operating system functions and utilities must only be administrative\naccounts.",
          "__new": "Apache web server accounts accessing the directory tree, the shell, or other operating system functions and utilities must only be administrative accounts."
        },
        "desc": {
          "__old": "As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.",
          "__new": "As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. The resources to which these accounts have access must also be closely monitored and controlled. Only the system administrator needs access to all the system's capabilities, while the web administrator and associated staff require access and control of the web content and web server configuration files."
        },
        "descs": {
          "default__deleted": "As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and configuration to determine what web\nserver accounts are available on the server.\n\n    Any directories or files owned by anyone other than an administrative\nservice account is a finding.\n\n    If non-privileged web server accounts are available with access to\nfunctions, directories, or files not needed for the role of the account, this\nis a finding.",
            "__new": "Review the web server documentation and configuration to determine what web server accounts are available on the server.\n\nAny directories or files owned by anyone other than an administrative service account is a finding. \n\nIf non-privileged web server accounts are available with access to functions, directories, or files not needed for the role of the account, this is a finding."
          },
          "fix": {
            "__old": "Limit the functions, directories, and files that are accessible\nby each account and role to administrative service accounts and remove or\nmodify non-privileged account access.",
            "__new": "Limit the functions, directories, and files that are accessible by each account and role to administrative service accounts and remove or modify non-privileged account access."
          }
        }
      },
      "SV-214248": {
        "describe__deleted": "  describe 'Obtain a list of the user accounts for the system, noting the privileges for each account' do\n    skip \"Verify with the SA or the Information System Security Officer (ISSO) that all privileged accounts are mission essential and documented.\n      Verify with the SA or the ISSO that all non-administrator access to shell scripts and operating system functions are mission essential and documented.\n      If undocumented privileged accounts are present, this is a finding.\n      If undocumented access to shell scripts or operating system functions is present, this is a finding.\"\n  end",
        "tags": {
          "satisfies__deleted": [
            "SRG-APP-000211-WSR-000031",
            "SRG-APP-000141-WSR-000078",
            "SRG-APP-000380-WSR-000072"
          ],
          "check_id__added": "C-15462r505082_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102761",
            "V-92673"
          ],
          "gid": {
            "__old": "V-92673",
            "__new": "V-214248"
          },
          "rid": {
            "__old": "SV-102761r1_rule",
            "__new": "SV-214248r879631_rule"
          },
          "fix_id": {
            "__old": "F-98915r1_fix",
            "__new": "F-15460r505083_fix"
          },
          "nist": [
            [
              " "
            ],
            [
              " "
            ],
            [
              "-",
              "CM-5 (1)"
            ],
            [
              "+",
              "CM-5 (1) (a)"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92673",
          "__new": "SV-214248"
        },
        "title": {
          "__old": "Apache web server application directories,  libraries, and\nconfiguration files must only be accessible to privileged users.",
          "__new": "Apache web server application directories,  libraries, and configuration files must only be accessible to privileged users."
        },
        "desc": {
          "__old": "To properly monitor the changes to the web server and the hosted\napplications, logging must be enabled. Along with logging being enabled, each\nrecord must properly contain the changes made and the names of those who made\nthe changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.",
          "__new": "By separating Apache web server security functions from non-privileged users, roles can be developed that can then be used to administer the Apache web server. Forcing users to change from a non-privileged account to a privileged account when operating on the Apache web server or on security-relevant information forces users to only operate as a Web Server Administrator when necessary. Operating in this manner allows for better logging of changes and better forensic information and limits accidental changes to the Apache web server.\n\nTo limit changes to the Apache web server and limit exposure to any adverse effects from the changes, files such as the Apache web server application files, libraries, and configuration files must have permissions and ownership set properly to only allow privileged users access."
        },
        "descs": {
          "default__deleted": "To properly monitor the changes to the web server and the hosted\napplications, logging must be enabled. Along with logging being enabled, each\nrecord must properly contain the changes made and the names of those who made\nthe changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.",
          "rationale__deleted": "",
          "check": {
            "__old": "Obtain a list of the user accounts for the system, noting the privileges\nfor each account.\n\n    Verify with the SA or the Information System Security Officer (ISSO) that\nall privileged accounts are mission essential and documented.\n\n    Verify with the SA or the ISSO that all non-administrator access to shell\nscripts and operating system functions are mission essential and documented.\n\n    If undocumented privileged accounts are present, this is a finding.\n\n    If undocumented access to shell scripts or operating system functions is\npresent, this is a finding.",
            "__new": "Obtain a list of the user accounts for the system, noting the privileges for each account.\n\nVerify with the SA or the Information System Security Officer (ISSO) that all privileged accounts are mission essential and documented.\n\nVerify with the SA or the ISSO that all non-administrator access to shell scripts and operating system functions are mission essential and documented.\n\nIf undocumented privileged accounts are present, this is a finding.\n\nIf undocumented access to shell scripts or operating system functions is present, this is a finding."
          },
          "fix": {
            "__old": "Ensure non-administrators are not allowed access to the\ndirectory tree, the shell, or other operating system functions and utilities.",
            "__new": "Ensure non-administrators are not allowed access to the directory tree, the shell, or other operating system functions and utilities."
          }
        }
      },
      "SV-214249": {
        "describe__deleted": "  describe 'The Apache web server must separate the hosted applications from hosted Apache web server management functionality.' do\n    skip \"Review the web server documentation and deployed configuration to determine whether hosted application functionality is separated from web server management functions.\n    If the functions are not separated, this is a finding.\"\n  end",
        "tags": {
          "check_id__added": "C-15463r277007_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102763",
            "V-92675"
          ],
          "gid": {
            "__old": "V-92675",
            "__new": "V-214249"
          },
          "rid": {
            "__old": "SV-102763r1_rule",
            "__new": "SV-214249r879631_rule"
          },
          "fix_id": {
            "__old": "F-98917r1_fix",
            "__new": "F-15461r277008_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92675",
          "__new": "SV-214249"
        },
        "title": {
          "__old": "The Apache web server must separate the hosted applications from\nhosted Apache web server management functionality.",
          "__new": "The Apache web server must separate the hosted applications from hosted Apache web server management functionality."
        },
        "desc": {
          "__old": "The separation of user functionality from web server management can be\naccomplished by moving management functions to a separate IP address or port.\nTo further separate the management functions, separate authentication methods\nand certificates should be used.\n\n    By moving the management functionality, the possibility of accidental\ndiscovery of the management functions by non-privileged users during hosted\napplication use is minimized.",
          "__new": "The separation of user functionality from web server management can be accomplished by moving management functions to a separate IP address or port. To further separate the management functions, separate authentication methods and certificates should be used.\n\nBy moving the management functionality, the possibility of accidental discovery of the management functions by non-privileged users during hosted application use is minimized."
        },
        "descs": {
          "default__deleted": "The separation of user functionality from web server management can be\naccomplished by moving management functions to a separate IP address or port.\nTo further separate the management functions, separate authentication methods\nand certificates should be used.\n\n    By moving the management functionality, the possibility of accidental\ndiscovery of the management functions by non-privileged users during hosted\napplication use is minimized.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and deployed configuration to determine\nwhether hosted application functionality is separated from web server\nmanagement functions.\n\n    If the functions are not separated, this is a finding.",
            "__new": "Review the web server documentation and deployed configuration to determine whether hosted application functionality is separated from web server management functions.\n\nIf the functions are not separated, this is a finding."
          },
          "fix": {
            "__old": "Configure Apache to separate the hosted applications from web\nserver management functionality.",
            "__new": "Configure Apache to separate the hosted applications from web server management functionality."
          }
        }
      },
      "SV-214250": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('SessionMaxAge') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionMaxAge.nil?\n    apache_conf(config_path).SessionMaxAge.each do |value|\n      describe 'SessionMaxAge value should be less than or equal to 600' do\n        subject { value }\n        it { should be <= 600 }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15464r881431_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102765",
            "V-92677"
          ],
          "gid": {
            "__old": "V-92677",
            "__new": "V-214250"
          },
          "rid": {
            "__old": "SV-102765r1_rule",
            "__new": "SV-214250r881433_rule"
          },
          "fix_id": {
            "__old": "F-98919r1_fix",
            "__new": "F-15462r881432_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92677",
          "__new": "SV-214250"
        },
        "title": {
          "__old": "The Apache web server must invalidate session identifiers upon hosted\napplication user logout or other session termination.",
          "__new": "The Apache web server must invalidate session identifiers upon hosted application user logout or other session termination."
        },
        "desc": {
          "__old": "Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries from capturing and continuing to\nemploy previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\nan application user's session. Unique session IDs help to reduce predictability\nof said identifiers. When a user logs out, or when any other session\ntermination event occurs, the web server must terminate the user session to\nminimize the potential for an attacker to hijack that particular user session.",
          "__new": "Captured sessions can be reused in \"replay\" attacks. This requirement limits the ability of adversaries from capturing and continuing to employ previously valid session IDs.\n\nSession IDs are tokens generated by web applications to uniquely identify an application user's session. Unique session IDs help to reduce predictability of said identifiers. When a user logs out, or when any other session termination event occurs, the web server must terminate the user session to minimize the potential for an attacker to hijack that particular user session.\n\n"
        },
        "descs": {
          "default__deleted": "Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries from capturing and continuing to\nemploy previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\nan application user's session. Unique session IDs help to reduce predictability\nof said identifiers. When a user logs out, or when any other session\ntermination event occurs, the web server must terminate the user session to\nminimize the potential for an attacker to hijack that particular user session.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the following directive:\n\n    \"SessionMaxAge\"\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SessionMaxAge\"\n\n    Verify the value of \"SessionMaxAge\" is set to \"600\" or less.\n\n    If the \"SessionMaxAge\" does not exist or is set to more than \"600\",\nthis is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the following directive:\n\n\"SessionMaxAge\"\n\n# cat /<path_to_file>/httpd.conf | grep -i \"SessionMaxAge\"\n\nVerify the value of \"SessionMaxAge\" is set to \"600\" or less.\n\nIf the \"SessionMaxAge\" does not exist or is set to more than \"600\", this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add the following line to the \"httpd.conf\" file:\n\n    SessionMaxAge 600\n\n    Restart Apache: apachectl restart",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd the following line to the \"httpd.conf\" file:\n\nSessionMaxAge 600\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214251": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  headers_module = command('httpd -M | grep -i headers_module (shared)')\n\n  describe headers_module.stdout.strip do\n    it { should_not cmp '' }\n  end",
        "tags": {
          "check_id__added": "C-15465r457879_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102767",
            "V-92679"
          ],
          "gid": {
            "__old": "V-92679",
            "__new": "V-214251"
          },
          "rid": {
            "__old": "SV-102767r2_rule",
            "__new": "SV-214251r879638_rule"
          },
          "fix_id": {
            "__old": "F-98921r1_fix",
            "__new": "F-15463r277014_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92679",
          "__new": "SV-214251"
        },
        "title": {
          "__old": "Cookies exchanged between the Apache web server and client, such as\nsession cookies, must have security settings that disallow cookie access\noutside the originating Apache web server and hosted application.",
          "__new": "Cookies exchanged between the Apache web server and client, such as session cookies, must have security settings that disallow cookie access outside the originating Apache web server and hosted application."
        },
        "desc": {
          "__old": "Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.",
          "__new": "Cookies are used to exchange data between the web server and the client. Cookies, such as a session cookie, may contain session information and user credentials used to maintain a persistent connection between the user and the hosted application since HTTP/HTTPS is a stateless protocol.\n\nWhen the cookie parameters are not set properly (i.e., domain and path parameters), cookies can be shared within hosted applications residing on the same web server or to applications hosted on different web servers residing on the same domain."
        },
        "descs": {
          "default__deleted": "Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and configuration to determine if\ncookies between the web server and client are accessible by applications or web\nservers other than the originating pair.\n\n    grep SessionCookieName <'INSTALL LOCATION'>/mod_session.conf\n\n    Confirm that the \"HttpOnly\" and \"Secure\" settings are present in the\nline returned.\n\n    Confirm that the line does not contain the \"Domain\" cookie setting.\n\n    Verify the \"headers_module (shared)\" module is loaded in the web server:\n\n    \"# httpd -M\n    Verify \" headers_module (shared)\" is returned in the list of Loaded\nModules from the above command.\"\n\n    If the \"headers_module (shared)\" is not loaded, this is a finding.",
            "__new": "Note: For web servers acting as a public facing with static content that do not require authentication, this is Not Applicable.\n\nReview the web server documentation and configuration to determine if cookies between the web server and client are accessible by applications or web servers other than the originating pair.\n\ngrep SessionCookieName <'INSTALL LOCATION'>/mod_session.conf\n\nConfirm that the \"HttpOnly\" and \"Secure\" settings are present in the line returned.\n\nConfirm that the line does not contain the \"Domain\" cookie setting.\n\nVerify the \"headers_module (shared)\" module is loaded in the web server:\n\n\"# httpd -M \nVerify \" headers_module (shared)\" is returned in the list of Loaded Modules from the above command.\"\n\nIf the \"headers_module (shared)\" is not loaded, this is a finding."
          },
          "fix": {
            "__old": "Edit the \"mod_session.conf\" file and find the \"SessionCookieName\"\ndirective.\n\n    Set the \"SessionCookieName\" to \"session path=/; HttpOnly; Secure; \"\n\n    Example:\n\n    SessionCookieName session path=/; HttpOnly; Secure;\n\n    Restart Apache: apachectl restart",
            "__new": "Edit the \"mod_session.conf\" file and find the \"SessionCookieName\" directive.\n\nSet the \"SessionCookieName\" to \"session path=/; HttpOnly; Secure; \"\n\nExample:\n\nSessionCookieName session path=/; HttpOnly; Secure; \n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214252": {
        "describe__deleted": "  config_path = input('config_path')\n  session_crypto = command('httpd -M | grep session_crypto').stdout\n\n  describe session_crypto do\n    it { should include 'session_crypto_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SessionCryptoCipher') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCryptoCipher.nil?\n    apache_conf(config_path).SessionCryptoCipher.each do |value|\n      describe 'SessionCryptoCipher value should be set to aes256' do\n        subject { value }\n        it { should cmp 'aes256' }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15466r881434_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92687",
            "SV-102775"
          ],
          "gid": {
            "__old": "V-92687",
            "__new": "V-214252"
          },
          "rid": {
            "__old": "SV-102775r1_rule",
            "__new": "SV-214252r881435_rule"
          },
          "fix_id": {
            "__old": "F-98929r1_fix",
            "__new": "F-15464r277017_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92687",
          "__new": "SV-214252"
        },
        "title": {
          "__old": "The Apache web server must generate a session ID long enough that it\ncannot be guessed through brute force.",
          "__new": "The Apache web server must generate a session ID long enough that it cannot be guessed through brute force."
        },
        "desc": {
          "__old": "Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    Generating session IDs that are at least 128 bits (16 bytes) in length will\ncause an attacker to take a large amount of time and resources to guess,\nreducing the likelihood of an attacker guessing a session ID.",
          "__new": "Generating a session identifier (ID) that is not easily guessed through brute force is essential to deter several types of session attacks. By knowing the session ID, an attacker can hijack a user session that has already been user authenticated by the hosted application. The attacker does not need to guess user identifiers and passwords or have a secure token since the user session has already been authenticated.\n\nGenerating session IDs that are at least 128 bits (16 bytes) in length will cause an attacker to take a large amount of time and resources to guess, reducing the likelihood of an attacker guessing a session ID."
        },
        "descs": {
          "default__deleted": "Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    Generating session IDs that are at least 128 bits (16 bytes) in length will\ncause an attacker to take a large amount of time and resources to guess,\nreducing the likelihood of an attacker guessing a session ID.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and deployed configuration to determine\nthe length of the generated session identifiers.\n\n    First ensure that \"session_crypto\" is enabled:\n\n    httpd -M |grep session_crypto\n\n    If the above command returns \"session_crypto_module\", the module is\nenabled in the running server.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the \"httpd.conf\" file.\n\n    If the \"SessionCryptoCipher\" is not used or \"SessionCryptoCipher\" is\nnot set to \"aes256\", this is a finding.",
            "__new": "Review the web server documentation and deployed configuration to determine the length of the generated session identifiers.\n\nFirst ensure that \"session_crypto\" is enabled:\n\nhttpd -M |grep session_crypto\n\nIf the above command returns \"session_crypto_module\", the module is enabled in the running server.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nReview the \"httpd.conf\" file.\n\nIf the \"SessionCryptoCipher\" is not used or \"SessionCryptoCipher\" is not set to \"aes256\", this is a finding."
          },
          "fix": {
            "__old": "Configure the web server to generate session identifiers that are at least\n128 bits in length.\n\n    Ensure that \"session_crypto_module\" is enabled.\n\n    Determine the location of the \"httpd.conf\" file by running the following\ncommand:\n\n    httpd -V\n\n    Review the \"HTTPD_ROOT\" path.\n\n    Navigate to the \"HTTPD_ROOT\"/conf directory.\n\n    Edit the \"httpd.conf\" file.\n\n    SessionCryptoCipher aes256\n\n    Restart Apache: apachectl restart",
            "__new": "Configure the web server to generate session identifiers that are at least 128 bits in length.\n\nEnsure that \"session_crypto_module\" is enabled.\n\nDetermine the location of the \"httpd.conf\" file by running the following command:\n\nhttpd -V\n\nReview the \"HTTPD_ROOT\" path.\n\nNavigate to the \"HTTPD_ROOT\"/conf directory.\n\nEdit the \"httpd.conf\" file.\n\nSessionCryptoCipher aes256\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214253": {
        "describe__deleted": "  unique_id_module = command('httpd -M | grep unique_id').stdout\n\n  describe unique_id_module do\n    it { should include 'unique_id_module' }\n  end",
        "tags": {
          "check_id__added": "C-15467r881436_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92689",
            "SV-102777"
          ],
          "gid": {
            "__old": "V-92689",
            "__new": "V-214253"
          },
          "rid": {
            "__old": "SV-102777r2_rule",
            "__new": "SV-214253r881438_rule"
          },
          "fix_id": {
            "__old": "F-98931r2_fix",
            "__new": "F-15465r881437_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92689",
          "__new": "SV-214253"
        },
        "title": {
          "__old": "The Apache web server must generate a session ID using as much of the\ncharacter set as possible to reduce the risk of brute force.",
          "__new": "The Apache web server must generate a session ID using as much of the character set as possible to reduce the risk of brute force."
        },
        "desc": {
          "__old": "Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user-authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    By generating session IDs that contain as much of the character set as\npossible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder\nto guess.",
          "__new": "Generating a session identifier (ID) that is not easily guessed through brute force is essential to deter several types of session attacks. By knowing the session ID, an attacker can hijack a user session that has already been user-authenticated by the hosted application. The attacker does not need to guess user identifiers and passwords or have a secure token since the user session has already been authenticated.\n\nBy generating session IDs that contain as much of the character set as possible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder to guess.\n\n"
        },
        "descs": {
          "default__deleted": "Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user-authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    By generating session IDs that contain as much of the character set as\npossible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder\nto guess.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify the \"unique_id_module\" is loaded:\n\n    run httpd -M | grep unique_id\n    If no unique_id is returned, open finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify the \"unique_id_module\" is loaded:\n\nrun httpd -M | grep unique_id \nIf no unique_id is returned, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Load the \"unique_id_module\".\n\n    Example: LoadModule unique_id_module modules/mod_unique_id.so\n\n    Restart Apache: apachectl restart",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nLoad the \"unique_id_module\". \n\nExample: LoadModule unique_id_module modules/mod_unique_id.so\n\nRestart Apache: apachectl restart"
          }
        }
      },
      "SV-214254": {
        "describe__deleted": "  describe 'Review documentation for a disaster recovery procedures' do\n    skip \"Interview the System Administrator for the Apache 2.4 web server. Ask for documentation\n      on the disaster recovery methods tested and planned for the Apache 2.4 web server in the event of the necessity for rollback.\"\n  end",
        "tags": {
          "check_id__added": "C-15468r277022_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92695",
            "SV-102783"
          ],
          "gid": {
            "__old": "V-92695",
            "__new": "V-214254"
          },
          "rid": {
            "__old": "SV-102783r1_rule",
            "__new": "SV-214254r879640_rule"
          },
          "fix_id": {
            "__old": "F-98937r1_fix",
            "__new": "F-15466r277023_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92695",
          "__new": "SV-214254"
        },
        "title": {
          "__old": "The Apache web server must be built to fail to a known safe state if\nsystem initialization fails, shutdown fails, or aborts fail.",
          "__new": "The Apache web server must be built to fail to a known safe state if system initialization fails, shutdown fails, or aborts fail."
        },
        "desc": {
          "__old": "Determining a safe state for failure and weighing that against a\npotential denial of service for users depends on what type of application the\nweb server is hosting. For an application presenting publicly available\ninformation that is not critical, a safe state for failure might be to shut\ndown for any type of failure, but for an application that presents critical and\ntimely information, a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\nconfiguring the web server according to what actions to take for each failure\ncondition will provide a known fail safe state for the web server.",
          "__new": "Determining a safe state for failure and weighing that against a potential denial of service for users depends on what type of application the web server is hosting. For an application presenting publicly available information that is not critical, a safe state for failure might be to shut down for any type of failure, but for an application that presents critical and timely information, a shutdown might not be the best state for all failures.\n\nPerforming a proper risk analysis of the hosted applications and configuring the web server according to what actions to take for each failure condition will provide a known fail safe state for the web server.\n\n"
        },
        "descs": {
          "default__deleted": "Determining a safe state for failure and weighing that against a\npotential denial of service for users depends on what type of application the\nweb server is hosting. For an application presenting publicly available\ninformation that is not critical, a safe state for failure might be to shut\ndown for any type of failure, but for an application that presents critical and\ntimely information, a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\nconfiguring the web server according to what actions to take for each failure\ncondition will provide a known fail safe state for the web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "Interview the System Administrator for the Apache 2.4 web server.\n\n    Ask for documentation on the disaster recovery methods tested and planned\nfor the Apache 2.4 web server in the event of the necessity for rollback.\n\n    If documentation for a disaster recovery has not been established, this is\na finding.",
            "__new": "Interview the System Administrator for the Apache 2.4 web server.\n\nAsk for documentation on the disaster recovery methods tested and planned for the Apache 2.4 web server in the event of the necessity for rollback.\n\nIf documentation for a disaster recovery has not been established, this is a finding."
          },
          "fix": {
            "__old": "Prepare documentation for disaster recovery methods for the Apache 2.4 web\nserver in the event of the necessity for rollback.\n\n    Document and test the disaster recovery methods designed.",
            "__new": "Prepare documentation for disaster recovery methods for the Apache 2.4 web server in the event of the necessity for rollback.\n\nDocument and test the disaster recovery methods designed."
          }
        }
      },
      "SV-214255": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('Timeout') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Timeout.nil?\n    apache_conf(config_path).Timeout.each do |value|\n      describe 'Timeout value definition' do\n        subject { value }\n        it { should cmp <= 10 }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15469r881439_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92697",
            "SV-102785"
          ],
          "gid": {
            "__old": "V-92697",
            "__new": "V-214255"
          },
          "rid": {
            "__old": "SV-102785r1_rule",
            "__new": "SV-214255r881441_rule"
          },
          "fix_id": {
            "__old": "F-98939r1_fix",
            "__new": "F-15467r881440_fix"
          },
          "nist": [
            [
              " "
            ],
            [
              "-",
              "SC-5"
            ],
            [
              "+",
              "SC-5 a"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92697",
          "__new": "SV-214255"
        },
        "title": {
          "__old": "The Apache web server must be tuned to handle the operational\nrequirements of the hosted application.",
          "__new": "The Apache web server must be tuned to handle the operational requirements of the hosted application."
        },
        "desc": {
          "__old": "A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.",
          "__new": "A denial of service (DoS) can occur when the Apache web server is so overwhelmed that it can no longer respond to additional requests. A web server not properly tuned may become overwhelmed and cause a DoS condition even with expected traffic from users. To avoid a DoS, the Apache web server must be tuned to handle the expected traffic for the hosted applications.\n\n"
        },
        "descs": {
          "default__deleted": "A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify that the \"Timeout\" directive is specified to have a value of\n\"10\" seconds or less.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Timeout\"\n\n    If the \"Timeout\" directive is not configured or is set for more than\n\"10\" seconds, this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify that the \"Timeout\" directive is specified to have a value of \"10\" seconds or less.\n\n# cat /<path_to_file>/httpd.conf | grep -i \"Timeout\"\n\nIf the \"Timeout\" directive is not configured or is set for more than \"10\" seconds, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or modify the \"Timeout\" directive to have a value of \"10\" seconds\nor less:\n\n    \"Timeout 10\"",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd or modify the \"Timeout\" directive to have a value of \"10\" seconds or less:\n\n\"Timeout 10\""
          }
        }
      },
      "SV-214256": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('ErrorDocument') { should_not be_empty }\n    its('ErrorDocument.to_s') { should match /4[0-9][0-9]/ }\n    its('ErrorDocument.to_s') { should match /5[0-9][0-9]/ }\n  end",
        "tags": {
          "check_id__added": "C-15470r881442_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92699",
            "SV-102787"
          ],
          "gid": {
            "__old": "V-92699",
            "__new": "V-214256"
          },
          "rid": {
            "__old": "SV-102787r1_rule",
            "__new": "SV-214256r881444_rule"
          },
          "fix_id": {
            "__old": "F-98941r1_fix",
            "__new": "F-15468r881443_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92699",
          "__new": "SV-214256"
        },
        "title": {
          "__old": "Warning and error messages displayed to clients must be modified to\nminimize the identity of the Apache web server, patches, loaded modules, and\ndirectory paths.",
          "__new": "Warning and error messages displayed to clients must be modified to minimize the identity of the Apache web server, patches, loaded modules, and directory paths."
        },
        "desc": {
          "__old": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users, displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.",
          "__new": "Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server, backend systems being accessed, and plug-ins or modules being used.\n\nWeb servers will often display error messages to client users, displaying enough information to aid in the debugging of the error. The information given back in error messages may display the web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage.\n\nThis information could be used by an attacker to blueprint what type of attacks might be successful. The information given to users must be minimized to not aid in the blueprinting of the Apache web server."
        },
        "descs": {
          "default__deleted": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users, displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If the \"ErrorDocument\" directive is not being used for custom error pages\nfor \"4xx\" or \"5xx\" HTTP status codes, this is a finding.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"ErrorDocument\"",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nIf the \"ErrorDocument\" directive is not being used for custom error pages for \"4xx\" or \"5xx\" HTTP status codes, this is a finding.\n\n# cat /<path_to_file>/httpd.conf | grep -i \"ErrorDocument\""
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Use the \"ErrorDocument\" directive to enable custom error pages for 4xx or\n5xx HTTP status codes.\n\n    ErrorDocument 500 \"Sorry, our script crashed. Oh dear\"\n    ErrorDocument 500 /cgi-bin/crash-recover\n    ErrorDocument 500 http://error.example.com/server_error.html\n    ErrorDocument 404 /errors/not_found.html\n    ErrorDocument 401 /subscription/how_to_subscribe.html\n\n    The syntax of the ErrorDocument directive is:\n\n    ErrorDocument <3-digit-code> <action>\n\n    Additional information:\n\n    https://httpd.apache.org/docs/2.4/custom-error.html",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nUse the \"ErrorDocument\" directive to enable custom error pages for 4xx or 5xx HTTP status codes.\n\nErrorDocument 500 \"Sorry, our script crashed. Oh dear\"\nErrorDocument 500 /cgi-bin/crash-recover\nErrorDocument 500 http://error.example.com/server_error.html\nErrorDocument 404 /errors/not_found.html\nErrorDocument 401 /subscription/how_to_subscribe.html\n\nThe syntax of the ErrorDocument directive is:\n\nErrorDocument <3-digit-code> <action>\n\nAdditional information: \n\nhttps://httpd.apache.org/docs/2.4/custom-error.html"
          }
        }
      },
      "SV-214257": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('TraceEnable') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).TraceEnable.nil?\n    apache_conf(config_path).TraceEnable.each do |value|\n      describe 'TraceEnable value should be off' do\n        subject { value }\n        it { should cmp 'off' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('LogLevel') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).LogLevel.nil?\n    apache_conf(config_path).LogLevel.each do |value|\n      describe 'LogLevel value should be set' do\n        subject { value }\n        it { should_not be_nil }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15471r881445_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92701",
            "SV-102789"
          ],
          "gid": {
            "__old": "V-92701",
            "__new": "V-214257"
          },
          "rid": {
            "__old": "SV-102789r1_rule",
            "__new": "SV-214257r881447_rule"
          },
          "fix_id": {
            "__old": "F-98943r1_fix",
            "__new": "F-15469r881446_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92701",
          "__new": "SV-214257"
        },
        "title": {
          "__old": "Debugging and trace information used to diagnose the Apache web server\nmust be disabled.",
          "__new": "Debugging and trace information used to diagnose the Apache web server must be disabled."
        },
        "desc": {
          "__old": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used.\n\n    When debugging or trace information is enabled in a production web server,\ninformation about the web server, such as web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage may be\ndisplayed. Since this information may be placed in logs and general messages\nduring normal operation of the web server, an attacker does not need to cause\nan error condition to gain this information.",
          "__new": "Information needed by an attacker to begin looking for possible vulnerabilities in a web server includes any information about the web server and plug-ins or modules being used.\n\nWhen debugging or trace information is enabled in a production web server, information about the web server, such as web server type, version, patches installed, plug-ins and modules installed, type of code being used by the hosted application, and any backends being used for data storage may be displayed. Since this information may be placed in logs and general messages during normal operation of the web server, an attacker does not need to cause an error condition to gain this information."
        },
        "descs": {
          "default__deleted": "Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used.\n\n    When debugging or trace information is enabled in a production web server,\ninformation about the web server, such as web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage may be\ndisplayed. Since this information may be placed in logs and general messages\nduring normal operation of the web server, an attacker does not need to cause\nan error condition to gain this information.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    For any enabled \"TraceEnable\" directives, verify they are part of the\nserver-level configuration (i.e., not nested in a \"Directory\" or \"Location\"\ndirective).\n\n    Verify that the \"TraceEnable\" directive is set to \"Off\":\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"TraceEnable\"\n\n    If the \"TraceEnable\" directive is not part of the server-level\nconfiguration and/or is not set to \"Off\", this is a finding.\n\n    If the directive does not exist in the \"conf\" file, this is a finding\nbecause the default value is \"On\".\n\n    If the \"LogLevel\" directive is not being used, this is a finding:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogLevel\"",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nFor any enabled \"TraceEnable\" directives, verify they are part of the server-level configuration (i.e., not nested in a \"Directory\" or \"Location\" directive). \n\nVerify that the \"TraceEnable\" directive is set to \"Off\":\n\n# cat /<path_to_file>/httpd.conf | grep -i \"TraceEnable\"\n\nIf the \"TraceEnable\" directive is not part of the server-level configuration and/or is not set to \"Off\", this is a finding.\n\nIf the directive does not exist in the \"conf\" file, this is a finding because the default value is \"On\".\n\nIf the \"LogLevel\" directive is not being used, this is a finding: \n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogLevel\""
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or set the value of \"TraceEnable\" to \"Off\".\n\n    Set the \"LogLevel\" directive to \"info\" or below.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAdd or set the value of \"TraceEnable\" to \"Off\". \n\nSet the \"LogLevel\" directive to \"info\" or below."
          }
        }
      },
      "SV-214258": {
        "describe__deleted": "  config_path = input('config_path')\n\n  reqtimeout_module = command('httpd -M | grep reqtimeout_module').stdout\n\n  describe reqtimeout_module do\n    it { should include 'reqtimeout_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('RequestReadTimeout') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).RequestReadTimeout.nil?\n    apache_conf(config_path).RequestReadTimeout.each do |value|\n      describe 'RequestReadTimeout value should be set' do\n        subject { value }\n        it { should_not be_nil }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15472r881448_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102793",
            "V-92705"
          ],
          "gid": {
            "__old": "V-92705",
            "__new": "V-214258"
          },
          "rid": {
            "__old": "SV-102793r1_rule",
            "__new": "SV-214258r881450_rule"
          },
          "fix_id": {
            "__old": "F-98947r1_fix",
            "__new": "F-15470r881449_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92705",
          "__new": "SV-214258"
        },
        "desc": {
          "__old": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.",
          "__new": "Leaving sessions open indefinitely is a major security risk. An attacker can easily use an already authenticated session to access the hosted application as the previously authenticated user. By closing sessions after a set period of inactivity, the Apache web server can make certain that those sessions that are not closed through the user logging out of an application are eventually closed. mod_reqtimeout is an Apache module designed to shut down connections from clients taking too long to send their request, as seen in many attacks. This module provides a directive that allows Apache to close the connection if it senses that the client is not sending data quickly enough.\n\nAcceptable values are 5 minutes for high-value applications, 10 minutes for medium-value applications, and 20 minutes for low-value applications."
        },
        "descs": {
          "default__deleted": "Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify the \"reqtimeout_module\" is loaded:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"reqtimeout_module\"\n\n    If the \"reqtimeout_module\" is not loaded, this is a finding.\n\n    Verify the \"RequestReadTimeout\" directive is configured.\n\n    If the \"reqtimeout_module\" is loaded and the \"RequestReadTimeout\"\ndirective is not configured, this is a finding.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nVerify the \"reqtimeout_module\" is loaded:\n\nChange to the root directory of Apache and run the following command to verify the \"reqtimeout_module\" is loaded:\n\n# httpd -M | grep reqtimeout_module\nOutout: reqtimeout_module (shared)\n\nIf the \"reqtimeout_module\" is not loaded, this is a finding.\n\nVerify the \"RequestReadTimeout\" directive is configured. \nExample: RequestReadTimeout handshake=5 header=10 body=30\nAllows for 5 seconds to complete the TLS handshake, 10 seconds to receive the request headers, and 30 seconds for receiving the request body.\nThe values will depend upon the website. \nThe intent of this requirement is to ensure the RequestReadTimeout is explicitly configured.\nIf the \"reqtimeout_module\" is loaded and the \"RequestReadTimeout\" directive is not configured, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Load the \"reqtimeout_module\".\n\n    Set the \"RequestReadTimeout\" directive.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nLoad the \"reqtimeout_module\".\n\nSet the \"RequestReadTimeout\" directive to specific values applicable to the website."
          }
        }
      },
      "SV-214259": {
        "describe__deleted": "  firewall = input('host_based_firewall_used')\n  config_path = input('config_path')\n  if firewall\n    impact 0.0\n  else\n    impact 0.5\n  end\n\n  describe apache_conf(config_path) do\n    its('RequireAll') { should_not be_nil }\n  end\n\n  require_all = file(config_path).content.scan(%r{^\\s*(<RequireAll[\\s\\S]*?>[\\s\\S]*?</RequireAll>)})\n\n  unless apache_conf(config_path).RequireAll.nil?\n    describe 'If IP ranges for RequireAll directive are not restrictive enough to prevent connections from nonsecure zones, this is a finding.' do\n      skip \"The RequireAll directive is provided below. A manual check is required to verify the IP addresses. \\n #{require_all}\\n\"\n    end\n  end",
        "tags": {
          "check_id__added": "C-15473r881451_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92709",
            "SV-102797"
          ],
          "gid": {
            "__old": "V-92709",
            "__new": "V-214259"
          },
          "rid": {
            "__old": "SV-102797r1_rule",
            "__new": "SV-214259r881452_rule"
          },
          "fix_id": {
            "__old": "F-98951r2_fix",
            "__new": "F-15471r277038_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92709",
          "__new": "SV-214259"
        },
        "title": {
          "__old": "The Apache web server must restrict inbound connections from nonsecure\nzones.",
          "__new": "The Apache web server must restrict inbound connections from nonsecure zones."
        },
        "desc": {
          "__old": "Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.",
          "__new": "Remote access to the Apache web server is any access that communicates through an external, non-organization-controlled network. Remote access can be used to access hosted applications or to perform management functions.\n\nA web server can be accessed remotely and must be capable of restricting access from what the DoD defines as nonsecure zones. Nonsecure zones are defined as any IP, subnet, or region that is defined as a threat to the organization. The nonsecure zones must be defined for public web servers logically located in a DMZ, as well as private web servers with perimeter protection devices. By restricting access from nonsecure zones, through the internal web server access list, the Apache web server can stop or slow denial-of-service (DoS) attacks on the web server."
        },
        "descs": {
          "default__deleted": "Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "If external controls such as host-based firewalls are used to restrict this\naccess, this check is Not Applicable.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"RequireAll\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"RequireAll\"\n\n    If \"RequireAll\" is not configured or IP ranges configured to allow are\nnot restrictive enough to prevent connections from nonsecure zones, this is a\nfinding.",
            "__new": "If external controls such as host-based firewalls are used to restrict this access, this check is Not Applicable.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the \"RequireAll\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"RequireAll\"\n\nIf \"RequireAll\" is not configured, or IP ranges configured to allow are not restrictive enough to prevent connections from nonsecure zones, this is a finding."
          }
        }
      },
      "SV-214260": {
        "describe__deleted": "  describe 'Review procedures for shutting down Server in the event of an attack' do\n    skip \"If the web server is not capable of or cannot be configured to disconnect or disable remote access to the hosted applications when necessary, this is a finding\n    Interview the SA and Web Manager.\n    Ask for documentation for the Apache web server administration.\n    Verify there are documented procedures for shutting down an Apache website in the event of an attack.\"\n  end",
        "tags": {
          "check_id__added": "C-15474r881453_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92711",
            "SV-102799"
          ],
          "gid": {
            "__old": "V-92711",
            "__new": "V-214260"
          },
          "rid": {
            "__old": "SV-102799r1_rule",
            "__new": "SV-214260r881454_rule"
          },
          "fix_id": {
            "__old": "F-98953r1_fix",
            "__new": "F-15472r854699_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92711",
          "__new": "SV-214260"
        },
        "title": {
          "__old": "The Apache web server must be configured to immediately disconnect or\ndisable remote access to the hosted applications.",
          "__new": "The Apache web server must be configured to immediately disconnect or disable remote access to the hosted applications."
        },
        "desc": {
          "__old": "During an attack on the Apache web server or any of the hosted\napplications, the System Administrator (SA) may need to disconnect or disable\naccess by users to stop the attack.\n\n    The Apache web server must be configured to disconnect users from a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nApache web server, or block all connections through the Apache web server\naccess list.\n\n    The Apache web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the Apache web server must be documented\nto make certain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.",
          "__new": "During an attack on the Apache web server or any of the hosted applications, the System Administrator (SA) may need to disconnect or disable access by users to stop the attack.\n\nThe Apache web server must be configured to disconnect users from a hosted application without compromising other hosted applications unless deemed necessary to stop the attack. Methods to disconnect or disable connections are to stop the application service for a specified hosted application, stop the Apache web server, or block all connections through the Apache web server access list.\n\nThe Apache web server capabilities used to disconnect or disable users from connecting to hosted applications and the Apache web server must be documented to make certain that, during an attack, the proper action is taken to conserve connectivity to any other hosted application if possible and to make certain log data is conserved for later forensic analysis."
        },
        "descs": {
          "default__deleted": "During an attack on the Apache web server or any of the hosted\napplications, the System Administrator (SA) may need to disconnect or disable\naccess by users to stop the attack.\n\n    The Apache web server must be configured to disconnect users from a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nApache web server, or block all connections through the Apache web server\naccess list.\n\n    The Apache web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the Apache web server must be documented\nto make certain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.",
          "rationale__deleted": "",
          "check": {
            "__old": "Interview the SA and Web Manager.\n\n    Ask for documentation for the Apache web server administration.\n\n    Verify there are documented procedures for shutting down an Apache website\nin the event of an attack. The procedure should, at a minimum, provide the\nfollowing steps:\n\n    Determine the respective website for the application at risk of an attack.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    In a command line, enter the following command:\n\n    \"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\"\n\n    If the web server is not capable of or cannot be configured to disconnect\nor disable remote access to the hosted applications when necessary, this is a\nfinding.",
            "__new": "Interview the SA and Web Manager.\n\nAsk for documentation for the Apache web server administration.\n\nVerify there are documented procedures for shutting down an Apache website in the event of an attack. \n\nThe procedure must, at a minimum, provide the following steps:\n\n1. Determine the respective website for the application at risk of an attack.\n\n2. Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file|pidlog'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n-D DEFAULT_PIDLOG=”/run/httpd/httpd.pid”\n \n3. Search for the PidFile runtime directive. (This example uses the combined results of HTTPD_ROOT and SERVER_CONFIG_FILE, above.) \n\n# grep -i pidfile /etc/httpd/conf/httpd.conf  \n\n4. If this command returns a result, use this value in the kill command, otherwise, use the DEFAULT_PIDLOG value, above.\n\n# kill -TERM `cat <FULLY-QUALIFIED_PIDFILE_FILENAME>`\nNote: These should be documented steps, validators should not run kill commands while reviewing production systems.\n\nIf the web server is not capable of or cannot be configured to disconnect or disable remote access to the hosted applications when necessary, this is a finding."
          },
          "fix": {
            "__old": "Prepare documented procedures for shutting down an Apache website in the\nevent of an attack.\n\n    The procedure should, at a minimum, provide the following steps:\n\n    In a command line, enter the following command:\n\n    \"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\"",
            "__new": "Prepare documented procedures for shutting down an Apache website in the event of an attack.\n\nThe procedure should, at a minimum, provide the following steps:\n\nSearch for the PidFile runtime directive. (This example uses the combined results of HTTPD_ROOT and SERVER_CONFIG_FILE, above.) If this command returns a result, use this value in the kill command, otherwise, use the DEFAULT_PIDLOG value, above.\n\nIn a command line, enter the following command:\n\n# grep -i pidfile /etc/httpd/conf/httpd.conf  \n\n# kill -TERM 'cat <FULLY-QUALIFIED_PIDFILE_FILENAME>'"
          }
        }
      },
      "SV-214261": {
        "describe__deleted": "  describe 'Review access to web server and tools' do\n    skip \"If accounts other than the System Administrator (SA), the Web Manager, or the Web Manager designees have access to the web administration tool or control files, this is a finding.\n    Determine which tool or control file is used to control the configuration of the web server.\n    If the control of the web server is done via control files, verify who has update access to them.\n    If tools are being used to configure the web server, determine who has access to execute the tools.\"\n  end",
        "tags": {
          "check_id__added": "C-15475r277043_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92713",
            "SV-102801"
          ],
          "gid": {
            "__old": "V-92713",
            "__new": "V-214261"
          },
          "rid": {
            "__old": "SV-102801r1_rule",
            "__new": "SV-214261r879717_rule"
          },
          "fix_id": {
            "__old": "F-98955r1_fix",
            "__new": "F-15473r277044_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92713",
          "__new": "SV-214261"
        },
        "title": {
          "__old": "Non-privileged accounts on the hosting system must only access Apache\nweb server security-relevant information and functions through a distinct\nadministrative account.",
          "__new": "Non-privileged accounts on the hosting system must only access Apache web server security-relevant information and functions through a distinct administrative account."
        },
        "desc": {
          "__old": "By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.",
          "__new": "By separating Apache web server security functions from non-privileged users, roles can be developed that can then be used to administer the Apache web server. Forcing users to change from a non-privileged account to a privileged account when operating on the Apache web server or on security-relevant information forces users to only operate as a Web Server Administrator when necessary. Operating in this manner allows for better logging of changes and better forensic information and limits accidental changes to the Apache web server."
        },
        "descs": {
          "default__deleted": "By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine which tool or control file is used to control the configuration\nof the web server.\n\n    If the control of the web server is done via control files, verify who has\nupdate access to them. If tools are being used to configure the web server,\ndetermine who has access to execute the tools.\n\n    If accounts other than the System Administrator (SA), the Web Manager, or\nthe Web Manager designees have access to the web administration tool or control\nfiles, this is a finding.",
            "__new": "Determine which tool or control file is used to control the configuration of the web server.\n\nIf the control of the web server is done via control files, verify who has update access to them. If tools are being used to configure the web server, determine who has access to execute the tools.\n\nIf accounts other than the System Administrator (SA), the Web Manager, or the Web Manager designees have access to the web administration tool or control files, this is a finding."
          },
          "fix": {
            "__old": "Restrict access to the web administration tool to only the\nSystem Administrator, Web Manager, or the Web Manager designees.",
            "__new": "Restrict access to the web administration tool to only the System Administrator, Web Manager, or the Web Manager designees."
          }
        }
      },
      "SV-214262": {
        "describe__deleted": "  describe 'Work with SIEM administrator to determine log storage capacity.' do\n    skip 'If there is no setting within a SIEM to accommodate enough a large logging capacity, this is a finding.'\n  end",
        "tags": {
          "check_id__added": "C-15476r277046_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92715",
            "SV-102803"
          ],
          "gid": {
            "__old": "V-92715",
            "__new": "V-214262"
          },
          "rid": {
            "__old": "SV-102803r1_rule",
            "__new": "SV-214262r879730_rule"
          },
          "fix_id": {
            "__old": "F-98957r1_fix",
            "__new": "F-15474r277047_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92715",
          "__new": "SV-214262"
        },
        "title": {
          "__old": "The Apache web server must use a logging mechanism that is configured\nto allocate log record storage capacity large enough to accommodate the logging\nrequirements of the Apache web server.",
          "__new": "The Apache web server must use a logging mechanism that is configured to allocate log record storage capacity large enough to accommodate the logging requirements of the Apache web server."
        },
        "desc": {
          "__old": "To make certain that the logging mechanism used by the web server has\nsufficient storage capacity in which to write the logs, the logging mechanism\nneeds to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The System Administrator\nwill usually coordinate the allocation of physical drive space with the Web\nServer Administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.",
          "__new": "To make certain that the logging mechanism used by the web server has sufficient storage capacity in which to write the logs, the logging mechanism needs to be able to allocate log record storage capacity.\n\nThe task of allocating log record storage capacity is usually performed during initial installation of the logging mechanism. The System Administrator will usually coordinate the allocation of physical drive space with the Web Server Administrator along with the physical location of the partition and disk. Refer to NIST SP 800-92 for specific requirements on log rotation and storage dependent on the impact of the web server."
        },
        "descs": {
          "default__deleted": "To make certain that the logging mechanism used by the web server has\nsufficient storage capacity in which to write the logs, the logging mechanism\nneeds to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The System Administrator\nwill usually coordinate the allocation of physical drive space with the Web\nServer Administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.",
          "rationale__deleted": "",
          "check": {
            "__old": "Work with SIEM administrator to determine log storage capacity.\n\n    If there is no setting within a SIEM to accommodate enough a large logging\ncapacity, this is a finding.",
            "__new": "Work with SIEM administrator to determine log storage capacity. \n\nIf there is no setting within a SIEM to accommodate enough a large logging capacity, this is a finding."
          },
          "fix": {
            "__old": "Work with the SIEM administrator to determine if the SIEM is\nconfigured to allocate log record storage capacity large enough to accommodate\nthe logging requirements of the Apache web server.",
            "__new": "Work with the SIEM administrator to determine if the SIEM is configured to allocate log record storage capacity large enough to accommodate the logging requirements of the Apache web server."
          }
        }
      },
      "SV-214263": {
        "describe__deleted": "  describe 'Work with SIEM administrator to determine audit configurations' do\n    skip 'If there is a setting within the SIEM that could impede the ability to write specific log record content, this is a finding.'\n  end",
        "tags": {
          "check_id__added": "C-15477r277049_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92717",
            "SV-102805"
          ],
          "gid": {
            "__old": "V-92717",
            "__new": "V-214263"
          },
          "rid": {
            "__old": "SV-102805r1_rule",
            "__new": "SV-214263r879731_rule"
          },
          "fix_id": {
            "__old": "F-98959r1_fix",
            "__new": "F-15475r277050_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92717",
          "__new": "SV-214263"
        },
        "title": {
          "__old": "The Apache web server must not impede the ability to write specified\nlog record content to an audit log server.",
          "__new": "The Apache web server must not impede the ability to write specified log record content to an audit log server."
        },
        "desc": {
          "__old": "Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.",
          "__new": "Writing events to a centralized management audit system offers many benefits to the enterprise over having dispersed logs. Centralized management of audit records and logs provides for efficiency in maintenance and management of records, enterprise analysis of events, and backup and archiving of event records enterprise-wide. The web server and related components are required to be capable of writing logs to centralized audit log servers."
        },
        "descs": {
          "default__deleted": "Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.",
          "rationale__deleted": "",
          "check": {
            "__old": "Work with SIEM administrator to determine audit configurations.\n\n    If there is a setting within the SIEM that could impede the ability to\nwrite specific log record content, this is a finding.",
            "__new": "Work with SIEM administrator to determine audit configurations. \n\nIf there is a setting within the SIEM that could impede the ability to write specific log record content, this is a finding."
          },
          "fix": {
            "__old": "Work with the SIEM administrator to  allow the ability to write\nspecified log record content to an audit log server.",
            "__new": "Work with the SIEM administrator to  allow the ability to write specified log record content to an audit log server."
          }
        }
      },
      "SV-214264": {
        "describe__deleted": "  describe 'Work with the SIEM administrator to determine current security integrations' do\n    skip 'If the SIEM is not integrated with security, this is a finding.'\n  end",
        "tags": {
          "check_id__added": "C-15478r277052_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92719",
            "SV-102807"
          ],
          "gid": {
            "__old": "V-92719",
            "__new": "V-214264"
          },
          "rid": {
            "__old": "SV-102807r1_rule",
            "__new": "SV-214264r879731_rule"
          },
          "fix_id": {
            "__old": "F-98961r1_fix",
            "__new": "F-15476r277053_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92719",
          "__new": "SV-214264"
        },
        "title": {
          "__old": "The Apache web server must be configured to integrate with an\norganizations security infrastructure.",
          "__new": "The Apache web server must be configured to integrate with an organizations security infrastructure."
        },
        "desc": {
          "__old": "A web server will typically use logging mechanisms for maintaining a\nhistorical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.",
          "__new": "A web server will typically use logging mechanisms for maintaining a historical log of activity that occurs within a hosted application. This information can then be used for diagnostic purposes, forensics purposes, or other purposes relevant to ensuring the availability and integrity of the hosted application.\n\nWhile it is important to log events identified as being critical and relevant to security, it is equally important to notify the appropriate personnel in a timely manner so they are able to respond to events as they occur. \n\nManual review of the web server logs may not occur in a timely manner, and each event logged is open to interpretation by a reviewer. By integrating the web server into an overall or organization-wide log review, a larger picture of events can be viewed, and analysis can be done in a timely and reliable manner."
        },
        "descs": {
          "default__deleted": "A web server will typically use logging mechanisms for maintaining a\nhistorical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.",
          "rationale__deleted": "",
          "check": {
            "__old": "Work with the SIEM administrator to determine current security\nintegrations.\n\n    If the SIEM is not integrated with security, this is a finding.",
            "__new": "Work with the SIEM administrator to determine current security integrations. \n\nIf the SIEM is not integrated with security, this is a finding."
          },
          "fix": {
            "__old": "Work with the SIEM administrator to integrate with an\norganizations security infrastructure.",
            "__new": "Work with the SIEM administrator to integrate with an organizations security infrastructure."
          }
        }
      },
      "SV-214265": {
        "describe__deleted": "  config_path = input('config_path')\n  describe file(config_path) do\n    its('content') { should match '^[\\\\s]*LogFormat[\\\\s]+.*(?=.*\\%t).*$' }\n  end\n\n  log_config_module = command('httpd -M | grep log_config_module').stdout\n\n  describe log_config_module do\n    it { should include 'log_config_module' }\n  end",
        "tags": {
          "check_id__added": "C-15479r881455_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92723",
            "SV-102811"
          ],
          "gid": {
            "__old": "V-92723",
            "__new": "V-214265"
          },
          "rid": {
            "__old": "SV-102811r1_rule",
            "__new": "SV-214265r881456_rule"
          },
          "fix_id": {
            "__old": "F-98965r1_fix",
            "__new": "F-15477r277056_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92723",
          "__new": "SV-214265"
        },
        "title": {
          "__old": "The Apache web server must generate log records that can be mapped to\nCoordinated Universal Time (UTC) or Greenwich Mean Time (GMT) which are stamped\nat a minimum granularity of one second.",
          "__new": "The Apache web server must generate log records that can be mapped to Coordinated Universal Time (UTC) or Greenwich Mean Time (GMT) which are stamped at a minimum granularity of one second."
        },
        "desc": {
          "__old": "If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the Apache web server include date and time. Time\nis commonly expressed in UTC, a modern continuation of GMT, or local time with\nan offset from UTC.\n\n    Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the Apache web server include date and time and\nmust be to a granularity of one second.",
          "__new": "If time stamps are not consistently applied and there is no common time reference, it is difficult to perform forensic analysis across multiple devices and log records.\n\nTime stamps generated by the Apache web server include date and time. Time is commonly expressed in UTC, a modern continuation of GMT, or local time with an offset from UTC.\n\nWithout sufficient granularity of time stamps, it is not possible to adequately determine the chronological order of records.\n\nTime stamps generated by the Apache web server include date and time and must be to a granularity of one second.\n\n"
        },
        "descs": {
          "default__deleted": "If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the Apache web server include date and time. Time\nis commonly expressed in UTC, a modern continuation of GMT, or local time with\nan offset from UTC.\n\n    Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the Apache web server include date and time and\nmust be to a granularity of one second.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and configuration to determine the time\nstamp format for log data.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"log_config_module\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\n    Verify the \"LogFormat\" directive exists.\n\n    If the \"LogFormat\" directive does not exist, this is a finding.\n\n    Verify the \"LogFormat\" line contains the \"%t\" flag.\n\n    If \"%t\" flag is not present, time is not mapped to UTC or GMT time, this\nis a finding.",
            "__new": "Review the web server documentation and configuration to determine the time stamp format for log data.\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used.  \n\nSearch for the \"log_config_module\" directive:\n\n# cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\nVerify the \"LogFormat\" directive exists.\n\nIf the \"LogFormat\" directive does not exist, this is a finding.\n\nVerify the \"LogFormat\" line contains the \"%t\" flag.\n \nIf \"%t\" flag is not present, time is not mapped to UTC or GMT time, this is a finding."
          },
          "fix": {
            "__old": "In a command line, run \"httpd -M\" to view a list of installed modules.\n\n    If \"log_config_module\" is not listed, enable this module.\n\n    Review the \"httpd.conf\" file.\n\n    Determine if the \"LogFormat\" directive exists. If it does not exist,\nensure the \"LogFormat\" line contains the %t flag.",
            "__new": "In a command line, run \"httpd -M\" to view a list of installed modules.\n\nIf \"log_config_module\" is not listed, enable this module.\n\nReview the \"httpd.conf\" file.\n\nDetermine if the \"LogFormat\" directive exists. If it does not exist, ensure the \"LogFormat\" line contains the %t flag."
          }
        }
      },
      "SV-214266": {
        "describe__deleted": "  describe 'Review the website to determine if HTTP and HTTPs are used in accordance with well known ports (e.g., 80 and 443) or those ports and services as registered and approved for use by the DoD PPSM. Any variation in PPS will be documented, registered, and approved by the PPSM' do\n    skip 'The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services. If not, this is a finding.'\n  end",
        "tags": {
          "check_id__added": "C-15480r277058_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92727",
            "SV-102815"
          ],
          "gid": {
            "__old": "V-92727",
            "__new": "V-214266"
          },
          "rid": {
            "__old": "SV-102815r1_rule",
            "__new": "SV-214266r879756_rule"
          },
          "fix_id": {
            "__old": "F-98971r1_fix",
            "__new": "F-15478r277059_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92727",
          "__new": "SV-214266"
        },
        "title": {
          "__old": "The Apache web server must prohibit or restrict the use of nonsecure\nor unnecessary ports, protocols, modules, and/or services.",
          "__new": "The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services."
        },
        "desc": {
          "__old": "Web servers provide numerous processes, features, and functionalities\nthat use TCP/IP ports. Some of these processes may be deemed unnecessary or too\nunsecure to run on a production system.\n\n    The Apache web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the Ports, Protocols, and\nServices Management (PPSM) Category Assurance List (CAL) and vulnerability\nassessments.",
          "__new": "Web servers provide numerous processes, features, and functionalities that use TCP/IP ports. Some of these processes may be deemed unnecessary or too unsecure to run on a production system.\n\nThe Apache web server must provide the capability to disable or deactivate network-related services that are deemed to be non-essential to the server mission, are too unsecure, or are prohibited by the Ports, Protocols, and Services Management (PPSM) Category Assurance List (CAL) and vulnerability assessments."
        },
        "descs": {
          "default__deleted": "Web servers provide numerous processes, features, and functionalities\nthat use TCP/IP ports. Some of these processes may be deemed unnecessary or too\nunsecure to run on a production system.\n\n    The Apache web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the Ports, Protocols, and\nServices Management (PPSM) Category Assurance List (CAL) and vulnerability\nassessments.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the website to determine if HTTP and HTTPs are used in\naccordance with well known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD PPSM. Any variation in PPS will\nbe documented, registered, and approved by the PPSM. If not, this is a finding.",
            "__new": "Review the website to determine if HTTP and HTTPs are used in accordance with well known ports (e.g., 80 and 443) or those ports and services as registered and approved for use by the DoD PPSM. Any variation in PPS will be documented, registered, and approved by the PPSM. If not, this is a finding."
          },
          "fix": {
            "__old": "Ensure the website enforces the use of IANA well-known ports\nfor HTTP and HTTPS.",
            "__new": "Ensure the website enforces the use of IANA well-known ports for HTTP and HTTPS."
          }
        }
      },
      "SV-214267": {
        "describe__deleted": "  pid_path = command('find / -name httpd.pid').stdout.strip\n  service_path = command('find / -name service').stdout.strip\n  apachectl_path = command('find / -name apachectl').stdout.strip\n\n  if file(pid_path).exist?\n    describe file(pid_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end\n\n  if file(service_path).exist?\n    describe file(service_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end\n\n  if file(apachectl_path).exist?\n    describe file(apachectl_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end",
        "tags": {
          "check_id__added": "C-15481r881457_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92731",
            "SV-102819"
          ],
          "gid": {
            "__old": "V-92731",
            "__new": "V-214267"
          },
          "rid": {
            "__old": "SV-102819r1_rule",
            "__new": "SV-214267r881458_rule"
          },
          "fix_id": {
            "__old": "F-98975r1_fix",
            "__new": "F-15479r277062_fix"
          },
          "nist": [
            [
              "-",
              "SC-5"
            ],
            [
              "+",
              "SC-5 a"
            ]
          ]
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92731",
          "__new": "SV-214267"
        },
        "title": {
          "__old": "The Apache web server must be protected from being stopped by a\nnon-privileged user.",
          "__new": "The Apache web server must be protected from being stopped by a non-privileged user."
        },
        "desc": {
          "__old": "An attacker has at least two reasons to stop a web server. The first\nis to cause a denial of service (DoS), and the second is to put in place\nchanges the attacker made to the web server configuration.\n\n    To prohibit an attacker from stopping the Apache web server, the process ID\n(pid) of the web server and the utilities used to start/stop it must be\nprotected from access by non-privileged users. By knowing the \"pid\" and\nhaving access to the Apache web server utilities, a non-privileged user has a\ngreater capability of stopping the server, whether intentionally or\nunintentionally.",
          "__new": "An attacker has at least two reasons to stop a web server. The first is to cause a denial of service (DoS), and the second is to put in place changes the attacker made to the web server configuration.\n\nTo prohibit an attacker from stopping the Apache web server, the process ID (pid) of the web server and the utilities used to start/stop it must be protected from access by non-privileged users. By knowing the \"pid\" and having access to the Apache web server utilities, a non-privileged user has a greater capability of stopping the server, whether intentionally or unintentionally."
        },
        "descs": {
          "default__deleted": "An attacker has at least two reasons to stop a web server. The first\nis to cause a denial of service (DoS), and the second is to put in place\nchanges the attacker made to the web server configuration.\n\n    To prohibit an attacker from stopping the Apache web server, the process ID\n(pid) of the web server and the utilities used to start/stop it must be\nprotected from access by non-privileged users. By knowing the \"pid\" and\nhaving access to the Apache web server utilities, a non-privileged user has a\ngreater capability of stopping the server, whether intentionally or\nunintentionally.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \"httpd.pid\" file is located by running the following\ncommand:\n\n    find / -name \"httpd.pid\"\n     \n    This file is automatically generated upon service start. Verify the file\nowner/group is of an administrative  service account:\n     \n    ls -lah <'httpd.pid location'>/httpd.pid\n     \n    If the file owner/group is not an administrative service account, this is a\nfinding.\n     \n    Verify the service utilities used to manage the Apache service owner/group\nis of an administrative service account.\n     \n    ls -lah /usr/sbin/service\n    ls -lah /usr/sbin/apachectl\n     \n    If the service utilities owner/group is not an administrative service\naccount, this is a finding.\n     \n    Determine whether the process ID and the utilities are protected from\nnon-privileged users.\n     \n    If the process ID and the utilities are not protected from non-privileged\nusers, this is a finding.",
            "__new": "Review the web server documentation and deployed configuration to determine where the process ID is stored and which utilities are used to start/stop the web server.\n\nLocate the httpd.pid file and list its permission set and owner/group\n\n# find / -name “httpd.pid\nOutput should be similar to: /run/httpd/httpd.pid \n\n# ls -laH /run/httpd/httpd.pid\nOutput should be similar -rw-r--r--. 1 root root 5 Jun 13 03:18 /run/httpd/httpd.pid\n\nIf the file owner/group is not an administrative service account, this is a finding.\n\nIf permission set is not 644 or more restrictive, this is a finding.\n \nVerify the Apache service utilities (binaries) have the correct permission set and are user/group owned by an administrator account\n\n# ls -laH /usr/sbin/service\nOutput should be similar: -rwxr-xr-x. 1 root root 3.2K Aug 19, 2019 /usr/sbin/service\n\n# ls -laH /usr/sbin/apachectl\nOutput should be similar: -rwxr-xr-x. 1 root root 4.2K Oct 8, 2019 /usr/sbin/apachectl\n \nIf the service utilities owner/group is not an administrative service account, this is a finding.\n \nIf permission set is not 755 or more restrictive, this is a finding."
          },
          "fix": {
            "__old": "Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \"httpd.pid\" file is located by running the following\ncommand:\n\n    find / -name \"httpd.pid\"\n\n    Run the following commands:\n     \n    # cd <'httpd.pid location'>/\n    # chown <'service account'> httpd.pid \n    # chmod 644 httpd.pid \n    # cd /usr/sbin \n    # chown <'service account'> service apachectl \n    # chmod 755 service apachectl",
            "__new": "Review the web server documentation and deployed configuration to determine where the process ID is stored and which utilities are used to start/stop the web server.\n\nDetermine where the \"httpd.pid\" file is located by running the following command:\n\nfind / -name \"httpd.pid\"\n\nRun the following commands:\n \n# cd <'httpd.pid location'>/\n# chown <'service account'> httpd.pid \n# chmod 644 httpd.pid \n# cd /usr/sbin \n# chown <'service account'> service apachectl \n# chmod 755 service apachectl"
          }
        }
      },
      "SV-214268": {
        "describe__deleted": "  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('Session') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Session.nil?\n    apache_conf(config_path).Session.each do |value|\n      describe 'Session value should be set to on' do\n        subject { value }\n        it { should cmp 'on' }\n      end\n    end\n  end",
        "tags": {
          "check_id__added": "C-15482r881459_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92741",
            "SV-102829"
          ],
          "gid": {
            "__old": "V-92741",
            "__new": "V-214268"
          },
          "rid": {
            "__old": "SV-102829r1_rule",
            "__new": "SV-214268r881461_rule"
          },
          "fix_id": {
            "__old": "F-98985r1_fix",
            "__new": "F-15480r881460_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92741",
          "__new": "SV-214268"
        },
        "title": {
          "__old": "Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.",
          "__new": "Cookies exchanged between the Apache web server and the client, such as session cookies, must have cookie properties set to prohibit client-side scripts from reading the cookie data."
        },
        "desc": {
          "__old": "A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.",
          "__new": "A cookie can be read by client-side scripts easily if cookie properties are not set properly. By allowing cookies to be read by the client-side scripts, information such as session identifiers could be compromised and used by an attacker who intercepts the cookie. Setting cookie properties (i.e., HttpOnly property) to disallow client-side scripts from reading cookies better protects the information inside the cookie.\n\n"
        },
        "descs": {
          "default__deleted": "A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.",
          "rationale__deleted": "",
          "check": {
            "__old": "In a command line, run \"httpd -M | grep -i session_cookie_module\".\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"Session\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Session\"\n\n    If the \"Session\" and \"SessionCookieName\" directives are not present,\nthis is a finding.\n\n    If \"Session\" is not set to \"on\" and \"SessionCookieName\" does not\ncontain \"httpOnly\" and \"secure\", this is a finding.",
            "__new": "Verify the session cookie module is loaded\n\n# httpd -M | grep -i session_cookie_module\nOutput should look similar to: session_cookie_module (shared)\n\nDetermine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nNote: The apachectl front end is the preferred method for locating the Apache httpd file. For some Linux distributions, \"apache2ctl -V\" or  \"httpd -V\" can also be used. \n\nSearch for the directive \"Session\" in the \"httpd.conf\" file:\n\n# cat httpd.conf  | grep -i \"Session\"\nOutput should be similar to: \nSession on\nSessionCookieName httpOnly Secure\nSessionCryptoCipher aes256\nSessionMaxAge 600\n\nNote: SSL directives can also be located in /etc/httpd/conf.d/ssl.conf.\n\nIf the \"Session\" and \"SessionCookieName\" directives are not present, this is a finding.\n\nIf \"Session\" is not set to \"on\" and \"SessionCookieName\" does not contain \"httpOnly\" and \"secure\", this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set \"Session\" to \"on\".\n\n    Ensure the \"SessionCookieName\" directive includes \"httpOnly\" and\n\"secure\".",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" file:\n\n# apachectl -V | egrep -i 'httpd_root|server_config_file'\n-D HTTPD_ROOT=\"/etc/httpd\"\n-D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n \nNOTE: SSL directives may also be located in /etc/httpd/conf.d/ssl.conf.\n\nSet \"Session\" to \"on\".\n\nEnsure the \"SessionCookieName\" directive includes \"httpOnly\" and \"secure\"."
          }
        }
      },
      "SV-214269": {
        "describe__deleted": "  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('SSLCACertificateFile') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCACertificateFile.nil?\n    ca_path = File.dirname(apache_conf(config_path).SSLCACertificateFile[0])\n    ca_bundle = File.join(ca_path, 'ca-bundle.crt')\n    describe 'Examine CA Bundle' do\n      skip \"Check #{ca_bundle} to determine if the trusted CAs are DoD approved\"\n    end\n  end",
        "tags": {
          "check_id__added": "C-15483r881462_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92745",
            "SV-102833"
          ],
          "gid": {
            "__old": "V-92745",
            "__new": "V-214269"
          },
          "rid": {
            "__old": "SV-102833r1_rule",
            "__new": "SV-214269r881463_rule"
          },
          "fix_id": {
            "__old": "F-98989r1_fix",
            "__new": "F-15481r505086_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92745",
          "__new": "SV-214269"
        },
        "title": {
          "__old": "The Apache web server must remove all export ciphers to protect the\nconfidentiality and integrity of transmitted information.",
          "__new": "The Apache web server must remove all export ciphers to protect the confidentiality and integrity of transmitted information."
        },
        "desc": {
          "__old": "During the initial setup of a Transport Layer Security (TLS)\nconnection to the Apache web server, the client sends a list of supported\ncipher suites in order of preference. The Apache web server will reply with the\ncipher suite it will use for communication from the client list. If an attacker\ncan intercept the submission of cipher suites to the Apache web server and\nplace, as the preferred cipher suite, a weak export suite, the encryption used\nfor the session becomes easy for the attacker to break, often within minutes to\nhours.",
          "__new": "During the initial setup of a Transport Layer Security (TLS) connection to the Apache web server, the client sends a list of supported cipher suites in order of preference. The Apache web server will reply with the cipher suite it will use for communication from the client list. If an attacker can intercept the submission of cipher suites to the Apache web server and place, as the preferred cipher suite, a weak export suite, the encryption used for the session becomes easy for the attacker to break, often within minutes to hours.\n\nConfiguring the Apache server with only strong ciphersuites, denying or disabling weak ciphersuites, will prevent this vulnerability."
        },
        "descs": {
          "default__deleted": "During the initial setup of a Transport Layer Security (TLS)\nconnection to the Apache web server, the client sends a list of supported\ncipher suites in order of preference. The Apache web server will reply with the\ncipher suite it will use for communication from the client list. If an attacker\ncan intercept the submission of cipher suites to the Apache web server and\nplace, as the preferred cipher suite, a weak export suite, the encryption used\nfor the session becomes easy for the attacker to break, often within minutes to\nhours.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"SSLCACertificateFile\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLCACertificateFile\"\n\n    Review the path of the \"SSLCACertificateFile\" directive.\n\n    Review the contents of <'path of cert'>\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.",
            "__new": "Determine the location of the \"HTTPD_ROOT\" directory and the \"httpd.conf\" and \"ssl.conf\" files:\n\nSearch the httpd.conf and ssl.conf file for the following uncommented directive: SSLCipherSuite\n\n# cat httpd.conf  | grep -i SSLCipherSuite\nOutput: None\n\n# cat /etc/httpd/conf.d/ssl.conf | grep -i SSLCipherSuite\nOutput: SSLCipherSuite HIGH:3DES:!NULL:!MD5:!SEED:!IDEA:!EXPORT\n\nFor all enabled SSLCipherSuite directives, ensure the cipher specification string contains the kill cipher from list option for all export cipher suites, i.e., !EXPORT, which may be abbreviated !EXP as in the following example:\n\nExample: SSLCipherSuite=\"HIGH:MEDIUM:!MD5!EXP:!NULL:!LOW:!ADH\n\nIf the SSLCipherSuite directive does not contain !EXPORT or !EXP or there are no enabled SSLCipherSuite directives, this is a finding."
          },
          "fix": {
            "__old": "Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLProtocol\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart",
            "__new": "Update the cipher specification string for all enabled SSLCipherSuite directives to include !EXPORT."
          }
        }
      },
      "SV-214270": {
        "describe__deleted": "  httpd_version = command('httpd -v').stdout.scan(%r{Server version: Apache/(\\S+)\\s\\(\\w+\\)}).flatten\n\n  describe 'Apache Web Server installed must be updated' do\n    subject { httpd_version }\n    it { should cmp >= input('apache_version') }\n  end",
        "tags": {
          "check_id__added": "C-15484r854710_chk",
          "documentable__added": false,
          "legacy__added": [
            "SV-102837",
            "V-92749"
          ],
          "gid": {
            "__old": "V-92749",
            "__new": "V-214270"
          },
          "rid": {
            "__old": "SV-102837r1_rule",
            "__new": "SV-214270r879827_rule"
          },
          "fix_id": {
            "__old": "F-98993r1_fix",
            "__new": "F-15482r277071_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92749",
          "__new": "SV-214270"
        },
        "title": {
          "__old": "The Apache web server must install security-relevant software updates\nwithin the configured time period directed by an authoritative source (e.g.,\nIAVM, CTOs, DTMs, and STIGs).",
          "__new": "The Apache web server must install security-relevant software updates within the configured time period directed by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs)."
        },
        "desc": {
          "__old": "Security flaws with software applications are discovered daily.\nVendors are constantly updating and patching their products to address newly\ndiscovered security vulnerabilities. Organizations (including any contractor to\nthe organization) are required to promptly install security-relevant software\nupdates (e.g., patches, service packs, and hot fixes). Flaws discovered during\nsecurity assessments, continuous monitoring, incident response activities, or\ninformation system error handling must also be addressed expeditiously.\n\n    The Apache web server will be configured to check for and install\nsecurity-relevant software updates from an authoritative source within an\nidentified time period from the availability of the update. By default, this\ntime period will be every 24 hours.",
          "__new": "Security flaws with software applications are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.\n\nThe Apache web server will be configured to check for and install security-relevant software updates from an authoritative source within an identified time period from the availability of the update. By default, this time period will be every 24 hours."
        },
        "descs": {
          "default__deleted": "Security flaws with software applications are discovered daily.\nVendors are constantly updating and patching their products to address newly\ndiscovered security vulnerabilities. Organizations (including any contractor to\nthe organization) are required to promptly install security-relevant software\nupdates (e.g., patches, service packs, and hot fixes). Flaws discovered during\nsecurity assessments, continuous monitoring, incident response activities, or\ninformation system error handling must also be addressed expeditiously.\n\n    The Apache web server will be configured to check for and install\nsecurity-relevant software updates from an authoritative source within an\nidentified time period from the availability of the update. By default, this\ntime period will be every 24 hours.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the most recent patch level of the Apache Web Server 2.4\nsoftware, as posted on the Apache HTTP Server Project website.\n\n    In a command line, type \"httpd -v\".\n\n    If the version is more than one version behind the most recent patch level,\nthis is a finding.",
            "__new": "Determine the most recent patch level of the Apache Web Server 2.4 software, as posted on the Apache HTTP Server Project website. If the Apache installation is a proprietary installation supporting an application and is supported by a vendor, determine the most recent patch level of the vendor’s installation.\n\nIn a command line, type \"httpd -v\".\n\nIf the version is more than one version behind the most recent patch level, this is a finding."
          },
          "fix": {
            "__old": "Install the current version of the web server software and\nmaintain appropriate service packs and patches.",
            "__new": "Install the current version of the web server software and maintain appropriate service packs and patches."
          }
        }
      },
      "SV-214271": {
        "describe__deleted": "  describe 'The account used to run the Apache web server must not have a valid login shell and password defined.' do\n    skip 'Determine the account that is running the httpd process. If this account has a valid login shell and a password defined, this is a finding.'\n  end",
        "tags": {
          "check_id__added": "C-15485r277073_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92751",
            "SV-102839"
          ],
          "gid": {
            "__old": "V-92751",
            "__new": "V-214271"
          },
          "rid": {
            "__old": "SV-102839r1_rule",
            "__new": "SV-214271r879887_rule"
          },
          "fix_id": {
            "__old": "F-98995r1_fix",
            "__new": "F-15483r277074_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92751",
          "__new": "SV-214271"
        },
        "title": {
          "__old": "The account used to run the Apache web server must not have a valid\nlogin shell and password defined.",
          "__new": "The account used to run the Apache web server must not have a valid login shell and password defined."
        },
        "desc": {
          "__old": "During installation of the Apache web server software, accounts are\ncreated for the Apache web server to operate properly. The accounts installed\ncan have either no password installed or a default password, which will be\nknown and documented by the vendor and the user community.\n\n    The first things an attacker will try when presented with a logon screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the logon even easier. Once\nthe Apache web server is installed, the passwords for any created accounts\nshould be changed and documented. The new passwords must meet the requirements\nfor all passwords, i.e., uppercase/lowercase characters, numbers, special\ncharacters, time until change, reuse policy, etc.\n\n    Service accounts or system accounts that have no logon capability do not\nneed to have passwords set or changed.",
          "__new": "During installation of the Apache web server software, accounts are created for the Apache web server to operate properly. The accounts installed can have either no password installed or a default password, which will be known and documented by the vendor and the user community.\n\nThe first things an attacker will try when presented with a logon screen are the default user identifiers with default passwords. Installed applications may also install accounts with no password, making the logon even easier. Once the Apache web server is installed, the passwords for any created accounts should be changed and documented. The new passwords must meet the requirements for all passwords, i.e., uppercase/lowercase characters, numbers, special characters, time until change, reuse policy, etc. \n\nService accounts or system accounts that have no logon capability do not need to have passwords set or changed."
        },
        "descs": {
          "default__deleted": "During installation of the Apache web server software, accounts are\ncreated for the Apache web server to operate properly. The accounts installed\ncan have either no password installed or a default password, which will be\nknown and documented by the vendor and the user community.\n\n    The first things an attacker will try when presented with a logon screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the logon even easier. Once\nthe Apache web server is installed, the passwords for any created accounts\nshould be changed and documented. The new passwords must meet the requirements\nfor all passwords, i.e., uppercase/lowercase characters, numbers, special\ncharacters, time until change, reuse policy, etc.\n\n    Service accounts or system accounts that have no logon capability do not\nneed to have passwords set or changed.",
          "rationale__deleted": "",
          "check": {
            "__old": "Identify the account that is running the \"httpd\" process:\n    # ps -ef | grep -i httpd | grep -v grep\n\n    apache   29613   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n    apache   29614   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n\n    Check to see if the account has a valid login shell:\n\n    # cut -d: -f1,7 /etc/passwd | grep -i <service_account>\n    apache:/sbin/nologin\n\n    If the service account has a valid login shell, verify that no password is\nconfigured for the account:\n\n    # cut -d: -f1,2 /etc/shadow | grep -i <service_account>\n    apache:!!\n\n    If the account has a valid login shell and a password defined, this is a\nfinding.",
            "__new": "Identify the account that is running the \"httpd\" process:\n# ps -ef | grep -i httpd | grep -v grep\n\napache   29613   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\napache   29614   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n\nCheck to see if the account has a valid login shell:\n\n# cut -d: -f1,7 /etc/passwd | grep -i <service_account>\napache:/sbin/nologin\n\nIf the service account has a valid login shell, verify that no password is configured for the account:\n\n# cut -d: -f1,2 /etc/shadow | grep -i <service_account>\napache:!!\n\nIf the account has a valid login shell and a password defined, this is a finding."
          },
          "fix": {
            "__old": "Update the /etc/passwd file to assign the account used to run the \"httpd\"\nprocess an invalid login shell such as \"/sbin/nologin\".\n\n    Lock the account used to run the \"httpd\" process:\n\n    # passwd -l <account>\n    Locking password for user <account>\n    passwd: Success",
            "__new": "Update the /etc/passwd file to assign the account used to run the \"httpd\" process an invalid login shell such as \"/sbin/nologin\".\n\nLock the account used to run the \"httpd\" process:\n\n# passwd -l <account>\nLocking password for user <account>\npasswd: Success"
          }
        }
      },
      "SV-214272": {
        "describe__deleted": "  describe 'Ensure the website enforces the use of IANA well-known ports for HTTP and HTTPS.' do\n    skip \"Review the website to determine if \\\"HTTP\\\" and \\\"HTTPS\\\" are used in accordance\n      with well-known ports (e.g., 80 and 443) or those ports and services as registered and approved\n      for use by the DoD Ports, Protocols, and Services Management (PPSM).\n      Verify that any variation in PPS is documented, registered, and approved by the PPSM.\n      If well-known ports and services are not approved for used by PPSM, this is a finding.\"\n  end",
        "tags": {
          "check_id__added": "C-15486r277076_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92753",
            "SV-102841"
          ],
          "gid": {
            "__old": "V-92753",
            "__new": "V-214272"
          },
          "rid": {
            "__old": "SV-102841r1_rule",
            "__new": "SV-214272r879887_rule"
          },
          "fix_id": {
            "__old": "F-98997r1_fix",
            "__new": "F-15484r277077_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92753",
          "__new": "SV-214272"
        },
        "title": {
          "__old": "The Apache web server must be configured in accordance with the\nsecurity configuration settings based on DoD security configuration or\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs.",
          "__new": "The Apache web server must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs."
        },
        "desc": {
          "__old": "Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including those required to satisfy other security control\nrequirements.",
          "__new": "Configuring the Apache web server to implement organization-wide security implementation guides and security checklists guarantees compliance with federal standards and establishes a common security baseline across the DoD that reflects the most restrictive security posture consistent with operational requirements.\n\nConfiguration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are parameters impacting the security state of the Apache web server, including those required to satisfy other security control requirements."
        },
        "descs": {
          "default__deleted": "Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including those required to satisfy other security control\nrequirements.",
          "rationale__deleted": "",
          "check": {
            "__old": "Review the website to determine if \"HTTP\" and \"HTTPS\" are used in\naccordance with well-known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD Ports, Protocols, and Services\nManagement (PPSM).\n\n    Verify that any variation in PPS is documented, registered, and approved by\nthe PPSM.\n\n    If well-known ports and services are not approved for used by PPSM, this is\na finding.",
            "__new": "Review the website to determine if \"HTTP\" and \"HTTPS\" are used in accordance with well-known ports (e.g., 80 and 443) or those ports and services as registered and approved for use by the DoD Ports, Protocols, and Services Management (PPSM).\n\nVerify that any variation in PPS is documented, registered, and approved by the PPSM.\n\nIf well-known ports and services are not approved for used by PPSM, this is a finding."
          },
          "fix": {
            "__old": "Ensure the website enforces the use of IANA well-known ports\nfor \"HTTP\" and \"HTTPS\".",
            "__new": "Ensure the website enforces the use of IANA well-known ports for \"HTTP\" and \"HTTPS\"."
          }
        }
      },
      "SV-214273": {
        "describe__deleted": "  httpd_version = command('httpd -v').stdout.scan(%r{Server version: Apache/(\\S+)\\s\\(\\w+\\)}).flatten\n\n  describe 'Apache Web Server installed must be updated' do\n    subject { httpd_version }\n    it { should cmp >= input('apache_version') }\n  end",
        "tags": {
          "check_id__added": "C-15487r277079_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92755",
            "SV-102843"
          ],
          "gid": {
            "__old": "V-92755",
            "__new": "V-214273"
          },
          "rid": {
            "__old": "SV-102843r1_rule",
            "__new": "SV-214273r879887_rule"
          },
          "fix_id": {
            "__old": "F-98999r1_fix",
            "__new": "F-15485r277080_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92755",
          "__new": "SV-214273"
        },
        "desc": {
          "__old": "Many vulnerabilities are associated with older versions of web server\nsoftware. As hot fixes and patches are issued, these solutions are included in\nthe next version of the server software. Maintaining the web server at a\ncurrent version makes the efforts of a malicious user to exploit the web\nservice more difficult.",
          "__new": "Many vulnerabilities are associated with older versions of web server software. As hot fixes and patches are issued, these solutions are included in the next version of the server software. Maintaining the web server at a current version makes the efforts of a malicious user to exploit the web service more difficult."
        },
        "descs": {
          "default__deleted": "Many vulnerabilities are associated with older versions of web server\nsoftware. As hot fixes and patches are issued, these solutions are included in\nthe next version of the server software. Maintaining the web server at a\ncurrent version makes the efforts of a malicious user to exploit the web\nservice more difficult.",
          "rationale__deleted": "",
          "check": {
            "__old": "Determine the version of the Apache software that is running on the system\nby entering the following command:\n\n    httpd -v\n\n    If the version of Apache is not at the following version or higher, this is\na finding:\n\n    Apache 2.4 (February 2012)\n\n    NOTE: In some situations, the Apache software that is being used is\nsupported by another vendor, such as Oracle in the case of the Oracle\nApplication Server or IBM's HTTP Server. The versions of the software in these\ncases may not match the version number noted above. If the site can provide\nvendor documentation showing the version of the web server is supported, this\nwould not be a finding.",
            "__new": "Determine the version of the Apache software that is running on the system by entering the following command:\n\nhttpd -v\n\nIf the version of Apache is not at the following version or higher, this is a finding:\n\nApache 2.4 (February 2012)\n\nNOTE: In some situations, the Apache software that is being used is supported by another vendor, such as Oracle in the case of the Oracle Application Server or IBM's HTTP Server. The versions of the software in these cases may not match the version number noted above. If the site can provide vendor documentation showing the version of the web server is supported, this would not be a finding."
          },
          "fix": {
            "__old": "Install the current version of the web server software and\nmaintain appropriate service packs and patches.",
            "__new": "Install the current version of the web server software and maintain appropriate service packs and patches."
          }
        }
      },
      "SV-214274": {
        "describe__deleted": "  htpasswd_command = command('find / -name htpasswd').stdout.strip\n\n  if !htpasswd_command.empty?\n    htpasswd = file(htpasswd_command)\n\n    describe htpasswd do\n      it { should_not be_more_permissive_than('0550') }\n      its('owner') { should be_in input('server_admins') }\n    end\n\n  else\n    describe htpasswd_command do\n      skip 'Could not find htpwasswd. This check has to be manually reviewed.'\n    end\n  end",
        "tags": {
          "check_id__added": "C-15488r277082_chk",
          "documentable__added": false,
          "legacy__added": [
            "V-92757",
            "SV-102845"
          ],
          "gid": {
            "__old": "V-92757",
            "__new": "V-214274"
          },
          "rid": {
            "__old": "SV-102845r1_rule",
            "__new": "SV-214274r879887_rule"
          },
          "fix_id": {
            "__old": "F-99001r1_fix",
            "__new": "F-15486r277083_fix"
          }
        },
        "refs": [
          [
            "+",
            "DPMS Target Apache Server 2.4 UNIX Server"
          ]
        ],
        "id": {
          "__old": "V-92757",
          "__new": "SV-214274"
        },
        "title": {
          "__old": "The Apache web server htpasswd files (if present) must reflect proper\nownership and permissions.",
          "__new": "The Apache web server htpasswd files (if present) must reflect proper ownership and permissions."
        },
        "desc": {
          "__old": "In addition to OS restrictions, access rights to files and directories\ncan be set on a website using the web server software. That is, in addition to\nallowing or denying all access rights, a rule can be specified that allows or\ndenies partial access rights. For example, users can be given read-only access\nrights to files to view the information but not change the files.\n\n    This check verifies that the htpasswd file is only accessible by System\nAdministrators (SAs) or Web Managers, with the account running the web service\nhaving group permissions of read and execute. \"htpasswd\" is a utility used by\nNetscape and Apache to provide for password access to designated websites.",
          "__new": "In addition to OS restrictions, access rights to files and directories can be set on a website using the web server software. That is, in addition to allowing or denying all access rights, a rule can be specified that allows or denies partial access rights. For example, users can be given read-only access rights to files to view the information but not change the files.\n\nThis check verifies that the htpasswd file is only accessible by System Administrators (SAs) or Web Managers, with the account running the web service having group permissions of read and execute. \"htpasswd\" is a utility used by Netscape and Apache to provide for password access to designated websites."
        },
        "descs": {
          "default__deleted": "In addition to OS restrictions, access rights to files and directories\ncan be set on a website using the web server software. That is, in addition to\nallowing or denying all access rights, a rule can be specified that allows or\ndenies partial access rights. For example, users can be given read-only access\nrights to files to view the information but not change the files.\n\n    This check verifies that the htpasswd file is only accessible by System\nAdministrators (SAs) or Web Managers, with the account running the web service\nhaving group permissions of read and execute. \"htpasswd\" is a utility used by\nNetscape and Apache to provide for password access to designated websites.",
          "rationale__deleted": ""
        }
      }
    }
  }
}