{"name":"Apache_Server_2-4_UNIX_Server","title":"Apache Server 2.4 UNIX Server based upon the Apache_Server_2-4_UNIX_Server Security Technical Implementation Guide","maintainer":"MITRE SAF Team","copyright":"MITRE, 2022","copyright_email":"saf@groups.mitre.org","license":"Apache-2.0","summary":"InSpec testing for baseline compliance with the Apache_Server_2-4_UNIX_Server STIG","version":"2.2.0","inspec_version":">= 4.0","inputs":[{"name":"config_path","options":{"type":"String","value":"/usr/local/apache2/conf/httpd.conf"}},{"name":"proxy_server","options":{"type":"Boolean","value":false}},{"name":"apache_version","options":{"type":"String","value":"2.4"}},{"name":"server_admins","options":{"type":"Array","value":["httpd"]}},{"name":"server_admin_groups","options":{"type":"Array","value":["httpd"]}},{"name":"host_based_firewall_used","options":{"type":"Boolean","value":false}}],"supports":[],"controls":[{"title":"The Apache web server must limit the number of allowed simultaneous\nsession requests.","desc":"Apache web server management includes the ability to control the\nnumber of users and user sessions that utilize an Apache web server. Limiting\nthe number of allowed users and sessions per user is helpful in limiting risks\nrelated to several types of denial-of-service (DOS) attacks.\n\n    Although there is some latitude concerning the settings, they should follow\nDoD-recommended values and be configurable to allow for future DoD direction.\nWhile the DoD will specify recommended values, the values can be adjusted to\naccommodate the operational requirements of a given system.","descriptions":{"default":"Apache web server management includes the ability to control the\nnumber of users and user sessions that utilize an Apache web server. Limiting\nthe number of allowed users and sessions per user is helpful in limiting risks\nrelated to several types of denial-of-service (DOS) attacks.\n\n    Although there is some latitude concerning the settings, they should follow\nDoD-recommended values and be configurable to allow for future DoD direction.\nWhile the DoD will specify recommended values, the values can be adjusted to\naccommodate the operational requirements of a given system.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directives \"KeepAlive\" and \"MaxKeepAliveRequests\" in the\n\"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"keepalive\"\n\n    KeepAlive On\n    MaxKeepAliveRequests 100\n\n    If the value of \"KeepAlive\" is set to \"off\" or does not exist, this is\na finding.\n\n    If the value of \"MaxKeepAliveRequests\" is set to a value less than\n\"100\" or does not exist, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set the \"KeepAlive\" directive to a value of \"on\"; add the directive if\nit does not exist.\n\n    Set the \"MaxKeepAliveRequests\" directive to a value of \"100\" or\ngreater; add the directive if it does not exist.\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000001-WSR-000001","gid":"V-92597","rid":"SV-102685r1_rule","stig_id":"AS24-U1-000010","fix_id":"F-98839r1_fix","cci":["CCI-000054"],"nist":["AC-10"]},"code":"control 'V-92597' do\n  title \"The Apache web server must limit the number of allowed simultaneous\nsession requests.\"\n  desc  \"Apache web server management includes the ability to control the\nnumber of users and user sessions that utilize an Apache web server. Limiting\nthe number of allowed users and sessions per user is helpful in limiting risks\nrelated to several types of denial-of-service (DOS) attacks.\n\n    Although there is some latitude concerning the settings, they should follow\nDoD-recommended values and be configurable to allow for future DoD direction.\nWhile the DoD will specify recommended values, the values can be adjusted to\naccommodate the operational requirements of a given system.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directives \\\"KeepAlive\\\" and \\\"MaxKeepAliveRequests\\\" in the\n\\\"httpd.conf\\\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"keepalive\\\"\n\n    KeepAlive On\n    MaxKeepAliveRequests 100\n\n    If the value of \\\"KeepAlive\\\" is set to \\\"off\\\" or does not exist, this is\na finding.\n\n    If the value of \\\"MaxKeepAliveRequests\\\" is set to a value less than\n\\\"100\\\" or does not exist, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set the \\\"KeepAlive\\\" directive to a value of \\\"on\\\"; add the directive if\nit does not exist.\n\n    Set the \\\"MaxKeepAliveRequests\\\" directive to a value of \\\"100\\\" or\ngreater; add the directive if it does not exist.\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000001-WSR-000001'\n  tag gid: 'V-92597'\n  tag rid: 'SV-102685r1_rule'\n  tag stig_id: 'AS24-U1-000010'\n  tag fix_id: 'F-98839r1_fix'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('KeepAlive') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).KeepAlive.nil?\n    apache_conf(config_path).KeepAlive.each do |value|\n      describe 'KeepAlive value should be set to On' do\n        subject { value }\n        it { should cmp 'On' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('MaxKeepAliveRequests') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).MaxKeepAliveRequests.nil?\n    apache_conf(config_path).MaxKeepAliveRequests.each do |value|\n      describe 'If the value of \"MaxKeepAliveRequests\" is set to a value less than \"100\" or does not exist, this is a finding.' do\n        subject { value }\n        it { should cmp < '100' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92597.rb","line":1},"id":"V-92597"},{"title":"The Apache web server must perform server-side session management.","desc":"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.","descriptions":{"default":"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"session_module\" and \"usertrack_module\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"session_module\"\n    # cat /<path_to_file>/httpd.conf | grep -i \"usertrack_module\"\n    If \"session_module\" and \"usertrack_module\" are not enabled or do not\nexist, this is a finding.\n\n    Alternatively, issue the following command:\n    httpd -M |grep -E 'session_module|usertrack'\n    If results do not return both usertrack_module (shared) and session_module\n(shared), this is a finding.","fix":"If the modules are not installed, install any missing packages.\n\nAdd the following lines to the \"httpd.conf\" file:\n\nLoadModule usertrack_module modules/mod_usertrack.so\n\nLoadModule session_module modules/mod_session.so\n\nAdditional documentation can be found at:\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_session.html\n\nRestart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000001-WSR-000002","gid":"V-92599","rid":"SV-102687r2_rule","stig_id":"AS24-U1-000020","fix_id":"F-98841r1_fix","cci":["CCI-000054"],"nist":["AC-10"]},"code":"control 'V-92599' do\n  title 'The Apache web server must perform server-side session management.'\n  desc  \"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"session_module\\\" and \\\"usertrack_module\\\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"session_module\\\"\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"usertrack_module\\\"\n    If \\\"session_module\\\" and \\\"usertrack_module\\\" are not enabled or do not\nexist, this is a finding.\n\n    Alternatively, issue the following command:\n    httpd -M |grep -E 'session_module|usertrack'\n    If results do not return both usertrack_module (shared) and session_module\n(shared), this is a finding.\n\n  \"\n  desc 'fix', \"\n    If the modules are not installed, install any missing packages.\n\n    Add the following lines to the \\\"httpd.conf\\\" file:\n\n    LoadModule usertrack_module modules/mod_usertrack.so\n\n    LoadModule session_module modules/mod_session.so\n\n    Additional documentation can be found at:\n\n    https://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\n    https://httpd.apache.org/docs/2.4/mod/mod_session.html\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000001-WSR-000002'\n  tag gid: 'V-92599'\n  tag rid: 'SV-102687r2_rule'\n  tag stig_id: 'AS24-U1-000020'\n  tag fix_id: 'F-98841r1_fix'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('LoadModule') { should include 'session_module modules/mod_session.so' }\n    its('LoadModule') { should include 'usertrack_module modules/mod_usertrack.so' }\n  end\nend\n","source_location":{"ref":"./controls/V-92599.rb","line":1},"id":"V-92599"},{"title":"The Apache web server must use cryptography to protect the integrity\nof remote sessions.","desc":"Data exchanged between the user and the Apache web server can range\nfrom static display data to credentials used to log on to the hosted\napplication. Even when data appears to be static, the non-displayed logic in a\nweb page may expose business logic or trusted system relationships. The\nintegrity of all the data being exchanged between the user and the Apache web\nserver must always be trusted. To protect the integrity and trust, encryption\nmethods should be used to protect the complete communication session.","descriptions":{"default":"Data exchanged between the user and the Apache web server can range\nfrom static display data to credentials used to log on to the hosted\napplication. Even when data appears to be static, the non-displayed logic in a\nweb page may expose business logic or trusted system relationships. The\nintegrity of all the data being exchanged between the user and the Apache web\nserver must always be trusted. To protect the integrity and trust, encryption\nmethods should be used to protect the complete communication session.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not found, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"SSLCACertificateFile\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLCACertificateFile\"\n\n    Review the path of the \"SSLCACertificateFile\" directive.\n\n    Review the contents of <'path of SSLCACertificateFile'>\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLProtocol\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000014-WSR-000006","satisfies":["SRG-APP-000014-WSR-000006","SRG-APP-000015-WSR-000014","SRG-APP-000033-WSR-000169","SRG-APP-000172-WSR-000104","SRG-APP-000179-WSR-000110","SRG-APP-000179-WSR-000111","SRG-APP-000224-WSR-000139","SRG-APP-000427-WSR-000186","SRG-APP-000439-WSR-000151","SRG-APP-000439-WSR-000152","SRG-APP-000439-WSR-000153","SRG-APP-000442-WSR-000182"],"gid":"V-92601","rid":"SV-102689r1_rule","stig_id":"AS24-U1-000030","fix_id":"F-98843r1_fix","cci":["CCI-000068","CCI-000197","CCI-000213","CCI-000803","CCI-001188","CCI-001453","CCI-002418","CCI-002422","CCI-002470"],"nist":["AC-17 (2)","IA-5 (1) (c)","AC-3","IA-7","SC-23 (3)","AC-17\n(2)","SC-8","SC-8 (2)","SC-23 (5)"]},"code":"control 'V-92601' do\n  title \"The Apache web server must use cryptography to protect the integrity\nof remote sessions.\"\n  desc  \"Data exchanged between the user and the Apache web server can range\nfrom static display data to credentials used to log on to the hosted\napplication. Even when data appears to be static, the non-displayed logic in a\nweb page may expose business logic or trusted system relationships. The\nintegrity of all the data being exchanged between the user and the Apache web\nserver must always be trusted. To protect the integrity and trust, encryption\nmethods should be used to protect the complete communication session.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not found, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"SSLCACertificateFile\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SSLCACertificateFile\\\"\n\n    Review the path of the \\\"SSLCACertificateFile\\\" directive.\n\n    Review the contents of <'path of SSLCACertificateFile'>\\\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Ensure the \\\"SSLProtocol\\\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000014-WSR-000006'\n  tag satisfies: %w(SRG-APP-000014-WSR-000006 SRG-APP-000015-WSR-000014\nSRG-APP-000033-WSR-000169 SRG-APP-000172-WSR-000104\nSRG-APP-000179-WSR-000110 SRG-APP-000179-WSR-000111\nSRG-APP-000224-WSR-000139 SRG-APP-000427-WSR-000186\nSRG-APP-000439-WSR-000151 SRG-APP-000439-WSR-000152\nSRG-APP-000439-WSR-000153 SRG-APP-000442-WSR-000182)\n  tag gid: 'V-92601'\n  tag rid: 'SV-102689r1_rule'\n  tag stig_id: 'AS24-U1-000030'\n  tag fix_id: 'F-98843r1_fix'\n  tag cci: %w(CCI-000068 CCI-000197 CCI-000213 CCI-000803\nCCI-001188 CCI-001453 CCI-002418 CCI-002422 CCI-002470)\n  tag nist: ['AC-17 (2)', 'IA-5 (1) (c)', 'AC-3', 'IA-7', 'SC-23 (3)', \"AC-17\n(2)\", 'SC-8', 'SC-8 (2)', 'SC-23 (5)']\n\n  config_path = input('config_path')\n\n  ssl_module = command('httpd -M | grep ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLCACertificateFile') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCACertificateFile.nil?\n    ca_path = File.dirname(apache_conf(config_path).SSLCACertificateFile[0])\n    ca_bundle = File.join(ca_path, 'ca-bundle.crt')\n    describe 'Examine CA Bundle' do\n      skip \"Check #{ca_bundle} to determine if the trusted CAs are DoD approved\"\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92601.rb","line":1},"id":"V-92601"},{"title":"The Apache web server must have system logging enabled.","desc":"The server error logs are invaluable because they can also be used to\nidentify potential problems and enable proactive remediation. Log data can\nreveal anomalous behavior such as “not found” or “unauthorized” errors that may\nbe an evidence of attack attempts. Failure to enable error logging can\nsignificantly reduce the ability of Web Administrators to detect or remediate\nproblems. The CustomLog directive specifies the log file, syslog facility, or\npiped logging utility.","descriptions":{"default":"The server error logs are invaluable because they can also be used to\nidentify potential problems and enable proactive remediation. Log data can\nreveal anomalous behavior such as “not found” or “unauthorized” errors that may\nbe an evidence of attack attempts. Failure to enable error logging can\nsignificantly reduce the ability of Web Administrators to detect or remediate\nproblems. The CustomLog directive specifies the log file, syslog facility, or\npiped logging utility.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"CustomLog\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"CustomLog\"\n\n    If the \"CustomLog\" directive is missing, this is a finding:\n\n    An example CustomLog directive would be as follows:\n    CustomLog \"logs/access_log\" common or CustomLog “log/access_log” combined\n    (May also be \"Logs/access_log\")","fix":"Edit the \"httpd.conf\" file and enter the name, path and level\nfor the CustomLog."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000516-WSR-000174","gid":"V-92607","rid":"SV-102695r3_rule","stig_id":"AS24-U1-000065","fix_id":"F-98849r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92607' do\n  title 'The Apache web server must have system logging enabled.'\n  desc  \"The server error logs are invaluable because they can also be used to\nidentify potential problems and enable proactive remediation. Log data can\nreveal anomalous behavior such as “not found” or “unauthorized” errors that may\nbe an evidence of attack attempts. Failure to enable error logging can\nsignificantly reduce the ability of Web Administrators to detect or remediate\nproblems. The CustomLog directive specifies the log file, syslog facility, or\npiped logging utility.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"CustomLog\\\" in the \\\"httpd.conf\\\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"CustomLog\\\"\n\n    If the \\\"CustomLog\\\" directive is missing, this is a finding:\n\n    An example CustomLog directive would be as follows:\n    CustomLog \\\"logs/access_log\\\" common or CustomLog “log/access_log” combined\n    (May also be \\\"Logs/access_log\\\")\n\n  \"\n  desc  'fix', \"Edit the \\\"httpd.conf\\\" file and enter the name, path and level\nfor the CustomLog.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000516-WSR-000174'\n  tag gid: 'V-92607'\n  tag rid: 'SV-102695r3_rule'\n  tag stig_id: 'AS24-U1-000065'\n  tag fix_id: 'F-98849r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('CustomLog') { should_not be_empty }\n  end\nend\n","source_location":{"ref":"./controls/V-92607.rb","line":1},"id":"V-92607"},{"title":"The Apache web server must generate, at a minimum, log records for\nsystem startup and shutdown, system access, and system authentication events.","desc":"Log records can be generated from various components within the Apache\nweb server (e.g., httpd, plug-ins to external backends, etc.). From a web\nserver perspective, certain specific Apache web server functionalities may be\nlogged as well. The Apache web server must allow the definition of what events\nare to be logged. As conditions change, the number and types of events to be\nlogged may change, and the Apache web server must be able to facilitate these\nchanges.\n\n    The minimum list of logged events should be those pertaining to system\nstartup and shutdown, system access, and system authentication events. If these\nevents are not logged at a minimum, any type of forensic investigation would be\nmissing pertinent information needed to replay what occurred.","descriptions":{"default":"Log records can be generated from various components within the Apache\nweb server (e.g., httpd, plug-ins to external backends, etc.). From a web\nserver perspective, certain specific Apache web server functionalities may be\nlogged as well. The Apache web server must allow the definition of what events\nare to be logged. As conditions change, the number and types of events to be\nlogged may change, and the Apache web server must be able to facilitate these\nchanges.\n\n    The minimum list of logged events should be those pertaining to system\nstartup and shutdown, system access, and system authentication events. If these\nevents are not logged at a minimum, any type of forensic investigation would be\nmissing pertinent information needed to replay what occurred.","rationale":"","check":"In a command line, run \"httpd -M | grep -i log_config_module\".\n\n    If the \"log_config_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"LogFormat\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\n    If the \"LogFormat\" directive is missing, this is a finding:\n\n    An example is:\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Uncomment the \"log_config_module\" module line.\n\n    Configure the \"LogFormat\" in the \"httpd.conf\" file to look like the\nfollowing:\n\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common\n\n    Restart Apache: apachectl restart\n\n    NOTE: Your log format may be using different variables based on your\nenvironment, however  it should be verified to be producing the same end result\nof logged elements."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000089-WSR-000047","satisfies":["SRG-APP-000089-WSR-000047","SRG-APP-000092-WSR-000055","SRG-APP-000095-WSR-000056","SRG-APP-000096-WSR-000057","SRG-APP-000097-WSR-000058","SRG-APP-000098-WSR-000059","SRG-APP-000099-WSR-000061","SRG-APP-000100-WSR-000064"],"gid":"V-92609","rid":"SV-102697r2_rule","stig_id":"AS24-U1-000070","fix_id":"F-98851r1_fix","cci":["CCI-000130","CCI-000131","CCI-000132","CCI-000133","CCI-000134","CCI-000169","CCI-001464","CCI-001487"],"nist":["AU-3","AU-3","AU-3","AU-3","AU-3","AU-12 a","AU-14 (1)","AU-3"]},"code":"control 'V-92609' do\n  title \"The Apache web server must generate, at a minimum, log records for\nsystem startup and shutdown, system access, and system authentication events.\"\n  desc  \"Log records can be generated from various components within the Apache\nweb server (e.g., httpd, plug-ins to external backends, etc.). From a web\nserver perspective, certain specific Apache web server functionalities may be\nlogged as well. The Apache web server must allow the definition of what events\nare to be logged. As conditions change, the number and types of events to be\nlogged may change, and the Apache web server must be able to facilitate these\nchanges.\n\n    The minimum list of logged events should be those pertaining to system\nstartup and shutdown, system access, and system authentication events. If these\nevents are not logged at a minimum, any type of forensic investigation would be\nmissing pertinent information needed to replay what occurred.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i log_config_module\\\".\n\n    If the \\\"log_config_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"LogFormat\\\" in the \\\"httpd.conf\\\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"LogFormat\\\"\n\n    If the \\\"LogFormat\\\" directive is missing, this is a finding:\n\n    An example is:\n    LogFormat \\\"%a %A %h %H %l %m %s %t %u %U \\\\\\\"%{Referer}i\\\\\\\" \\\" common\n\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Uncomment the \\\"log_config_module\\\" module line.\n\n    Configure the \\\"LogFormat\\\" in the \\\"httpd.conf\\\" file to look like the\nfollowing:\n\n    LogFormat \\\"%a %A %h %H %l %m %s %t %u %U \\\\\\\"%{Referer}i\\\\\\\" \\\" common\n\n    Restart Apache: apachectl restart\n\n    NOTE: Your log format may be using different variables based on your\nenvironment, however  it should be verified to be producing the same end result\nof logged elements.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000089-WSR-000047'\n  tag satisfies: %w(SRG-APP-000089-WSR-000047 SRG-APP-000092-WSR-000055\nSRG-APP-000095-WSR-000056 SRG-APP-000096-WSR-000057\nSRG-APP-000097-WSR-000058 SRG-APP-000098-WSR-000059\nSRG-APP-000099-WSR-000061 SRG-APP-000100-WSR-000064)\n  tag gid: 'V-92609'\n  tag rid: 'SV-102697r2_rule'\n  tag stig_id: 'AS24-U1-000070'\n  tag fix_id: 'F-98851r1_fix'\n  tag cci: %w(CCI-000130 CCI-000131 CCI-000132 CCI-000133\n  CCI-000134 CCI-000169 CCI-001464 CCI-001487)\n  tag nist: ['AU-3', 'AU-3', 'AU-3', 'AU-3', 'AU-3', 'AU-12 a', 'AU-14 (1)',\n  'AU-3']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('LogFormat') { should_not be_empty }\n  end\n\n  describe 'Module log_config_module should be installed' do\n    subject { command('httpd -M | grep -i log_config_module').stdout.strip }\n    it { should_not cmp '' }\n  end\nend\n","source_location":{"ref":"./controls/V-92609.rb","line":1},"id":"V-92609"},{"title":"An Apache web server, behind a load balancer or proxy server, must\nproduce log records containing the client IP information as the source and\ndestination and not the load balancer or proxy IP information with each event.","desc":"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct source of the events (e.g., source IP) is\nimportant during forensic analysis. Correctly determining the source of events\nwill add information to the overall reconstruction of the logable event. By\ndetermining the source of the event correctly, analysis of the enterprise can\nbe undertaken to determine if events tied to the source occurred in other areas\nwithin the enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\ncorrectly, will record the load balancer or proxy server as the source of every\nlogable event. When looking at the information forensically, this information\nis not helpful in the investigation of events. The web server must record with\neach event the client source of the event.","descriptions":{"default":"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct source of the events (e.g., source IP) is\nimportant during forensic analysis. Correctly determining the source of events\nwill add information to the overall reconstruction of the logable event. By\ndetermining the source of the event correctly, analysis of the enterprise can\nbe undertaken to determine if events tied to the source occurred in other areas\nwithin the enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\ncorrectly, will record the load balancer or proxy server as the source of every\nlogable event. When looking at the information forensically, this information\nis not helpful in the investigation of events. The web server must record with\neach event the client source of the event.","rationale":"","check":"Interview the System Administrator to review the configuration of the\nApache web server architecture and determine if inbound web traffic is passed\nthrough a proxy.\n\n    If the Apache web server is receiving inbound web traffic through a proxy,\nthe audit logs must be reviewed to determine if correct source information is\nbeing passed through by the proxy server.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the location of the log files.\n\n    When the log file is displayed, review the source IP information in the log\nentries and verify the entries do not reflect the IP address of the proxy\nserver.\n    If the log entries in the log file(s) reflect the IP address of the client\nin addition to the proxy address, this is not a finding.\n    If the log entries in the log file(s) reflect the IP address of the proxy\nserver as the source, this is a finding.\n\n    If logs containing source/destination IPs can be obtained at the load\nbalancer/proxy server, this is not a finding.","fix":"Access the proxy server through which inbound web traffic is passed and\nconfigure settings to pass web traffic to the Apache web server transparently.\n\n    Refer to https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html for\nadditional information on logging options based on your proxy/load balancing\nsetup."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000098-WSR-000060","gid":"V-92621","rid":"SV-102709r2_rule","stig_id":"AS24-U1-000130","fix_id":"F-98863r1_fix","cci":["CCI-000133"],"nist":["AU-3"]},"code":"control 'V-92621' do\n  title \"An Apache web server, behind a load balancer or proxy server, must\nproduce log records containing the client IP information as the source and\ndestination and not the load balancer or proxy IP information with each event.\"\n  desc  \"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct source of the events (e.g., source IP) is\nimportant during forensic analysis. Correctly determining the source of events\nwill add information to the overall reconstruction of the logable event. By\ndetermining the source of the event correctly, analysis of the enterprise can\nbe undertaken to determine if events tied to the source occurred in other areas\nwithin the enterprise.\n\n    A web server behind a load balancer or proxy server, when not configured\ncorrectly, will record the load balancer or proxy server as the source of every\nlogable event. When looking at the information forensically, this information\nis not helpful in the investigation of events. The web server must record with\neach event the client source of the event.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the System Administrator to review the configuration of the\nApache web server architecture and determine if inbound web traffic is passed\nthrough a proxy.\n\n    If the Apache web server is receiving inbound web traffic through a proxy,\nthe audit logs must be reviewed to determine if correct source information is\nbeing passed through by the proxy server.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review the location of the log files.\n\n    When the log file is displayed, review the source IP information in the log\nentries and verify the entries do not reflect the IP address of the proxy\nserver.\n    If the log entries in the log file(s) reflect the IP address of the client\nin addition to the proxy address, this is not a finding.\n    If the log entries in the log file(s) reflect the IP address of the proxy\nserver as the source, this is a finding.\n\n    If logs containing source/destination IPs can be obtained at the load\nbalancer/proxy server, this is not a finding.\n\n  \"\n  desc 'fix', \"\n    Access the proxy server through which inbound web traffic is passed and\nconfigure settings to pass web traffic to the Apache web server transparently.\n\n    Refer to https://httpd.apache.org/docs/2.4/mod/mod_remoteip.html for\nadditional information on logging options based on your proxy/load balancing\nsetup.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000098-WSR-000060'\n  tag gid: 'V-92621'\n  tag rid: 'SV-102709r2_rule'\n  tag stig_id: 'AS24-U1-000130'\n  tag fix_id: 'F-98863r1_fix'\n  tag cci: ['CCI-000133']\n  tag nist: ['AU-3']\n\n  describe 'This is a manual check' do\n    skip \"Review Apache web server logging capability. Review the location of the log files.\n    When the log file is displayed, review the source IP information in the log entries\n    and verify the entries do not reflect the IP address of the proxy server. If the log\n    entries in the log file(s) reflect the IP address of the client in addition to the\n    proxy address, this is not a finding. If the log entries in the log file(s) reflect\n    the IP address of the proxy server as the source, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92621.rb","line":1},"id":"V-92621"},{"title":"The Apache web server must use a logging mechanism that is configured\nto alert the Information System Security Officer (ISSO) and System\nAdministrator (SA) in the event of a processing failure.","desc":"Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto SAs in their daily administrative duties on the hosted system or within the\nhosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations must define logging failure events, at which time the application\nor the logging mechanism the application uses will provide a warning to the\nISSO and SA at a minimum.","descriptions":{"default":"Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto SAs in their daily administrative duties on the hosted system or within the\nhosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations must define logging failure events, at which time the application\nor the logging mechanism the application uses will provide a warning to the\nISSO and SA at a minimum.","rationale":"","check":"Work with the SIEM administrator to determine if an alert is configured\nwhen audit data is no longer received as expected.\n\n    If there is no alert configured, this is a finding.","fix":"Work with the SIEM administrator to configure an alert when no\naudit data is received from Apache based on the defined schedule of\nconnections."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000108-WSR-000166","satisfies":["SRG-APP-000108-WSR-000166","SRG-APP-000359-WSR-000065"],"gid":"V-92627","rid":"SV-102715r1_rule","stig_id":"AS24-U1-000160","fix_id":"F-98869r1_fix","cci":["CCI-000139","CCI-001855"],"nist":["AU-5 a","AU-5 (1)"]},"code":"control 'V-92627' do\n  title \"The Apache web server must use a logging mechanism that is configured\nto alert the Information System Security Officer (ISSO) and System\nAdministrator (SA) in the event of a processing failure.\"\n  desc  \"Reviewing log data allows an investigator to recreate the path of an\nattacker and to capture forensic data for later use. Log data is also essential\nto SAs in their daily administrative duties on the hosted system or within the\nhosted applications.\n\n    If the logging system begins to fail, events will not be recorded.\nOrganizations must define logging failure events, at which time the application\nor the logging mechanism the application uses will provide a warning to the\nISSO and SA at a minimum.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Work with the SIEM administrator to determine if an alert is configured\nwhen audit data is no longer received as expected.\n\n    If there is no alert configured, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to configure an alert when no\naudit data is received from Apache based on the defined schedule of\nconnections.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000108-WSR-000166'\n  tag satisfies: %w(SRG-APP-000108-WSR-000166 SRG-APP-000359-WSR-000065)\n  tag gid: 'V-92627'\n  tag rid: 'SV-102715r1_rule'\n  tag stig_id: 'AS24-U1-000160'\n  tag fix_id: 'F-98869r1_fix'\n  tag cci: %w(CCI-000139 CCI-001855)\n  tag nist: ['AU-5 a', 'AU-5 (1)']\n\n  describe 'Review server logging and alert configuration' do\n    skip \"Work with the SIEM administrator to determine if an alert is configured when audit\n    data is no longer received as expected. If there is no alert configured, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92627.rb","line":1},"id":"V-92627"},{"title":"The Apache web server log files must only be accessible by privileged\nusers.","desc":"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.","descriptions":{"default":"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the log file location.\n\n    To determine permissions for log files, from the command line, navigate to\nthe directory where the log files are located and enter the following command:\n\n    ls -alH <HTTPD_ROOT>/log*\n\n    Note the owner and group permissions on these files. Only system\nadministrators and service accounts running the server should have permissions\nto the files.\n\n    If any users other than those authorized have read access to the log files,\nthis is a finding.","fix":"To protect the integrity of the data that is being captured in\nthe log files, ensure that only the members of the Auditors group,\nAdministrators, and the user assigned to run the web server software is granted\npermissions to read the log files."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000118-WSR-000068","gid":"V-92629","rid":"SV-102717r2_rule","stig_id":"AS24-U1-000180","fix_id":"F-98871r1_fix","cci":["CCI-000162"],"nist":["AU-9"]},"code":"control 'V-92629' do\n  title \"The Apache web server log files must only be accessible by privileged\nusers.\"\n  desc  \"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review the log file location.\n\n    To determine permissions for log files, from the command line, navigate to\nthe directory where the log files are located and enter the following command:\n\n    ls -alH <HTTPD_ROOT>/log*\n\n    Note the owner and group permissions on these files. Only system\nadministrators and service accounts running the server should have permissions\nto the files.\n\n    If any users other than those authorized have read access to the log files,\nthis is a finding.\n\n  \"\n  desc  'fix', \"To protect the integrity of the data that is being captured in\nthe log files, ensure that only the members of the Auditors group,\nAdministrators, and the user assigned to run the web server software is granted\npermissions to read the log files.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000118-WSR-000068'\n  tag gid: 'V-92629'\n  tag rid: 'SV-102717r2_rule'\n  tag stig_id: 'AS24-U1-000180'\n  tag fix_id: 'F-98871r1_fix'\n  tag cci: ['CCI-000162']\n  tag nist: ['AU-9']\n\n  config_path = input('config_path')\n  apache_conf_dir = apache_conf(config_path).conf_dir\n  apache_logs_dir = File.join(apache_conf_dir[0], 'logs')\n  log_files = command(\"find #{apache_logs_dir}\").stdout.split(\"\\n\")\n\n  if !log_files.empty?\n    log_files.each do |log|\n      describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n        subject { file(log) }\n        its('owner') { should be_in input('server_admins') }\n        its('group') { should be_in input('server_admin_groups') }\n      end\n    end\n  else\n    describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n      skip 'Logs files could not be found. This check has to be manually reviewed.'\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92629.rb","line":1},"id":"V-92629"},{"title":"The log information from the Apache web server must be protected from\nunauthorized modification or deletion.","desc":"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.","descriptions":{"default":"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.","rationale":"","check":"Verify the log information from the web server must be protected from\nunauthorized modification.\n\n    Review the web server documentation and deployed configuration settings to\ndetermine if the web server logging features protect log information from\nunauthorized modification.\n\n    Review file system settings to verify the log files have secure file\npermissions. Run the following command:\n\n    ls -l <'INSTALL PATH'>/logs\n\n    If the web server log files present are owned by anyone other than an\nadministrative service account this is a finding.","fix":"Determine the location of the \"ErrorLog\" directory in the \"httpd.conf\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Open the \"httpd.conf\" file.\n\n    Look for the \"ErrorLog\" directive.\n\n    Ensure the permissions and ownership of all files in the Apache log\ndirectory are correct by executing the following commands as an administrative\nservice account:\n\n    # chown <'service account'> <'ErrorLog directive PATH'>/*"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000119-WSR-000069","satisfies":["SRG-APP-000119-WSR-000069","SRG-APP-000120-WSR-000070"],"gid":"V-92631","rid":"SV-102719r1_rule","stig_id":"AS24-U1-000190","fix_id":"F-98873r1_fix","cci":["CCI-000163","CCI-000164"],"nist":["AU-9","AU-9"]},"code":"control 'V-92631' do\n  title \"The log information from the Apache web server must be protected from\nunauthorized modification or deletion.\"\n  desc  \"Log data is essential in the investigation of events. If log data were\nto become compromised, competent forensic analysis and discovery of the true\nsource of potentially malicious system activity would be difficult, if not\nimpossible, to achieve. In addition, access to log records provides information\nan attacker could potentially use to their advantage since each event record\nmight contain communication ports, protocols, services, trust relationships,\nuser names, etc.\n\n    The web server must protect the log data from unauthorized read, write,\ncopy, etc. This can be done by the web server if the web server is also doing\nthe logging function. The web server may also use an external log system. In\neither case, the logs must be protected from access by non-privileged users.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Verify the log information from the web server must be protected from\nunauthorized modification.\n\n    Review the web server documentation and deployed configuration settings to\ndetermine if the web server logging features protect log information from\nunauthorized modification.\n\n    Review file system settings to verify the log files have secure file\npermissions. Run the following command:\n\n    ls -l <'INSTALL PATH'>/logs\n\n    If the web server log files present are owned by anyone other than an\nadministrative service account this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"ErrorLog\\\" directory in the \\\"httpd.conf\\\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Open the \\\"httpd.conf\\\" file.\n\n    Look for the \\\"ErrorLog\\\" directive.\n\n    Ensure the permissions and ownership of all files in the Apache log\ndirectory are correct by executing the following commands as an administrative\nservice account:\n\n    # chown <'service account'> <'ErrorLog directive PATH'>/*\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000119-WSR-000069'\n  tag satisfies: %w(SRG-APP-000119-WSR-000069 SRG-APP-000120-WSR-000070)\n  tag gid: 'V-92631'\n  tag rid: 'SV-102719r1_rule'\n  tag stig_id: 'AS24-U1-000190'\n  tag fix_id: 'F-98873r1_fix'\n  tag cci: %w(CCI-000163 CCI-000164)\n  tag nist: %w(AU-9 AU-9)\n\n  config_path = input('config_path')\n  apache_conf_dir = apache_conf(config_path).conf_dir\n  apache_logs_dir = File.join(apache_conf_dir[0], 'logs')\n  log_files = command(\"find #{apache_logs_dir}\").stdout.split(\"\\n\")\n\n  if !log_files.empty?\n    log_files.each do |log|\n      describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n        subject { file(log) }\n        its('owner') { should be_in input('server_admins') }\n        its('group') { should be_in input('server_admin_groups') }\n      end\n    end\n  else\n    describe 'Only system administrators and service accounts running the server should have permissions to the files.' do\n      skip 'Logs files could not be found. This check has to be manually reviewed.'\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('ErrorLog') { should_not be_nil }\n  end\nend\n","source_location":{"ref":"./controls/V-92631.rb","line":1},"id":"V-92631"},{"title":"The log data and records from the Apache web server must be backed up\nonto a different system or media.","desc":"Protection of log data includes ensuring log data is not accidentally\nlost or deleted. Backing up log records to an unrelated system or onto separate\nmedia than the system the web server is actually running on helps to ensure\nthat, in the event of a catastrophic system failure, the log records will be\nretained.","descriptions":{"default":"Protection of log data includes ensuring log data is not accidentally\nlost or deleted. Backing up log records to an unrelated system or onto separate\nmedia than the system the web server is actually running on helps to ensure\nthat, in the event of a catastrophic system failure, the log records will be\nretained.","rationale":"","check":"Interview the Information System Security Officer, System Administrator,\nWeb Manager, Webmaster, or developers as necessary to determine whether a\ntested and verifiable backup strategy has been implemented for web server\nsoftware and all web server data files.\n\n    Proposed questions:\n    - Who maintains the backup and recovery procedures?\n    - Do you have a copy of the backup and recovery procedures?\n    - Where is the off-site backup location?\n    - Is the contingency plan documented?\n    - When was the last time the contingency plan was tested?\n    - Are the test dates and results documented?\n\n    If there is not a backup and recovery process for the web server, this is a\nfinding.","fix":"Document the web server backup procedures."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000125-WSR-000071","gid":"V-92635","rid":"SV-102723r1_rule","stig_id":"AS24-U1-000210","fix_id":"F-98877r1_fix","cci":["CCI-001348"],"nist":["AU-9 (2)"]},"code":"control 'V-92635' do\n  title \"The log data and records from the Apache web server must be backed up\nonto a different system or media.\"\n  desc  \"Protection of log data includes ensuring log data is not accidentally\nlost or deleted. Backing up log records to an unrelated system or onto separate\nmedia than the system the web server is actually running on helps to ensure\nthat, in the event of a catastrophic system failure, the log records will be\nretained.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the Information System Security Officer, System Administrator,\nWeb Manager, Webmaster, or developers as necessary to determine whether a\ntested and verifiable backup strategy has been implemented for web server\nsoftware and all web server data files.\n\n    Proposed questions:\n    - Who maintains the backup and recovery procedures?\n    - Do you have a copy of the backup and recovery procedures?\n    - Where is the off-site backup location?\n    - Is the contingency plan documented?\n    - When was the last time the contingency plan was tested?\n    - Are the test dates and results documented?\n\n    If there is not a backup and recovery process for the web server, this is a\nfinding.\n  \"\n  desc 'fix', 'Document the web server backup procedures.'\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000125-WSR-000071'\n  tag gid: 'V-92635'\n  tag rid: 'SV-102723r1_rule'\n  tag stig_id: 'AS24-U1-000210'\n  tag fix_id: 'F-98877r1_fix'\n  tag cci: ['CCI-001348']\n  tag nist: ['AU-9 (2)']\n\n  describe 'Review backup and recovery process for the web server' do\n    skip 'Interview the Information System Security Officer, System Administrator, Web Manager, Webmaster, or\n    developers as necessary to determine whether a tested and verifiable backup strategy has been implemented\n    for web server software and all web server data files.'\n  end\nend\n","source_location":{"ref":"./controls/V-92635.rb","line":1},"id":"V-92635"},{"title":"Expansion modules must be fully reviewed, tested, and signed before\nthey can exist on a production Apache web server.","desc":"In the case of a production web server, areas for content development\nand testing will not exist, as this type of content is only permissible on a\ndevelopment website. The process of developing on a functional production\nwebsite entails a degree of trial and error and repeated testing. This process\nis often accomplished in an environment where debugging, sequencing, and\nformatting of content are the main goals. The opportunity for a malicious user\nto obtain files that reveal business logic and logon schemes is high in this\nsituation. The existence of such immature content on a web server represents a\nsignificant security risk that is totally avoidable.\n\n    The web server must enforce, internally or through an external utility, the\nsigning of modules before they are implemented into a production environment.\nBy signing modules, the author guarantees that the module has been reviewed and\ntested before production implementation.","descriptions":{"default":"In the case of a production web server, areas for content development\nand testing will not exist, as this type of content is only permissible on a\ndevelopment website. The process of developing on a functional production\nwebsite entails a degree of trial and error and repeated testing. This process\nis often accomplished in an environment where debugging, sequencing, and\nformatting of content are the main goals. The opportunity for a malicious user\nto obtain files that reveal business logic and logon schemes is high in this\nsituation. The existence of such immature content on a web server represents a\nsignificant security risk that is totally avoidable.\n\n    The web server must enforce, internally or through an external utility, the\nsigning of modules before they are implemented into a production environment.\nBy signing modules, the author guarantees that the module has been reviewed and\ntested before production implementation.","rationale":"","check":"Enter the following command:\n\n    \"httpd -M\"\n\n    This will provide a list of the loaded modules. Validate that all displayed\nmodules are required for operations.\n\n    If any module is not required for operation, this is a finding.\n\n    NOTE: The following modules are needed for basic web function and do not\nneed to be reviewed:\n\n    core_module\n    http_module\n    so_module\n    mpm_prefork_module\n\n    For a complete list of signed Apache Modules, review\nhttps://httpd.apache.org/docs/2.4/mod/.","fix":"Remove any unsigned modules."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000131-WSR-000073","gid":"V-92637","rid":"SV-102725r1_rule","stig_id":"AS24-U1-000230","fix_id":"F-98879r1_fix","cci":["CCI-001749"],"nist":["CM-5 (3)"]},"code":"control 'V-92637' do\n  title \"Expansion modules must be fully reviewed, tested, and signed before\nthey can exist on a production Apache web server.\"\n  desc  \"In the case of a production web server, areas for content development\nand testing will not exist, as this type of content is only permissible on a\ndevelopment website. The process of developing on a functional production\nwebsite entails a degree of trial and error and repeated testing. This process\nis often accomplished in an environment where debugging, sequencing, and\nformatting of content are the main goals. The opportunity for a malicious user\nto obtain files that reveal business logic and logon schemes is high in this\nsituation. The existence of such immature content on a web server represents a\nsignificant security risk that is totally avoidable.\n\n    The web server must enforce, internally or through an external utility, the\nsigning of modules before they are implemented into a production environment.\nBy signing modules, the author guarantees that the module has been reviewed and\ntested before production implementation.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Enter the following command:\n\n    \\\"httpd -M\\\"\n\n    This will provide a list of the loaded modules. Validate that all displayed\nmodules are required for operations.\n\n    If any module is not required for operation, this is a finding.\n\n    NOTE: The following modules are needed for basic web function and do not\nneed to be reviewed:\n\n    core_module\n    http_module\n    so_module\n    mpm_prefork_module\n\n    For a complete list of signed Apache Modules, review\nhttps://httpd.apache.org/docs/2.4/mod/.\n  \"\n  desc 'fix', 'Remove any unsigned modules.'\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000131-WSR-000073'\n  tag gid: 'V-92637'\n  tag rid: 'SV-102725r1_rule'\n  tag stig_id: 'AS24-U1-000230'\n  tag fix_id: 'F-98879r1_fix'\n  tag cci: ['CCI-001749']\n  tag nist: ['CM-5 (3)']\n\n  modules_command = 'httpd -M'\n  modules = command(modules_command).stdout\n\n  describe 'Check for unused modules' do\n    skip \"The output of the command #{modules_command} is below. Validate that all displayed modules are required for operations.\\nModules Installed: \\n#{modules}\"\n  end\nend\n","source_location":{"ref":"./controls/V-92637.rb","line":1},"id":"V-92637"},{"title":"The Apache web server must not perform user management for hosted\napplications.","desc":"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, such as LDAP and Active Directory.","descriptions":{"default":"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, such as LDAP and Active Directory.","rationale":"","check":"Review the web server documentation and configuration to determine if the\nweb server is being used as a user management application.\n\n    Search for \"AuthUserFile\" in the configuration files in the installed\nApache Path.\n\n    Example:\n\n    grep -rin AuthUserFile *\n\n    If there are uncommented lines pointing to files on disk using the above\nconfiguration option, this is a finding.","fix":"Comment out the \"AuthUserFile\" lines found in the Apache\nconfiguration."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000015","gid":"V-92639","rid":"SV-102727r1_rule","stig_id":"AS24-U1-000240","fix_id":"F-98881r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92639' do\n  title \"The Apache web server must not perform user management for hosted\napplications.\"\n  desc  \"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, such as LDAP and Active Directory.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and configuration to determine if the\nweb server is being used as a user management application.\n\n    Search for \\\"AuthUserFile\\\" in the configuration files in the installed\nApache Path.\n\n    Example:\n\n    grep -rin AuthUserFile *\n\n    If there are uncommented lines pointing to files on disk using the above\nconfiguration option, this is a finding.\n  \"\n  desc 'fix', \"Comment out the \\\"AuthUserFile\\\" lines found in the Apache\nconfiguration.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000015'\n  tag gid: 'V-92639'\n  tag rid: 'SV-102727r1_rule'\n  tag stig_id: 'AS24-U1-000240'\n  tag fix_id: 'F-98881r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('AuthUserFile') { should be_nil }\n  end\nend\n","source_location":{"ref":"./controls/V-92639.rb","line":1},"id":"V-92639"},{"title":"The Apache web server must only contain services and functions\nnecessary for operation.","desc":"A web server can provide many features, services, and processes. Some\nof these may be deemed unnecessary or too unsecure to run on a production DoD\nsystem.\n\n    The web server must provide the capability to disable, uninstall, or\ndeactivate functionality and services that are deemed to be non-essential to\nthe web server mission or can adversely impact server performance.","descriptions":{"default":"A web server can provide many features, services, and processes. Some\nof these may be deemed unnecessary or too unsecure to run on a production DoD\nsystem.\n\n    The web server must provide the capability to disable, uninstall, or\ndeactivate functionality and services that are deemed to be non-essential to\nthe web server mission or can adversely impact server performance.","rationale":"","check":"Verify the document root directory and the configuration files do not\nprovide for default index.html or welcome page.\n\n    Verify the Apache User Manual content is not installed by checking the\nconfiguration files for manual location directives.\n\n    Verify the Apache configuration files do not have the Server Status handler\nconfigured.\n\n    Verify the Server Information handler is not configured.\n\n    Verify that any other handler configurations such as perl-status are not\nenabled.\n\n    If any of these are present, this is a finding.","fix":"Review all pre-installed content and remove content that is not required.\nIn particular, look for the unnecessary content that may be found in the\ndocument root directory, a configuration directory such as conf/extra\ndirectory, or as a UNIX/Linux package.\n\n    Remove the default index.html or welcome page if it is a separate package.\nIf the default welcome page is part of the main Apache httpd package as it is\non Red Hat Linux, then comment out the configuration as shown below. Removing a\nfile such as \"welcome.conf\" is not recommended as it may be replaced if the\npackage is updated.\n\n    #\n    # This configuration file enables the default \"Welcome\"\n    # page if there is no default index page present for\n    # the root URL. To disable the Welcome page, comment\n    # out all the lines below.\n    #\n    ##<LocationMatch \"^/+$\">\n    ## Options -Indexes\n    ## ErrorDocument 403 /error/noindex.html\n    ##</LocationMatch>\n\n    Remove the Apache User Manual content or comment out configurations\nreferencing the manual.\n\n    Example:\n\n    # yum erase httpd-manual\n\n    Remove or comment out any Server Status handler configuration:\n\n    #\n    # Allow server status reports generated by mod_status,\n    # with the URL of http://servername/server-status\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /server-status>\n    ## SetHandler server-status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any Server Information handler configuration:\n\n    #\n    # Allow remote server configuration reports, with the URL of\n    # http://servername/server-info (requires that mod_info.c be loaded).\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /server-info>\n    ## SetHandler server-info\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any other handler configuration such as perl-status:\n\n    # This will allow remote server configuration reports, with the URL of\n    # http://servername/perl-status\n    # Change the \".example.com\" to match your domain to enable.\n    #\n    ##<Location /perl-status>\n    ## SetHandler perl-script\n    ## PerlResponseHandler Apache2::Status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    The default source build provides extra content available in the\n<'INSTALLED PATH'>/conf/extra/ directory, but the configuration of most of the\nextra content is commented out by default. In particular, the inclusion of\nconf/extra/proxyhtml.conf is not commented out in \"httpd.conf\":\n\n    # Server-pool management (MPM specific)\n    #Include conf/extra/httpd-mpm.conf\n    # Multi-language error messages\n    #Include conf/extra/httpd-multilang-errordoc.conf\n    # Fancy directory listings\n    #Include conf/extra/httpd-autoindex.conf\n    # Language settings\n    #Include conf/extra/httpd-languages.conf\n    # User home directories\n    #Include conf/extra/httpd-userdir.conf\n    # Real-time info on requests and configuration\n    #Include conf/extra/httpd-info.conf\n    # Virtual hosts\n    #Include conf/extra/httpd-vhosts.conf\n    # Local access to the Apache HTTP Server Manual\n    #Include conf/extra/httpd-manual.conf\n    # Distributed authoring and versioning (WebDAV)\n    #Include conf/extra/httpd-dav.conf\n    # Various default settings\n    #Include conf/extra/httpd-default.conf\n    # Configure mod_proxy_html to understand HTML4/XHTML1\n    <IfModule proxy_html_module>\n    Include conf/extra/proxy-html.conf\n    </IfModule>\n    # Secure (SSL/TLS) connections\n    #Include conf/extra/httpd-ssl.conf\n\n    For applications developed in-house, ensure that development artifacts\n(sample data and scripts; unused libraries, components, debug code; or tools)\nare not included in the deployed software or accessible in the production\nenvironment."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000075","gid":"V-92641","rid":"SV-102729r1_rule","stig_id":"AS24-U1-000250","fix_id":"F-98883r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92641' do\n  title \"The Apache web server must only contain services and functions\nnecessary for operation.\"\n  desc  \"A web server can provide many features, services, and processes. Some\nof these may be deemed unnecessary or too unsecure to run on a production DoD\nsystem.\n\n    The web server must provide the capability to disable, uninstall, or\ndeactivate functionality and services that are deemed to be non-essential to\nthe web server mission or can adversely impact server performance.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Verify the document root directory and the configuration files do not\nprovide for default index.html or welcome page.\n\n    Verify the Apache User Manual content is not installed by checking the\nconfiguration files for manual location directives.\n\n    Verify the Apache configuration files do not have the Server Status handler\nconfigured.\n\n    Verify the Server Information handler is not configured.\n\n    Verify that any other handler configurations such as perl-status are not\nenabled.\n\n    If any of these are present, this is a finding.\n  \"\n  desc 'fix', \"\n    Review all pre-installed content and remove content that is not required.\nIn particular, look for the unnecessary content that may be found in the\ndocument root directory, a configuration directory such as conf/extra\ndirectory, or as a UNIX/Linux package.\n\n    Remove the default index.html or welcome page if it is a separate package.\nIf the default welcome page is part of the main Apache httpd package as it is\non Red Hat Linux, then comment out the configuration as shown below. Removing a\nfile such as \\\"welcome.conf\\\" is not recommended as it may be replaced if the\npackage is updated.\n\n    #\n    # This configuration file enables the default \\\"Welcome\\\"\n    # page if there is no default index page present for\n    # the root URL. To disable the Welcome page, comment\n    # out all the lines below.\n    #\n    ##<LocationMatch \\\"^/+$\\\">\n    ## Options -Indexes\n    ## ErrorDocument 403 /error/noindex.html\n    ##</LocationMatch>\n\n    Remove the Apache User Manual content or comment out configurations\nreferencing the manual.\n\n    Example:\n\n    # yum erase httpd-manual\n\n    Remove or comment out any Server Status handler configuration:\n\n    #\n    # Allow server status reports generated by mod_status,\n    # with the URL of http://servername/server-status\n    # Change the \\\".example.com\\\" to match your domain to enable.\n    #\n    ##<Location /server-status>\n    ## SetHandler server-status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any Server Information handler configuration:\n\n    #\n    # Allow remote server configuration reports, with the URL of\n    # http://servername/server-info (requires that mod_info.c be loaded).\n    # Change the \\\".example.com\\\" to match your domain to enable.\n    #\n    ##<Location /server-info>\n    ## SetHandler server-info\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    Remove or comment out any other handler configuration such as perl-status:\n\n    # This will allow remote server configuration reports, with the URL of\n    # http://servername/perl-status\n    # Change the \\\".example.com\\\" to match your domain to enable.\n    #\n    ##<Location /perl-status>\n    ## SetHandler perl-script\n    ## PerlResponseHandler Apache2::Status\n    ## Order deny,allow\n    ## Deny from all\n    ## Allow from .example.com\n    ##</Location>\n\n    The default source build provides extra content available in the\n<'INSTALLED PATH'>/conf/extra/ directory, but the configuration of most of the\nextra content is commented out by default. In particular, the inclusion of\nconf/extra/proxyhtml.conf is not commented out in \\\"httpd.conf\\\":\n\n    # Server-pool management (MPM specific)\n    #Include conf/extra/httpd-mpm.conf\n    # Multi-language error messages\n    #Include conf/extra/httpd-multilang-errordoc.conf\n    # Fancy directory listings\n    #Include conf/extra/httpd-autoindex.conf\n    # Language settings\n    #Include conf/extra/httpd-languages.conf\n    # User home directories\n    #Include conf/extra/httpd-userdir.conf\n    # Real-time info on requests and configuration\n    #Include conf/extra/httpd-info.conf\n    # Virtual hosts\n    #Include conf/extra/httpd-vhosts.conf\n    # Local access to the Apache HTTP Server Manual\n    #Include conf/extra/httpd-manual.conf\n    # Distributed authoring and versioning (WebDAV)\n    #Include conf/extra/httpd-dav.conf\n    # Various default settings\n    #Include conf/extra/httpd-default.conf\n    # Configure mod_proxy_html to understand HTML4/XHTML1\n    <IfModule proxy_html_module>\n    Include conf/extra/proxy-html.conf\n    </IfModule>\n    # Secure (SSL/TLS) connections\n    #Include conf/extra/httpd-ssl.conf\n\n    For applications developed in-house, ensure that development artifacts\n(sample data and scripts; unused libraries, components, debug code; or tools)\nare not included in the deployed software or accessible in the production\nenvironment.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000075'\n  tag gid: 'V-92641'\n  tag rid: 'SV-102729r1_rule'\n  tag stig_id: 'AS24-U1-000250'\n  tag fix_id: 'F-98883r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  describe 'The Apache web server must only contain services and functions necessary for operation' do\n    skip 'Verify the document root directory and the configuration files do not provide for default index.html or welcome page.'\n  end\n\n  describe package('httpd-manual') do\n    it { should_not be_installed }\n  end\n\n  config_path = input('config_path')\n  apache_config = apache_conf(config_path)\n\n  describe apache_config.params('SetHandler') do\n    it { should_not include 'server-status' }\n    it { should_not include 'server-info' }\n    it { should_not include 'perl-script' }\n  end\nend\n","source_location":{"ref":"./controls/V-92641.rb","line":1},"id":"V-92641"},{"title":"The Apache web server must not be a proxy server.","desc":"A web server should be primarily a web server or a proxy server but\nnot both, for the same reasons that other multi-use servers are not\nrecommended. Scanning for web servers that will also proxy requests into an\notherwise protected network is a very common attack, making the attack\nanonymous.","descriptions":{"default":"A web server should be primarily a web server or a proxy server but\nnot both, for the same reasons that other multi-use servers are not\nrecommended. Scanning for web servers that will also proxy requests into an\notherwise protected network is a very common attack, making the attack\nanonymous.","rationale":"","check":"If the server is a proxy server and not a web server, this check is Not\nApplicable.\n\n    In a command line, run \"httpd -M | sort\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"ProxyRequest\" in the \"httpd.conf\" file.\n    If the ProxyRequest directive is set to “On”, this is a finding.","fix":"Determine where the proxy modules are located by running the following\ncommand:\n\n    grep -rl \"proxy_module\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Comment out the ProxyRequext directive in the httpd.conf file.\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000076","gid":"V-92643","rid":"SV-102731r2_rule","stig_id":"AS24-U1-000260","fix_id":"F-98885r2_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92643' do\n  title 'The Apache web server must not be a proxy server.'\n  desc  \"A web server should be primarily a web server or a proxy server but\nnot both, for the same reasons that other multi-use servers are not\nrecommended. Scanning for web servers that will also proxy requests into an\notherwise protected network is a very common attack, making the attack\nanonymous.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    If the server is a proxy server and not a web server, this check is Not\nApplicable.\n\n    In a command line, run \\\"httpd -M | sort\\\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"ProxyRequest\\\" in the \\\"httpd.conf\\\" file.\n    If the ProxyRequest directive is set to “On”, this is a finding.\n\n  \"\n  desc 'fix', \"\n    Determine where the proxy modules are located by running the following\ncommand:\n\n    grep -rl \\\"proxy_module\\\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n    Comment out the ProxyRequext directive in the httpd.conf file.\n\n    Restart Apache: apachectl restart\n\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000076'\n  tag gid: 'V-92643'\n  tag rid: 'SV-102731r2_rule'\n  tag stig_id: 'AS24-U1-000260'\n  tag fix_id: 'F-98885r2_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  proxy_server = input('proxy_server')\n  config_path = input('config_path')\n  modules_command = 'httpd -M | sort'\n  installed_modules = command(modules_command).stdout.split\n\n  check_modules = %w(\n    proxy_module\n    proxy_ajp_module\n    proxy_balancer_module\n    proxy_ftp_module\n    proxy_http_module\n    proxy_connect_module\n  )\n\n  if proxy_server\n    impact 0.0\n  else\n    impact 0.5\n  end\n\n  proxy_modules = installed_modules.select do |im|\n    check_modules.any? { |cm| im.include?(cm) }\n  end\n\n  describe 'Proxy modules should not be present on the Apache server' do\n    subject { proxy_modules.empty? }\n    it { should cmp true }\n  end\n\n  unless apache_conf(config_path).ProxyRequest.nil?\n    apache_conf(config_path).ProxyRequest.each do |value|\n      describe 'ProxyRequest value should be set to On' do\n        subject { value }\n        it { should cmp 'On' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92643.rb","line":1},"id":"V-92643"},{"title":"The Apache web server must provide install options to exclude the\ninstallation of documentation, sample code, example applications, and\ntutorials.","desc":"Apache web server documentation, sample code, example applications,\nand tutorials may be an exploitable threat to an Apache web server because this\ntype of code has not been evaluated and approved. A production Apache web\nserver must only contain components that are operationally necessary (e.g.,\ncompiled code, scripts, web content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\nremoved from a production Apache web server. To ensure that the documentation\nand code are not installed or are uninstalled completely, the Apache web server\nmust offer an option as part of the installation process to exclude these\npackages or to uninstall the packages if necessary.","descriptions":{"default":"Apache web server documentation, sample code, example applications,\nand tutorials may be an exploitable threat to an Apache web server because this\ntype of code has not been evaluated and approved. A production Apache web\nserver must only contain components that are operationally necessary (e.g.,\ncompiled code, scripts, web content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\nremoved from a production Apache web server. To ensure that the documentation\nand code are not installed or are uninstalled completely, the Apache web server\nmust offer an option as part of the installation process to exclude these\npackages or to uninstall the packages if necessary.","rationale":"","check":"If the site requires the use of a particular piece of software, verify that\nthe Information System Security Officer (ISSO) maintains documentation\nidentifying this software as necessary for operations. The software must be\noperated at the vendor’s current patch level and must be a supported vendor\nrelease.\n\n    If programs or utilities that meet the above criteria are installed on the\nweb server and appropriate documentation and signatures are in evidence, this\nis not a finding.\n\n    Determine whether the web server is configured with unnecessary software.\n\n    Determine whether processes other than those that support the web server\nare loaded and/or run on the web server.\n\n    Examples of software that should not be on the web server are all web\ndevelopment tools, office suites (unless the web server is a private web\ndevelopment server), compilers, and other utilities that are not part of the\nweb server suite or the basic operating system.\n\n    Check the directory structure of the server and verify that additional,\nunintended, or unneeded applications are not loaded on the system.\n\n    If, after review of the application on the system, there is no\njustification for the identified software, this is a finding.","fix":"Remove any unnecessary applications per ISSO documentation."},"impact":0.7,"refs":[],"tags":{"severity":"high","gtitle":"SRG-APP-000141-WSR-000077","satisfies":["SRG-APP-000141-WSR-000077","SRG-APP-000141-WSR-000080"],"gid":"V-92645","rid":"SV-102733r1_rule","stig_id":"AS24-U1-000270","fix_id":"F-98887r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92645' do\n  title \"The Apache web server must provide install options to exclude the\ninstallation of documentation, sample code, example applications, and\ntutorials.\"\n  desc  \"Apache web server documentation, sample code, example applications,\nand tutorials may be an exploitable threat to an Apache web server because this\ntype of code has not been evaluated and approved. A production Apache web\nserver must only contain components that are operationally necessary (e.g.,\ncompiled code, scripts, web content, etc.).\n\n    Any documentation, sample code, example applications, and tutorials must be\nremoved from a production Apache web server. To ensure that the documentation\nand code are not installed or are uninstalled completely, the Apache web server\nmust offer an option as part of the installation process to exclude these\npackages or to uninstall the packages if necessary.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    If the site requires the use of a particular piece of software, verify that\nthe Information System Security Officer (ISSO) maintains documentation\nidentifying this software as necessary for operations. The software must be\noperated at the vendor’s current patch level and must be a supported vendor\nrelease.\n\n    If programs or utilities that meet the above criteria are installed on the\nweb server and appropriate documentation and signatures are in evidence, this\nis not a finding.\n\n    Determine whether the web server is configured with unnecessary software.\n\n    Determine whether processes other than those that support the web server\nare loaded and/or run on the web server.\n\n    Examples of software that should not be on the web server are all web\ndevelopment tools, office suites (unless the web server is a private web\ndevelopment server), compilers, and other utilities that are not part of the\nweb server suite or the basic operating system.\n\n    Check the directory structure of the server and verify that additional,\nunintended, or unneeded applications are not loaded on the system.\n\n    If, after review of the application on the system, there is no\njustification for the identified software, this is a finding.\n  \"\n  desc 'fix', 'Remove any unnecessary applications per ISSO documentation.'\n  impact 0.7\n  tag severity: 'high'\n  tag gtitle: 'SRG-APP-000141-WSR-000077'\n  tag satisfies: %w(SRG-APP-000141-WSR-000077 SRG-APP-000141-WSR-000080)\n  tag gid: 'V-92645'\n  tag rid: 'SV-102733r1_rule'\n  tag stig_id: 'AS24-U1-000270'\n  tag fix_id: 'F-98887r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  describe 'Remove any unnecessary applications per ISSO documentation.' do\n    skip 'If the site requires the use of a particular piece of software, verify that the Information System Security Officer (ISSO) maintains documentation identifying this software as necessary for operations. The software must be operated at the vendor’s current patch level and must be a supported vendor release.'\n  end\nend\n","source_location":{"ref":"./controls/V-92645.rb","line":1},"id":"V-92645"},{"title":"The Apache web server must have resource mappings set to disable the\nserving of certain file types.","desc":"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.","descriptions":{"default":"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review any \"Action\" or \"AddHandler\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Action\"\n    # cat /<path_to_file>/httpd.conf | grep -i \"AddHandler\"\n\n    If \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \"Action\" or \"AddHandler\" exist within the \"httpd.conf\" file and\nthey configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000081","satisfies":["SRG-APP-000141-WSR-000081","SRG-APP-000141-WSR-000083"],"gid":"V-92653","rid":"SV-102741r1_rule","stig_id":"AS24-U1-000300","fix_id":"F-98895r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92653' do\n  title \"The Apache web server must have resource mappings set to disable the\nserving of certain file types.\"\n  desc  \"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review any \\\"Action\\\" or \\\"AddHandler\\\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Action\\\"\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"AddHandler\\\"\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist within the \\\"httpd.conf\\\" file and\nthey configure .exe, .dll, .com, .bat, or .csh, remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000081'\n  tag satisfies: %w(SRG-APP-000141-WSR-000081 SRG-APP-000141-WSR-000083)\n  tag gid: 'V-92653'\n  tag rid: 'SV-102741r1_rule'\n  tag stig_id: 'AS24-U1-000300'\n  tag fix_id: 'F-98895r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('AddHandler.to_s') { should_not match '.exe' }\n    its('AddHandler.to_s') { should_not match '.dll' }\n    its('AddHandler.to_s') { should_not match '.com' }\n    its('AddHandler.to_s') { should_not match '.bat' }\n    its('AddHandler.to_s') { should_not match '.csh' }\n  end\n\n  describe apache_conf(config_path) do\n    its('Action.to_s') { should_not match '.exe' }\n    its('Action.to_s') { should_not match '.dll' }\n    its('Action.to_s') { should_not match '.com' }\n    its('Action.to_s') { should_not match '.bat' }\n    its('Action.to_s') { should_not match '.csh' }\n  end\nend\n","source_location":{"ref":"./controls/V-92653.rb","line":1},"id":"V-92653"},{"title":"The Apache web server must allow the mappings to unused and vulnerable\nscripts to be removed.","desc":"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.","descriptions":{"default":"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Locate \"cgi-bin\" files and directories enabled in the Apache\nconfiguration via \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and\n\"ScriptInterpreterSource\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Script\"\n\n    If any scripts are present that are not needed for application operation,\nthis is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", and\n\"ScriptInterpreterSource\" directives.\n\n    Go into each directory and locate \"cgi-bin\" files. Remove any script that\nis not needed for application operation.\n\n    Ensure this process is documented and approved by the ISSO."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000082","gid":"V-92655","rid":"SV-102743r1_rule","stig_id":"AS24-U1-000310","fix_id":"F-98897r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92655' do\n  title \"The Apache web server must allow the mappings to unused and vulnerable\nscripts to be removed.\"\n  desc  \"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Locate \\\"cgi-bin\\\" files and directories enabled in the Apache\nconfiguration via \\\"Script\\\", \\\"ScriptAlias\\\" or \\\"ScriptAliasMatch\\\", and\n\\\"ScriptInterpreterSource\\\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Script\\\"\n\n    If any scripts are present that are not needed for application operation,\nthis is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review \\\"Script\\\", \\\"ScriptAlias\\\" or \\\"ScriptAliasMatch\\\", and\n\\\"ScriptInterpreterSource\\\" directives.\n\n    Go into each directory and locate \\\"cgi-bin\\\" files. Remove any script that\nis not needed for application operation.\n\n    Ensure this process is documented and approved by the ISSO.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000082'\n  tag gid: 'V-92655'\n  tag rid: 'SV-102743r1_rule'\n  tag stig_id: 'AS24-U1-000310'\n  tag fix_id: 'F-98897r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n  apache_conf_file = apache_conf(config_path)\n  scripts = apache_conf_file.params('Script')\n  script_alias = apache_conf_file.params('ScriptAlias')\n  script_alias_match = apache_conf_file.params('ScriptAliasMatch')\n  script_interpreter_source = apache_conf_file.params('ScriptInterpreterSource')\n\n  check_dirs_final = []\n\n  scripts ? scripts.map { |e| check_dirs_final.push(e) } : nil\n  script_alias ? script_alias.map { |e| check_dirs_final.push(e) } : nil\n  script_alias_match ? script_alias_match.map { |e| check_dirs_final.push(e) } : nil\n  script_interpreter_source ? script_interpreter_source.map { |e| check_dirs_final.push(e) } : nil\n\n  describe 'Check for scripts that are present and are not needed for application operation' do\n    skip \"The following locations need to be checked for cgi-bin files. Remove any scripts that are not needed.\\n\\nScript Locations:\\n#{check_dirs_final.join(\"\\n\")}\"\n  end\nend\n","source_location":{"ref":"./controls/V-92655.rb","line":1},"id":"V-92655"},{"title":"The Apache web server must have Web Distributed Authoring (WebDAV)\ndisabled.","desc":"A web server can be installed with functionality that, by its nature,\nis not secure. WebDAV is an extension to the HTTP protocol that, when\ndeveloped, was meant to allow users to create, change, and move documents on a\nserver, typically a web server or web share. Allowing this functionality,\ndevelopment, and deployment is much easier for web authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\nallow clients to modify unauthorized files on the web server.","descriptions":{"default":"A web server can be installed with functionality that, by its nature,\nis not secure. WebDAV is an extension to the HTTP protocol that, when\ndeveloped, was meant to allow users to create, change, and move documents on a\nserver, typically a web server or web share. Allowing this functionality,\ndevelopment, and deployment is much easier for web authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\nallow clients to modify unauthorized files on the web server.","rationale":"","check":"In a command line, run \"httpd -M | sort\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module","fix":"Determine where the \"dav\" modules are located by running the following\ncommand:\n\n    grep -rl \"dav_module\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000085","gid":"V-92659","rid":"SV-102747r1_rule","stig_id":"AS24-U1-000330","fix_id":"F-98901r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92659' do\n  title \"The Apache web server must have Web Distributed Authoring (WebDAV)\ndisabled.\"\n  desc  \"A web server can be installed with functionality that, by its nature,\nis not secure. WebDAV is an extension to the HTTP protocol that, when\ndeveloped, was meant to allow users to create, change, and move documents on a\nserver, typically a web server or web share. Allowing this functionality,\ndevelopment, and deployment is much easier for web authors.\n\n    WebDAV is not widely used and has serious security concerns because it may\nallow clients to modify unauthorized files on the web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | sort\\\" to view a list of installed\nmodules.\n\n    If any of the following modules are present, this is a finding:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module\n  \"\n  desc 'fix', \"\n    Determine where the \\\"dav\\\" modules are located by running the following\ncommand:\n\n    grep -rl \\\"dav_module\\\" <'INSTALL PATH'>\n\n    Edit the file and comment out the following modules:\n\n    dav_module\n    dav_fs_module\n    dav_lock_module\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000085'\n  tag gid: 'V-92659'\n  tag rid: 'SV-102747r1_rule'\n  tag stig_id: 'AS24-U1-000330'\n  tag fix_id: 'F-98901r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  modules_command = 'httpd -M | sort'\n  installed_modules = command(modules_command).stdout.split\n\n  check_modules = %w(\n    dav_module\n    dav_fs_module\n    dav_lock_module\n  )\n\n  bad_modules = installed_modules.select do |i|\n    check_modules.any? { |j| i.include?(j) }\n  end\n\n  describe bad_modules do\n    it 'The following modules should be removed from Apache server' do\n      failure_message = \"The following modules should be removed: #{bad_modules.join(', ')}\"\n      expect(bad_modules).to be_empty, failure_message\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92659.rb","line":1},"id":"V-92659"},{"title":"The Apache web server must be configured to use a specified IP address\nand port.","desc":"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.","descriptions":{"default":"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"Listen\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Listen\"\n\n    Verify that any enabled \"Listen\" directives specify both an IP address\nand port number.\n\n    If the \"Listen\" directive is found with only an IP address or only a port\nnumber specified, this is finding.\n\n    If the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80),\nthis is a finding.\n\n    If the \"Listen\" directive does not exist, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set the \"Listen\" directive to listen on a specific IP address and port.\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000142-WSR-000089","satisfies":["SRG-APP-000142-WSR-000089","SRG-APP-000176-WSR-000096"],"gid":"V-92661","rid":"SV-102749r1_rule","stig_id":"AS24-U1-000360","fix_id":"F-98903r1_fix","cci":["CCI-000186","CCI-000382"],"nist":["IA-5 (2) (b)","CM-7 b"]},"code":"control 'V-92661' do\n  title \"The Apache web server must be configured to use a specified IP address\nand port.\"\n  desc  \"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"Listen\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Listen\\\"\n\n    Verify that any enabled \\\"Listen\\\" directives specify both an IP address\nand port number.\n\n    If the \\\"Listen\\\" directive is found with only an IP address or only a port\nnumber specified, this is finding.\n\n    If the IP address is all zeros (i.e., 0.0.0.0:80 or [::ffff:0.0.0.0]:80),\nthis is a finding.\n\n    If the \\\"Listen\\\" directive does not exist, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set the \\\"Listen\\\" directive to listen on a specific IP address and port.\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000142-WSR-000089'\n  tag satisfies: %w(SRG-APP-000142-WSR-000089 SRG-APP-000176-WSR-000096)\n  tag gid: 'V-92661'\n  tag rid: 'SV-102749r1_rule'\n  tag stig_id: 'AS24-U1-000360'\n  tag fix_id: 'F-98903r1_fix'\n  tag cci: %w(CCI-000186 CCI-000382)\n  tag nist: ['IA-5 (2) (b)', 'CM-7 b']\n\n  config_path = input('config_path')\n  listen = apache_conf(config_path).params('Listen')\n\n  if !listen.nil?\n    listen.each do |address|\n      describe address do\n        it { should match /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]):[0-9]+$/ }\n        it { should_not match /^0.0.0.0:[0-9]+$/ }\n      end\n    end\n  else\n    describe apache_conf(config_path) do\n      its('Listen') { should_not cmp nil }\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92661.rb","line":1},"id":"V-92661"},{"title":"Apache web server accounts accessing the directory tree, the shell, or\nother operating system functions and utilities must only be administrative\naccounts.","desc":"As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.","descriptions":{"default":"As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.","rationale":"","check":"Review the web server documentation and configuration to determine what web\nserver accounts are available on the server.\n\n    Any directories or files owned by anyone other than an administrative\nservice account is a finding.\n\n    If non-privileged web server accounts are available with access to\nfunctions, directories, or files not needed for the role of the account, this\nis a finding.","fix":"Limit the functions, directories, and files that are accessible\nby each account and role to administrative service accounts and remove or\nmodify non-privileged account access."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000211-WSR-000030","gid":"V-92671","rid":"SV-102759r1_rule","stig_id":"AS24-U1-000430","fix_id":"F-98913r1_fix","cci":["CCI-001082"],"nist":["SC-2"]},"code":"control 'V-92671' do\n  title \"Apache web server accounts accessing the directory tree, the shell, or\nother operating system functions and utilities must only be administrative\naccounts.\"\n  desc  \"As a rule, accounts on a web server are to be kept to a minimum. Only\nadministrators, web managers, developers, auditors, and web authors require\naccounts on the machine hosting the web server. The resources to which these\naccounts have access must also be closely monitored and controlled. Only the\nsystem administrator needs access to all the system's capabilities, while the\nweb administrator and associated staff require access and control of the web\ncontent and web server configuration files.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and configuration to determine what web\nserver accounts are available on the server.\n\n    Any directories or files owned by anyone other than an administrative\nservice account is a finding.\n\n    If non-privileged web server accounts are available with access to\nfunctions, directories, or files not needed for the role of the account, this\nis a finding.\n  \"\n  desc  'fix', \"Limit the functions, directories, and files that are accessible\nby each account and role to administrative service accounts and remove or\nmodify non-privileged account access.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000211-WSR-000030'\n  tag gid: 'V-92671'\n  tag rid: 'SV-102759r1_rule'\n  tag stig_id: 'AS24-U1-000430'\n  tag fix_id: 'F-98913r1_fix'\n  tag cci: ['CCI-001082']\n  tag nist: ['SC-2']\n\n  describe 'Check the web server documentation and configration to determine web server accounts' do\n    skip 'Any directories or files owned by anyone other than an administrative service account is a finding. If non-privileged web server accounts are available with access to functions, directories, or files not needed for the role of the account, this is a finding'\n  end\nend\n","source_location":{"ref":"./controls/V-92671.rb","line":1},"id":"V-92671"},{"title":"Apache web server application directories,  libraries, and\nconfiguration files must only be accessible to privileged users.","desc":"To properly monitor the changes to the web server and the hosted\napplications, logging must be enabled. Along with logging being enabled, each\nrecord must properly contain the changes made and the names of those who made\nthe changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.","descriptions":{"default":"To properly monitor the changes to the web server and the hosted\napplications, logging must be enabled. Along with logging being enabled, each\nrecord must properly contain the changes made and the names of those who made\nthe changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.","rationale":"","check":"Obtain a list of the user accounts for the system, noting the privileges\nfor each account.\n\n    Verify with the SA or the Information System Security Officer (ISSO) that\nall privileged accounts are mission essential and documented.\n\n    Verify with the SA or the ISSO that all non-administrator access to shell\nscripts and operating system functions are mission essential and documented.\n\n    If undocumented privileged accounts are present, this is a finding.\n\n    If undocumented access to shell scripts or operating system functions is\npresent, this is a finding.","fix":"Ensure non-administrators are not allowed access to the\ndirectory tree, the shell, or other operating system functions and utilities."},"impact":0.7,"refs":[],"tags":{"severity":"high","gtitle":"SRG-APP-000211-WSR-000031","satisfies":["SRG-APP-000211-WSR-000031","SRG-APP-000141-WSR-000078","SRG-APP-000380-WSR-000072"],"gid":"V-92673","rid":"SV-102761r1_rule","stig_id":"AS24-U1-000440","fix_id":"F-98915r1_fix","cci":["CCI-000381","CCI-001082","CCI-001813"],"nist":["CM-7 a","SC-2","CM-5 (1)"]},"code":"control 'V-92673' do\n  title \"Apache web server application directories,  libraries, and\nconfiguration files must only be accessible to privileged users.\"\n  desc  \"To properly monitor the changes to the web server and the hosted\napplications, logging must be enabled. Along with logging being enabled, each\nrecord must properly contain the changes made and the names of those who made\nthe changes.\n\n    Allowing anonymous users the capability to change the web server or the\nhosted application will not generate proper log information that can then be\nused for forensic reporting in the case of a security issue. Allowing anonymous\nusers to make changes will also grant change capabilities to anybody without\nforcing a user to authenticate before the changes can be made.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Obtain a list of the user accounts for the system, noting the privileges\nfor each account.\n\n    Verify with the SA or the Information System Security Officer (ISSO) that\nall privileged accounts are mission essential and documented.\n\n    Verify with the SA or the ISSO that all non-administrator access to shell\nscripts and operating system functions are mission essential and documented.\n\n    If undocumented privileged accounts are present, this is a finding.\n\n    If undocumented access to shell scripts or operating system functions is\npresent, this is a finding.\n  \"\n  desc 'fix', \"Ensure non-administrators are not allowed access to the\ndirectory tree, the shell, or other operating system functions and utilities.\"\n  impact 0.7\n  tag severity: 'high'\n  tag gtitle: 'SRG-APP-000211-WSR-000031'\n  tag satisfies: %w(SRG-APP-000211-WSR-000031 SRG-APP-000141-WSR-000078\nSRG-APP-000380-WSR-000072)\n  tag gid: 'V-92673'\n  tag rid: 'SV-102761r1_rule'\n  tag stig_id: 'AS24-U1-000440'\n  tag fix_id: 'F-98915r1_fix'\n  tag cci: %w(CCI-000381 CCI-001082 CCI-001813)\n  tag nist: ['CM-7 a', 'SC-2', 'CM-5 (1)']\n\n  describe 'Obtain a list of the user accounts for the system, noting the privileges for each account' do\n    skip \"Verify with the SA or the Information System Security Officer (ISSO) that all privileged accounts are mission essential and documented.\n      Verify with the SA or the ISSO that all non-administrator access to shell scripts and operating system functions are mission essential and documented.\n      If undocumented privileged accounts are present, this is a finding.\n      If undocumented access to shell scripts or operating system functions is present, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92673.rb","line":1},"id":"V-92673"},{"title":"The Apache web server must separate the hosted applications from\nhosted Apache web server management functionality.","desc":"The separation of user functionality from web server management can be\naccomplished by moving management functions to a separate IP address or port.\nTo further separate the management functions, separate authentication methods\nand certificates should be used.\n\n    By moving the management functionality, the possibility of accidental\ndiscovery of the management functions by non-privileged users during hosted\napplication use is minimized.","descriptions":{"default":"The separation of user functionality from web server management can be\naccomplished by moving management functions to a separate IP address or port.\nTo further separate the management functions, separate authentication methods\nand certificates should be used.\n\n    By moving the management functionality, the possibility of accidental\ndiscovery of the management functions by non-privileged users during hosted\napplication use is minimized.","rationale":"","check":"Review the web server documentation and deployed configuration to determine\nwhether hosted application functionality is separated from web server\nmanagement functions.\n\n    If the functions are not separated, this is a finding.","fix":"Configure Apache to separate the hosted applications from web\nserver management functionality."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000211-WSR-000129","gid":"V-92675","rid":"SV-102763r1_rule","stig_id":"AS24-U1-000450","fix_id":"F-98917r1_fix","cci":["CCI-001082"],"nist":["SC-2"]},"code":"control 'V-92675' do\n  title \"The Apache web server must separate the hosted applications from\nhosted Apache web server management functionality.\"\n  desc  \"The separation of user functionality from web server management can be\naccomplished by moving management functions to a separate IP address or port.\nTo further separate the management functions, separate authentication methods\nand certificates should be used.\n\n    By moving the management functionality, the possibility of accidental\ndiscovery of the management functions by non-privileged users during hosted\napplication use is minimized.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and deployed configuration to determine\nwhether hosted application functionality is separated from web server\nmanagement functions.\n\n    If the functions are not separated, this is a finding.\n  \"\n  desc 'fix', \"Configure Apache to separate the hosted applications from web\nserver management functionality.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000211-WSR-000129'\n  tag gid: 'V-92675'\n  tag rid: 'SV-102763r1_rule'\n  tag stig_id: 'AS24-U1-000450'\n  tag fix_id: 'F-98917r1_fix'\n  tag cci: ['CCI-001082']\n  tag nist: ['SC-2']\n\n  describe 'The Apache web server must separate the hosted applications from hosted Apache web server management functionality.' do\n    skip \"Review the web server documentation and deployed configuration to determine whether hosted application functionality is separated from web server management functions.\n    If the functions are not separated, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92675.rb","line":1},"id":"V-92675"},{"title":"The Apache web server must invalidate session identifiers upon hosted\napplication user logout or other session termination.","desc":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries from capturing and continuing to\nemploy previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\nan application user's session. Unique session IDs help to reduce predictability\nof said identifiers. When a user logs out, or when any other session\ntermination event occurs, the web server must terminate the user session to\nminimize the potential for an attacker to hijack that particular user session.","descriptions":{"default":"Captured sessions can be reused in \"replay\" attacks. This\nrequirement limits the ability of adversaries from capturing and continuing to\nemploy previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\nan application user's session. Unique session IDs help to reduce predictability\nof said identifiers. When a user logs out, or when any other session\ntermination event occurs, the web server must terminate the user session to\nminimize the potential for an attacker to hijack that particular user session.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the following directive:\n\n    \"SessionMaxAge\"\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SessionMaxAge\"\n\n    Verify the value of \"SessionMaxAge\" is set to \"600\" or less.\n\n    If the \"SessionMaxAge\" does not exist or is set to more than \"600\",\nthis is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add the following line to the \"httpd.conf\" file:\n\n    SessionMaxAge 600\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000220-WSR-000201","satisfies":["SRG-APP-000220-WSR-000201","SRG-APP-000295-WSR-000012"],"gid":"V-92677","rid":"SV-102765r1_rule","stig_id":"AS24-U1-000460","fix_id":"F-98919r1_fix","cci":["CCI-001185","CCI-002361"],"nist":["SC-23 (1)","AC-12"]},"code":"control 'V-92677' do\n  title \"The Apache web server must invalidate session identifiers upon hosted\napplication user logout or other session termination.\"\n  desc  \"Captured sessions can be reused in \\\"replay\\\" attacks. This\nrequirement limits the ability of adversaries from capturing and continuing to\nemploy previously valid session IDs.\n\n    Session IDs are tokens generated by web applications to uniquely identify\nan application user's session. Unique session IDs help to reduce predictability\nof said identifiers. When a user logs out, or when any other session\ntermination event occurs, the web server must terminate the user session to\nminimize the potential for an attacker to hijack that particular user session.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the following directive:\n\n    \\\"SessionMaxAge\\\"\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SessionMaxAge\\\"\n\n    Verify the value of \\\"SessionMaxAge\\\" is set to \\\"600\\\" or less.\n\n    If the \\\"SessionMaxAge\\\" does not exist or is set to more than \\\"600\\\",\nthis is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add the following line to the \\\"httpd.conf\\\" file:\n\n    SessionMaxAge 600\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000220-WSR-000201'\n  tag satisfies: %w(SRG-APP-000220-WSR-000201 SRG-APP-000295-WSR-000012)\n  tag gid: 'V-92677'\n  tag rid: 'SV-102765r1_rule'\n  tag stig_id: 'AS24-U1-000460'\n  tag fix_id: 'F-98919r1_fix'\n  tag cci: %w(CCI-001185 CCI-002361)\n  tag nist: ['SC-23 (1)', 'AC-12']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('SessionMaxAge') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionMaxAge.nil?\n    apache_conf(config_path).SessionMaxAge.each do |value|\n      describe 'SessionMaxAge value should be less than or equal to 600' do\n        subject { value }\n        it { should be <= 600 }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92677.rb","line":1},"id":"V-92677"},{"title":"Cookies exchanged between the Apache web server and client, such as\nsession cookies, must have security settings that disallow cookie access\noutside the originating Apache web server and hosted application.","desc":"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.","descriptions":{"default":"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.","rationale":"","check":"Review the web server documentation and configuration to determine if\ncookies between the web server and client are accessible by applications or web\nservers other than the originating pair.\n\n    grep SessionCookieName <'INSTALL LOCATION'>/mod_session.conf\n\n    Confirm that the \"HttpOnly\" and \"Secure\" settings are present in the\nline returned.\n\n    Confirm that the line does not contain the \"Domain\" cookie setting.\n\n    Verify the \"headers_module (shared)\" module is loaded in the web server:\n\n    \"# httpd -M\n    Verify \" headers_module (shared)\" is returned in the list of Loaded\nModules from the above command.\"\n\n    If the \"headers_module (shared)\" is not loaded, this is a finding.","fix":"Edit the \"mod_session.conf\" file and find the \"SessionCookieName\"\ndirective.\n\n    Set the \"SessionCookieName\" to \"session path=/; HttpOnly; Secure; \"\n\n    Example:\n\n    SessionCookieName session path=/; HttpOnly; Secure;\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000223-WSR-000011","gid":"V-92679","rid":"SV-102767r2_rule","stig_id":"AS24-U1-000470","fix_id":"F-98921r1_fix","cci":["CCI-001664"],"nist":["SC-23 (3)"]},"code":"control 'V-92679' do\n  title \"Cookies exchanged between the Apache web server and client, such as\nsession cookies, must have security settings that disallow cookie access\noutside the originating Apache web server and hosted application.\"\n  desc  \"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and configuration to determine if\ncookies between the web server and client are accessible by applications or web\nservers other than the originating pair.\n\n    grep SessionCookieName <'INSTALL LOCATION'>/mod_session.conf\n\n    Confirm that the \\\"HttpOnly\\\" and \\\"Secure\\\" settings are present in the\nline returned.\n\n    Confirm that the line does not contain the \\\"Domain\\\" cookie setting.\n\n    Verify the \\\"headers_module (shared)\\\" module is loaded in the web server:\n\n    \\\"# httpd -M\n    Verify \\\" headers_module (shared)\\\" is returned in the list of Loaded\nModules from the above command.\\\"\n\n    If the \\\"headers_module (shared)\\\" is not loaded, this is a finding.\n\n  \"\n  desc 'fix', \"\n    Edit the \\\"mod_session.conf\\\" file and find the \\\"SessionCookieName\\\"\ndirective.\n\n    Set the \\\"SessionCookieName\\\" to \\\"session path=/; HttpOnly; Secure; \\\"\n\n    Example:\n\n    SessionCookieName session path=/; HttpOnly; Secure;\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000223-WSR-000011'\n  tag gid: 'V-92679'\n  tag rid: 'SV-102767r2_rule'\n  tag stig_id: 'AS24-U1-000470'\n  tag fix_id: 'F-98921r1_fix'\n  tag cci: ['CCI-001664']\n  tag nist: ['SC-23 (3)']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  headers_module = command('httpd -M | grep -i headers_module (shared)')\n\n  describe headers_module.stdout.strip do\n    it { should_not cmp '' }\n  end\nend\n","source_location":{"ref":"./controls/V-92679.rb","line":1},"id":"V-92679"},{"title":"The Apache web server must generate a session ID long enough that it\ncannot be guessed through brute force.","desc":"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    Generating session IDs that are at least 128 bits (16 bytes) in length will\ncause an attacker to take a large amount of time and resources to guess,\nreducing the likelihood of an attacker guessing a session ID.","descriptions":{"default":"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    Generating session IDs that are at least 128 bits (16 bytes) in length will\ncause an attacker to take a large amount of time and resources to guess,\nreducing the likelihood of an attacker guessing a session ID.","rationale":"","check":"Review the web server documentation and deployed configuration to determine\nthe length of the generated session identifiers.\n\n    First ensure that \"session_crypto\" is enabled:\n\n    httpd -M |grep session_crypto\n\n    If the above command returns \"session_crypto_module\", the module is\nenabled in the running server.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the \"httpd.conf\" file.\n\n    If the \"SessionCryptoCipher\" is not used or \"SessionCryptoCipher\" is\nnot set to \"aes256\", this is a finding.","fix":"Configure the web server to generate session identifiers that are at least\n128 bits in length.\n\n    Ensure that \"session_crypto_module\" is enabled.\n\n    Determine the location of the \"httpd.conf\" file by running the following\ncommand:\n\n    httpd -V\n\n    Review the \"HTTPD_ROOT\" path.\n\n    Navigate to the \"HTTPD_ROOT\"/conf directory.\n\n    Edit the \"httpd.conf\" file.\n\n    SessionCryptoCipher aes256\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000224-WSR-000137","gid":"V-92687","rid":"SV-102775r1_rule","stig_id":"AS24-U1-000510","fix_id":"F-98929r1_fix","cci":["CCI-001188"],"nist":["SC-23 (3)"]},"code":"control 'V-92687' do\n  title \"The Apache web server must generate a session ID long enough that it\ncannot be guessed through brute force.\"\n  desc  \"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    Generating session IDs that are at least 128 bits (16 bytes) in length will\ncause an attacker to take a large amount of time and resources to guess,\nreducing the likelihood of an attacker guessing a session ID.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and deployed configuration to determine\nthe length of the generated session identifiers.\n\n    First ensure that \\\"session_crypto\\\" is enabled:\n\n    httpd -M |grep session_crypto\n\n    If the above command returns \\\"session_crypto_module\\\", the module is\nenabled in the running server.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review the \\\"httpd.conf\\\" file.\n\n    If the \\\"SessionCryptoCipher\\\" is not used or \\\"SessionCryptoCipher\\\" is\nnot set to \\\"aes256\\\", this is a finding.\n  \"\n  desc 'fix', \"\n    Configure the web server to generate session identifiers that are at least\n128 bits in length.\n\n    Ensure that \\\"session_crypto_module\\\" is enabled.\n\n    Determine the location of the \\\"httpd.conf\\\" file by running the following\ncommand:\n\n    httpd -V\n\n    Review the \\\"HTTPD_ROOT\\\" path.\n\n    Navigate to the \\\"HTTPD_ROOT\\\"/conf directory.\n\n    Edit the \\\"httpd.conf\\\" file.\n\n    SessionCryptoCipher aes256\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000224-WSR-000137'\n  tag gid: 'V-92687'\n  tag rid: 'SV-102775r1_rule'\n  tag stig_id: 'AS24-U1-000510'\n  tag fix_id: 'F-98929r1_fix'\n  tag cci: ['CCI-001188']\n  tag nist: ['SC-23 (3)']\n\n  config_path = input('config_path')\n  session_crypto = command('httpd -M | grep session_crypto').stdout\n\n  describe session_crypto do\n    it { should include 'session_crypto_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SessionCryptoCipher') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCryptoCipher.nil?\n    apache_conf(config_path).SessionCryptoCipher.each do |value|\n      describe 'SessionCryptoCipher value should be set to aes256' do\n        subject { value }\n        it { should cmp 'aes256' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92687.rb","line":1},"id":"V-92687"},{"title":"The Apache web server must generate a session ID using as much of the\ncharacter set as possible to reduce the risk of brute force.","desc":"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user-authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    By generating session IDs that contain as much of the character set as\npossible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder\nto guess.","descriptions":{"default":"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user-authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    By generating session IDs that contain as much of the character set as\npossible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder\nto guess.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify the \"unique_id_module\" is loaded:\n\n    run httpd -M | grep unique_id\n    If no unique_id is returned, open finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Load the \"unique_id_module\".\n\n    Example: LoadModule unique_id_module modules/mod_unique_id.so\n\n    Restart Apache: apachectl restart"},"impact":0.7,"refs":[],"tags":{"severity":"high","gtitle":"SRG-APP-000224-WSR-000138","satisfies":["SRG-APP-000223-WSR-000145","SRG-APP-000224-WSR-000135","SRG-APP-000224-WSR-000136","SRG-APP-000224-WSR-000138"],"gid":"V-92689","rid":"SV-102777r2_rule","stig_id":"AS24-U1-000520","fix_id":"F-98931r2_fix","cci":["CCI-001188","CCI-001664"],"nist":["SC-23 (3)","SC-23 (3)"]},"code":"control 'V-92689' do\n  title \"The Apache web server must generate a session ID using as much of the\ncharacter set as possible to reduce the risk of brute force.\"\n  desc  \"Generating a session identifier (ID) that is not easily guessed\nthrough brute force is essential to deter several types of session attacks. By\nknowing the session ID, an attacker can hijack a user session that has already\nbeen user-authenticated by the hosted application. The attacker does not need\nto guess user identifiers and passwords or have a secure token since the user\nsession has already been authenticated.\n\n    By generating session IDs that contain as much of the character set as\npossible, i.e., A-Z, a-z, and 0-9, the session ID becomes exponentially harder\nto guess.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify the \\\"unique_id_module\\\" is loaded:\n\n    run httpd -M | grep unique_id\n    If no unique_id is returned, open finding.\n\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Load the \\\"unique_id_module\\\".\n\n    Example: LoadModule unique_id_module modules/mod_unique_id.so\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.7\n  tag severity: 'high'\n  tag gtitle: 'SRG-APP-000224-WSR-000138'\n  tag satisfies: %w(SRG-APP-000223-WSR-000145 SRG-APP-000224-WSR-000135\nSRG-APP-000224-WSR-000136 SRG-APP-000224-WSR-000138)\n  tag gid: 'V-92689'\n  tag rid: 'SV-102777r2_rule'\n  tag stig_id: 'AS24-U1-000520'\n  tag fix_id: 'F-98931r2_fix'\n  tag cci: %w(CCI-001188 CCI-001664)\n  tag nist: ['SC-23 (3)', 'SC-23 (3)']\n\n  unique_id_module = command('httpd -M | grep unique_id').stdout\n\n  describe unique_id_module do\n    it { should include 'unique_id_module' }\n  end\nend\n","source_location":{"ref":"./controls/V-92689.rb","line":1},"id":"V-92689"},{"title":"The Apache web server must be built to fail to a known safe state if\nsystem initialization fails, shutdown fails, or aborts fail.","desc":"Determining a safe state for failure and weighing that against a\npotential denial of service for users depends on what type of application the\nweb server is hosting. For an application presenting publicly available\ninformation that is not critical, a safe state for failure might be to shut\ndown for any type of failure, but for an application that presents critical and\ntimely information, a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\nconfiguring the web server according to what actions to take for each failure\ncondition will provide a known fail safe state for the web server.","descriptions":{"default":"Determining a safe state for failure and weighing that against a\npotential denial of service for users depends on what type of application the\nweb server is hosting. For an application presenting publicly available\ninformation that is not critical, a safe state for failure might be to shut\ndown for any type of failure, but for an application that presents critical and\ntimely information, a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\nconfiguring the web server according to what actions to take for each failure\ncondition will provide a known fail safe state for the web server.","rationale":"","check":"Interview the System Administrator for the Apache 2.4 web server.\n\n    Ask for documentation on the disaster recovery methods tested and planned\nfor the Apache 2.4 web server in the event of the necessity for rollback.\n\n    If documentation for a disaster recovery has not been established, this is\na finding.","fix":"Prepare documentation for disaster recovery methods for the Apache 2.4 web\nserver in the event of the necessity for rollback.\n\n    Document and test the disaster recovery methods designed."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000225-WSR-000140","satisfies":["SRG-APP-000225-WSR-000140","SRG-APP-000225-WSR-000074"],"gid":"V-92695","rid":"SV-102783r1_rule","stig_id":"AS24-U1-000550","fix_id":"F-98937r1_fix","cci":["CCI-001190"],"nist":["SC-24"]},"code":"control 'V-92695' do\n  title \"The Apache web server must be built to fail to a known safe state if\nsystem initialization fails, shutdown fails, or aborts fail.\"\n  desc  \"Determining a safe state for failure and weighing that against a\npotential denial of service for users depends on what type of application the\nweb server is hosting. For an application presenting publicly available\ninformation that is not critical, a safe state for failure might be to shut\ndown for any type of failure, but for an application that presents critical and\ntimely information, a shutdown might not be the best state for all failures.\n\n    Performing a proper risk analysis of the hosted applications and\nconfiguring the web server according to what actions to take for each failure\ncondition will provide a known fail safe state for the web server.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the System Administrator for the Apache 2.4 web server.\n\n    Ask for documentation on the disaster recovery methods tested and planned\nfor the Apache 2.4 web server in the event of the necessity for rollback.\n\n    If documentation for a disaster recovery has not been established, this is\na finding.\n  \"\n  desc 'fix', \"\n    Prepare documentation for disaster recovery methods for the Apache 2.4 web\nserver in the event of the necessity for rollback.\n\n    Document and test the disaster recovery methods designed.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000225-WSR-000140'\n  tag satisfies: %w(SRG-APP-000225-WSR-000140 SRG-APP-000225-WSR-000074)\n  tag gid: 'V-92695'\n  tag rid: 'SV-102783r1_rule'\n  tag stig_id: 'AS24-U1-000550'\n  tag fix_id: 'F-98937r1_fix'\n  tag cci: ['CCI-001190']\n  tag nist: ['SC-24']\n\n  describe 'Review documentation for a disaster recovery procedures' do\n    skip \"Interview the System Administrator for the Apache 2.4 web server. Ask for documentation\n      on the disaster recovery methods tested and planned for the Apache 2.4 web server in the event of the necessity for rollback.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92695.rb","line":1},"id":"V-92695"},{"title":"The Apache web server must be tuned to handle the operational\nrequirements of the hosted application.","desc":"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.","descriptions":{"default":"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify that the \"Timeout\" directive is specified to have a value of\n\"10\" seconds or less.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Timeout\"\n\n    If the \"Timeout\" directive is not configured or is set for more than\n\"10\" seconds, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or modify the \"Timeout\" directive to have a value of \"10\" seconds\nor less:\n\n    \"Timeout 10\""},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000246-WSR-000149","satisfies":["SRG-APP-000246-WSR-000149","SRG-APP-000435-WSR-000148"],"gid":"V-92697","rid":"SV-102785r1_rule","stig_id":"AS24-U1-000590","fix_id":"F-98939r1_fix","cci":["CCI-001094","CCI-002385"],"nist":["SC-5 (1)","SC-5"]},"code":"control 'V-92697' do\n  title \"The Apache web server must be tuned to handle the operational\nrequirements of the hosted application.\"\n  desc  \"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify that the \\\"Timeout\\\" directive is specified to have a value of\n\\\"10\\\" seconds or less.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Timeout\\\"\n\n    If the \\\"Timeout\\\" directive is not configured or is set for more than\n\\\"10\\\" seconds, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or modify the \\\"Timeout\\\" directive to have a value of \\\"10\\\" seconds\nor less:\n\n    \\\"Timeout 10\\\"\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000246-WSR-000149'\n  tag satisfies: %w(SRG-APP-000246-WSR-000149 SRG-APP-000435-WSR-000148)\n  tag gid: 'V-92697'\n  tag rid: 'SV-102785r1_rule'\n  tag stig_id: 'AS24-U1-000590'\n  tag fix_id: 'F-98939r1_fix'\n  tag cci: %w(CCI-001094 CCI-002385)\n  tag nist: ['SC-5 (1)', 'SC-5']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('Timeout') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Timeout.nil?\n    apache_conf(config_path).Timeout.each do |value|\n      describe 'Timeout value definition' do\n        subject { value }\n        it { should cmp <= 10 }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92697.rb","line":1},"id":"V-92697"},{"title":"Warning and error messages displayed to clients must be modified to\nminimize the identity of the Apache web server, patches, loaded modules, and\ndirectory paths.","desc":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users, displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.","descriptions":{"default":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users, displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If the \"ErrorDocument\" directive is not being used for custom error pages\nfor \"4xx\" or \"5xx\" HTTP status codes, this is a finding.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"ErrorDocument\"","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Use the \"ErrorDocument\" directive to enable custom error pages for 4xx or\n5xx HTTP status codes.\n\n    ErrorDocument 500 \"Sorry, our script crashed. Oh dear\"\n    ErrorDocument 500 /cgi-bin/crash-recover\n    ErrorDocument 500 http://error.example.com/server_error.html\n    ErrorDocument 404 /errors/not_found.html\n    ErrorDocument 401 /subscription/how_to_subscribe.html\n\n    The syntax of the ErrorDocument directive is:\n\n    ErrorDocument <3-digit-code> <action>\n\n    Additional information:\n\n    https://httpd.apache.org/docs/2.4/custom-error.html"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-WSR-000159","gid":"V-92699","rid":"SV-102787r1_rule","stig_id":"AS24-U1-000620","fix_id":"F-98941r1_fix","cci":["CCI-001312"],"nist":["SI-11 a"]},"code":"control 'V-92699' do\n  title \"Warning and error messages displayed to clients must be modified to\nminimize the identity of the Apache web server, patches, loaded modules, and\ndirectory paths.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server,\nbackend systems being accessed, and plug-ins or modules being used.\n\n    Web servers will often display error messages to client users, displaying\nenough information to aid in the debugging of the error. The information given\nback in error messages may display the web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    If the \\\"ErrorDocument\\\" directive is not being used for custom error pages\nfor \\\"4xx\\\" or \\\"5xx\\\" HTTP status codes, this is a finding.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"ErrorDocument\\\"\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Use the \\\"ErrorDocument\\\" directive to enable custom error pages for 4xx or\n5xx HTTP status codes.\n\n    ErrorDocument 500 \\\"Sorry, our script crashed. Oh dear\\\"\n    ErrorDocument 500 /cgi-bin/crash-recover\n    ErrorDocument 500 http://error.example.com/server_error.html\n    ErrorDocument 404 /errors/not_found.html\n    ErrorDocument 401 /subscription/how_to_subscribe.html\n\n    The syntax of the ErrorDocument directive is:\n\n    ErrorDocument <3-digit-code> <action>\n\n    Additional information:\n\n    https://httpd.apache.org/docs/2.4/custom-error.html\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000266-WSR-000159'\n  tag gid: 'V-92699'\n  tag rid: 'SV-102787r1_rule'\n  tag stig_id: 'AS24-U1-000620'\n  tag fix_id: 'F-98941r1_fix'\n  tag cci: ['CCI-001312']\n  tag nist: ['SI-11 a']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('ErrorDocument') { should_not be_empty }\n    its('ErrorDocument.to_s') { should match /4[0-9][0-9]/ }\n    its('ErrorDocument.to_s') { should match /5[0-9][0-9]/ }\n  end\nend\n","source_location":{"ref":"./controls/V-92699.rb","line":1},"id":"V-92699"},{"title":"Debugging and trace information used to diagnose the Apache web server\nmust be disabled.","desc":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used.\n\n    When debugging or trace information is enabled in a production web server,\ninformation about the web server, such as web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage may be\ndisplayed. Since this information may be placed in logs and general messages\nduring normal operation of the web server, an attacker does not need to cause\nan error condition to gain this information.","descriptions":{"default":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used.\n\n    When debugging or trace information is enabled in a production web server,\ninformation about the web server, such as web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage may be\ndisplayed. Since this information may be placed in logs and general messages\nduring normal operation of the web server, an attacker does not need to cause\nan error condition to gain this information.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    For any enabled \"TraceEnable\" directives, verify they are part of the\nserver-level configuration (i.e., not nested in a \"Directory\" or \"Location\"\ndirective).\n\n    Verify that the \"TraceEnable\" directive is set to \"Off\":\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"TraceEnable\"\n\n    If the \"TraceEnable\" directive is not part of the server-level\nconfiguration and/or is not set to \"Off\", this is a finding.\n\n    If the directive does not exist in the \"conf\" file, this is a finding\nbecause the default value is \"On\".\n\n    If the \"LogLevel\" directive is not being used, this is a finding:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogLevel\"","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or set the value of \"TraceEnable\" to \"Off\".\n\n    Set the \"LogLevel\" directive to \"info\" or below."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-WSR-000160","gid":"V-92701","rid":"SV-102789r1_rule","stig_id":"AS24-U1-000630","fix_id":"F-98943r1_fix","cci":["CCI-001312"],"nist":["SI-11 a"]},"code":"control 'V-92701' do\n  title \"Debugging and trace information used to diagnose the Apache web server\nmust be disabled.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the web server\nand plug-ins or modules being used.\n\n    When debugging or trace information is enabled in a production web server,\ninformation about the web server, such as web server type, version, patches\ninstalled, plug-ins and modules installed, type of code being used by the\nhosted application, and any backends being used for data storage may be\ndisplayed. Since this information may be placed in logs and general messages\nduring normal operation of the web server, an attacker does not need to cause\nan error condition to gain this information.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    For any enabled \\\"TraceEnable\\\" directives, verify they are part of the\nserver-level configuration (i.e., not nested in a \\\"Directory\\\" or \\\"Location\\\"\ndirective).\n\n    Verify that the \\\"TraceEnable\\\" directive is set to \\\"Off\\\":\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"TraceEnable\\\"\n\n    If the \\\"TraceEnable\\\" directive is not part of the server-level\nconfiguration and/or is not set to \\\"Off\\\", this is a finding.\n\n    If the directive does not exist in the \\\"conf\\\" file, this is a finding\nbecause the default value is \\\"On\\\".\n\n    If the \\\"LogLevel\\\" directive is not being used, this is a finding:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"LogLevel\\\"\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or set the value of \\\"TraceEnable\\\" to \\\"Off\\\".\n\n    Set the \\\"LogLevel\\\" directive to \\\"info\\\" or below.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000266-WSR-000160'\n  tag gid: 'V-92701'\n  tag rid: 'SV-102789r1_rule'\n  tag stig_id: 'AS24-U1-000630'\n  tag fix_id: 'F-98943r1_fix'\n  tag cci: ['CCI-001312']\n  tag nist: ['SI-11 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('TraceEnable') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).TraceEnable.nil?\n    apache_conf(config_path).TraceEnable.each do |value|\n      describe 'TraceEnable value should be off' do\n        subject { value }\n        it { should cmp 'off' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('LogLevel') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).LogLevel.nil?\n    apache_conf(config_path).LogLevel.each do |value|\n      describe 'LogLevel value should be set' do\n        subject { value }\n        it { should_not be_nil }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92701.rb","line":1},"id":"V-92701"},{"title":"The Apache web server must set an inactive timeout for sessions.","desc":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.","descriptions":{"default":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify the \"reqtimeout_module\" is loaded:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"reqtimeout_module\"\n\n    If the \"reqtimeout_module\" is not loaded, this is a finding.\n\n    Verify the \"RequestReadTimeout\" directive is configured.\n\n    If the \"reqtimeout_module\" is loaded and the \"RequestReadTimeout\"\ndirective is not configured, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Load the \"reqtimeout_module\".\n\n    Set the \"RequestReadTimeout\" directive."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000295-WSR-000134","gid":"V-92705","rid":"SV-102793r1_rule","stig_id":"AS24-U1-000650","fix_id":"F-98947r1_fix","cci":["CCI-002361"],"nist":["AC-12"]},"code":"control 'V-92705' do\n  title 'The Apache web server must set an inactive timeout for sessions.'\n  desc  \"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify the \\\"reqtimeout_module\\\" is loaded:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"reqtimeout_module\\\"\n\n    If the \\\"reqtimeout_module\\\" is not loaded, this is a finding.\n\n    Verify the \\\"RequestReadTimeout\\\" directive is configured.\n\n    If the \\\"reqtimeout_module\\\" is loaded and the \\\"RequestReadTimeout\\\"\ndirective is not configured, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Load the \\\"reqtimeout_module\\\".\n\n    Set the \\\"RequestReadTimeout\\\" directive.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000295-WSR-000134'\n  tag gid: 'V-92705'\n  tag rid: 'SV-102793r1_rule'\n  tag stig_id: 'AS24-U1-000650'\n  tag fix_id: 'F-98947r1_fix'\n  tag cci: ['CCI-002361']\n  tag nist: ['AC-12']\n\n  config_path = input('config_path')\n\n  reqtimeout_module = command('httpd -M | grep reqtimeout_module').stdout\n\n  describe reqtimeout_module do\n    it { should include 'reqtimeout_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('RequestReadTimeout') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).RequestReadTimeout.nil?\n    apache_conf(config_path).RequestReadTimeout.each do |value|\n      describe 'RequestReadTimeout value should be set' do\n        subject { value }\n        it { should_not be_nil }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92705.rb","line":1},"id":"V-92705"},{"title":"The Apache web server must restrict inbound connections from nonsecure\nzones.","desc":"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.","descriptions":{"default":"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.","rationale":"","check":"If external controls such as host-based firewalls are used to restrict this\naccess, this check is Not Applicable.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"RequireAll\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"RequireAll\"\n\n    If \"RequireAll\" is not configured or IP ranges configured to allow are\nnot restrictive enough to prevent connections from nonsecure zones, this is a\nfinding.","fix":"Configure the \"http.conf\" file to include restrictions.\n\nExample:\n\n<RequireAll>\nRequire not ip 192.168.205\nRequire not host phishers.example.com\n</RequireAll>"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000315-WSR-000004","gid":"V-92709","rid":"SV-102797r1_rule","stig_id":"AS24-U1-000670","fix_id":"F-98951r2_fix","cci":["CCI-002314"],"nist":["AC-17 (1)"]},"code":"control 'V-92709' do\n  title \"The Apache web server must restrict inbound connections from nonsecure\nzones.\"\n  desc  \"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    If external controls such as host-based firewalls are used to restrict this\naccess, this check is Not Applicable.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"RequireAll\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"RequireAll\\\"\n\n    If \\\"RequireAll\\\" is not configured or IP ranges configured to allow are\nnot restrictive enough to prevent connections from nonsecure zones, this is a\nfinding.\n  \"\n  desc 'fix', \"\n    Configure the \\\"http.conf\\\" file to include restrictions.\n\n    Example:\n\n    <RequireAll>\n    Require not ip 192.168.205\n    Require not host phishers.example.com\n    </RequireAll>\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000315-WSR-000004'\n  tag gid: 'V-92709'\n  tag rid: 'SV-102797r1_rule'\n  tag stig_id: 'AS24-U1-000670'\n  tag fix_id: 'F-98951r2_fix'\n  tag cci: ['CCI-002314']\n  tag nist: ['AC-17 (1)']\n\n  firewall = input('host_based_firewall_used')\n  config_path = input('config_path')\n  if firewall\n    impact 0.0\n  else\n    impact 0.5\n  end\n\n  describe apache_conf(config_path) do\n    its('RequireAll') { should_not be_nil }\n  end\n\n  require_all = file(config_path).content.scan(%r{^\\s*(<RequireAll[\\s\\S]*?>[\\s\\S]*?</RequireAll>)})\n\n  unless apache_conf(config_path).RequireAll.nil?\n    describe 'If IP ranges for RequireAll directive are not restrictive enough to prevent connections from nonsecure zones, this is a finding.' do\n      skip \"The RequireAll directive is provided below. A manual check is required to verify the IP addresses. \\n #{require_all}\\n\"\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92709.rb","line":1},"id":"V-92709"},{"title":"The Apache web server must be configured to immediately disconnect or\ndisable remote access to the hosted applications.","desc":"During an attack on the Apache web server or any of the hosted\napplications, the System Administrator (SA) may need to disconnect or disable\naccess by users to stop the attack.\n\n    The Apache web server must be configured to disconnect users from a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nApache web server, or block all connections through the Apache web server\naccess list.\n\n    The Apache web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the Apache web server must be documented\nto make certain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.","descriptions":{"default":"During an attack on the Apache web server or any of the hosted\napplications, the System Administrator (SA) may need to disconnect or disable\naccess by users to stop the attack.\n\n    The Apache web server must be configured to disconnect users from a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nApache web server, or block all connections through the Apache web server\naccess list.\n\n    The Apache web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the Apache web server must be documented\nto make certain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.","rationale":"","check":"Interview the SA and Web Manager.\n\n    Ask for documentation for the Apache web server administration.\n\n    Verify there are documented procedures for shutting down an Apache website\nin the event of an attack. The procedure should, at a minimum, provide the\nfollowing steps:\n\n    Determine the respective website for the application at risk of an attack.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    In a command line, enter the following command:\n\n    \"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\"\n\n    If the web server is not capable of or cannot be configured to disconnect\nor disable remote access to the hosted applications when necessary, this is a\nfinding.","fix":"Prepare documented procedures for shutting down an Apache website in the\nevent of an attack.\n\n    The procedure should, at a minimum, provide the following steps:\n\n    In a command line, enter the following command:\n\n    \"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\""},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000316-WSR-000170","gid":"V-92711","rid":"SV-102799r1_rule","stig_id":"AS24-U1-000680","fix_id":"F-98953r1_fix","cci":["CCI-002322"],"nist":["AC-17 (9)"]},"code":"control 'V-92711' do\n  title \"The Apache web server must be configured to immediately disconnect or\ndisable remote access to the hosted applications.\"\n  desc  \"During an attack on the Apache web server or any of the hosted\napplications, the System Administrator (SA) may need to disconnect or disable\naccess by users to stop the attack.\n\n    The Apache web server must be configured to disconnect users from a hosted\napplication without compromising other hosted applications unless deemed\nnecessary to stop the attack. Methods to disconnect or disable connections are\nto stop the application service for a specified hosted application, stop the\nApache web server, or block all connections through the Apache web server\naccess list.\n\n    The Apache web server capabilities used to disconnect or disable users from\nconnecting to hosted applications and the Apache web server must be documented\nto make certain that, during an attack, the proper action is taken to conserve\nconnectivity to any other hosted application if possible and to make certain\nlog data is conserved for later forensic analysis.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the SA and Web Manager.\n\n    Ask for documentation for the Apache web server administration.\n\n    Verify there are documented procedures for shutting down an Apache website\nin the event of an attack. The procedure should, at a minimum, provide the\nfollowing steps:\n\n    Determine the respective website for the application at risk of an attack.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    In a command line, enter the following command:\n\n    \\\"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\\\"\n\n    If the web server is not capable of or cannot be configured to disconnect\nor disable remote access to the hosted applications when necessary, this is a\nfinding.\n  \"\n  desc 'fix', \"\n    Prepare documented procedures for shutting down an Apache website in the\nevent of an attack.\n\n    The procedure should, at a minimum, provide the following steps:\n\n    In a command line, enter the following command:\n\n    \\\"kill -TERM `cat <'INSTALLED PATH'>/logs/httpd.pid`\\\"\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000316-WSR-000170'\n  tag gid: 'V-92711'\n  tag rid: 'SV-102799r1_rule'\n  tag stig_id: 'AS24-U1-000680'\n  tag fix_id: 'F-98953r1_fix'\n  tag cci: ['CCI-002322']\n  tag nist: ['AC-17 (9)']\n\n  describe 'Review procedures for shutting down Server in the event of an attack' do\n    skip \"If the web server is not capable of or cannot be configured to disconnect or disable remote access to the hosted applications when necessary, this is a finding\n    Interview the SA and Web Manager.\n    Ask for documentation for the Apache web server administration.\n    Verify there are documented procedures for shutting down an Apache website in the event of an attack.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92711.rb","line":1},"id":"V-92711"},{"title":"Non-privileged accounts on the hosting system must only access Apache\nweb server security-relevant information and functions through a distinct\nadministrative account.","desc":"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.","descriptions":{"default":"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.","rationale":"","check":"Determine which tool or control file is used to control the configuration\nof the web server.\n\n    If the control of the web server is done via control files, verify who has\nupdate access to them. If tools are being used to configure the web server,\ndetermine who has access to execute the tools.\n\n    If accounts other than the System Administrator (SA), the Web Manager, or\nthe Web Manager designees have access to the web administration tool or control\nfiles, this is a finding.","fix":"Restrict access to the web administration tool to only the\nSystem Administrator, Web Manager, or the Web Manager designees."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000340-WSR-000029","gid":"V-92713","rid":"SV-102801r1_rule","stig_id":"AS24-U1-000690","fix_id":"F-98955r1_fix","cci":["CCI-002235"],"nist":["AC-6 (10)"]},"code":"control 'V-92713' do\n  title \"Non-privileged accounts on the hosting system must only access Apache\nweb server security-relevant information and functions through a distinct\nadministrative account.\"\n  desc  \"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine which tool or control file is used to control the configuration\nof the web server.\n\n    If the control of the web server is done via control files, verify who has\nupdate access to them. If tools are being used to configure the web server,\ndetermine who has access to execute the tools.\n\n    If accounts other than the System Administrator (SA), the Web Manager, or\nthe Web Manager designees have access to the web administration tool or control\nfiles, this is a finding.\n  \"\n  desc 'fix', \"Restrict access to the web administration tool to only the\nSystem Administrator, Web Manager, or the Web Manager designees.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000340-WSR-000029'\n  tag gid: 'V-92713'\n  tag rid: 'SV-102801r1_rule'\n  tag stig_id: 'AS24-U1-000690'\n  tag fix_id: 'F-98955r1_fix'\n  tag cci: ['CCI-002235']\n  tag nist: ['AC-6 (10)']\n\n  describe 'Review access to web server and tools' do\n    skip \"If accounts other than the System Administrator (SA), the Web Manager, or the Web Manager designees have access to the web administration tool or control files, this is a finding.\n    Determine which tool or control file is used to control the configuration of the web server.\n    If the control of the web server is done via control files, verify who has update access to them.\n    If tools are being used to configure the web server, determine who has access to execute the tools.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92713.rb","line":1},"id":"V-92713"},{"title":"The Apache web server must use a logging mechanism that is configured\nto allocate log record storage capacity large enough to accommodate the logging\nrequirements of the Apache web server.","desc":"To make certain that the logging mechanism used by the web server has\nsufficient storage capacity in which to write the logs, the logging mechanism\nneeds to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The System Administrator\nwill usually coordinate the allocation of physical drive space with the Web\nServer Administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.","descriptions":{"default":"To make certain that the logging mechanism used by the web server has\nsufficient storage capacity in which to write the logs, the logging mechanism\nneeds to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The System Administrator\nwill usually coordinate the allocation of physical drive space with the Web\nServer Administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.","rationale":"","check":"Work with SIEM administrator to determine log storage capacity.\n\n    If there is no setting within a SIEM to accommodate enough a large logging\ncapacity, this is a finding.","fix":"Work with the SIEM administrator to determine if the SIEM is\nconfigured to allocate log record storage capacity large enough to accommodate\nthe logging requirements of the Apache web server."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000357-WSR-000150","gid":"V-92715","rid":"SV-102803r1_rule","stig_id":"AS24-U1-000710","fix_id":"F-98957r1_fix","cci":["CCI-001849"],"nist":["AU-4"]},"code":"control 'V-92715' do\n  title \"The Apache web server must use a logging mechanism that is configured\nto allocate log record storage capacity large enough to accommodate the logging\nrequirements of the Apache web server.\"\n  desc  \"To make certain that the logging mechanism used by the web server has\nsufficient storage capacity in which to write the logs, the logging mechanism\nneeds to be able to allocate log record storage capacity.\n\n    The task of allocating log record storage capacity is usually performed\nduring initial installation of the logging mechanism. The System Administrator\nwill usually coordinate the allocation of physical drive space with the Web\nServer Administrator along with the physical location of the partition and\ndisk. Refer to NIST SP 800-92 for specific requirements on log rotation and\nstorage dependent on the impact of the web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Work with SIEM administrator to determine log storage capacity.\n\n    If there is no setting within a SIEM to accommodate enough a large logging\ncapacity, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to determine if the SIEM is\nconfigured to allocate log record storage capacity large enough to accommodate\nthe logging requirements of the Apache web server.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000357-WSR-000150'\n  tag gid: 'V-92715'\n  tag rid: 'SV-102803r1_rule'\n  tag stig_id: 'AS24-U1-000710'\n  tag fix_id: 'F-98957r1_fix'\n  tag cci: ['CCI-001849']\n  tag nist: ['AU-4']\n\n  describe 'Work with SIEM administrator to determine log storage capacity.' do\n    skip 'If there is no setting within a SIEM to accommodate enough a large logging capacity, this is a finding.'\n  end\nend\n","source_location":{"ref":"./controls/V-92715.rb","line":1},"id":"V-92715"},{"title":"The Apache web server must not impede the ability to write specified\nlog record content to an audit log server.","desc":"Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.","descriptions":{"default":"Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.","rationale":"","check":"Work with SIEM administrator to determine audit configurations.\n\n    If there is a setting within the SIEM that could impede the ability to\nwrite specific log record content, this is a finding.","fix":"Work with the SIEM administrator to  allow the ability to write\nspecified log record content to an audit log server."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000358-WSR-000063","gid":"V-92717","rid":"SV-102805r1_rule","stig_id":"AS24-U1-000720","fix_id":"F-98959r1_fix","cci":["CCI-001851"],"nist":["AU-4 (1)"]},"code":"control 'V-92717' do\n  title \"The Apache web server must not impede the ability to write specified\nlog record content to an audit log server.\"\n  desc  \"Writing events to a centralized management audit system offers many\nbenefits to the enterprise over having dispersed logs. Centralized management\nof audit records and logs provides for efficiency in maintenance and management\nof records, enterprise analysis of events, and backup and archiving of event\nrecords enterprise-wide. The web server and related components are required to\nbe capable of writing logs to centralized audit log servers.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Work with SIEM administrator to determine audit configurations.\n\n    If there is a setting within the SIEM that could impede the ability to\nwrite specific log record content, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to  allow the ability to write\nspecified log record content to an audit log server.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000358-WSR-000063'\n  tag gid: 'V-92717'\n  tag rid: 'SV-102805r1_rule'\n  tag stig_id: 'AS24-U1-000720'\n  tag fix_id: 'F-98959r1_fix'\n  tag cci: ['CCI-001851']\n  tag nist: ['AU-4 (1)']\n\n  describe 'Work with SIEM administrator to determine audit configurations' do\n    skip 'If there is a setting within the SIEM that could impede the ability to write specific log record content, this is a finding.'\n  end\nend\n","source_location":{"ref":"./controls/V-92717.rb","line":1},"id":"V-92717"},{"title":"The Apache web server must be configured to integrate with an\norganizations security infrastructure.","desc":"A web server will typically use logging mechanisms for maintaining a\nhistorical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.","descriptions":{"default":"A web server will typically use logging mechanisms for maintaining a\nhistorical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.","rationale":"","check":"Work with the SIEM administrator to determine current security\nintegrations.\n\n    If the SIEM is not integrated with security, this is a finding.","fix":"Work with the SIEM administrator to integrate with an\norganizations security infrastructure."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000358-WSR-000163","gid":"V-92719","rid":"SV-102807r1_rule","stig_id":"AS24-U1-000730","fix_id":"F-98961r1_fix","cci":["CCI-001851"],"nist":["AU-4 (1)"]},"code":"control 'V-92719' do\n  title \"The Apache web server must be configured to integrate with an\norganizations security infrastructure.\"\n  desc  \"A web server will typically use logging mechanisms for maintaining a\nhistorical log of activity that occurs within a hosted application. This\ninformation can then be used for diagnostic purposes, forensics purposes, or\nother purposes relevant to ensuring the availability and integrity of the\nhosted application.\n\n    While it is important to log events identified as being critical and\nrelevant to security, it is equally important to notify the appropriate\npersonnel in a timely manner so they are able to respond to events as they\noccur.\n\n    Manual review of the web server logs may not occur in a timely manner, and\neach event logged is open to interpretation by a reviewer. By integrating the\nweb server into an overall or organization-wide log review, a larger picture of\nevents can be viewed, and analysis can be done in a timely and reliable manner.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Work with the SIEM administrator to determine current security\nintegrations.\n\n    If the SIEM is not integrated with security, this is a finding.\n  \"\n  desc 'fix', \"Work with the SIEM administrator to integrate with an\norganizations security infrastructure.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000358-WSR-000163'\n  tag gid: 'V-92719'\n  tag rid: 'SV-102807r1_rule'\n  tag stig_id: 'AS24-U1-000730'\n  tag fix_id: 'F-98961r1_fix'\n  tag cci: ['CCI-001851']\n  tag nist: ['AU-4 (1)']\n\n  describe 'Work with the SIEM administrator to determine current security integrations' do\n    skip 'If the SIEM is not integrated with security, this is a finding.'\n  end\nend\n","source_location":{"ref":"./controls/V-92719.rb","line":1},"id":"V-92719"},{"title":"The Apache web server must generate log records that can be mapped to\nCoordinated Universal Time (UTC) or Greenwich Mean Time (GMT) which are stamped\nat a minimum granularity of one second.","desc":"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the Apache web server include date and time. Time\nis commonly expressed in UTC, a modern continuation of GMT, or local time with\nan offset from UTC.\n\n    Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the Apache web server include date and time and\nmust be to a granularity of one second.","descriptions":{"default":"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the Apache web server include date and time. Time\nis commonly expressed in UTC, a modern continuation of GMT, or local time with\nan offset from UTC.\n\n    Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the Apache web server include date and time and\nmust be to a granularity of one second.","rationale":"","check":"Review the web server documentation and configuration to determine the time\nstamp format for log data.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"log_config_module\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\n    Verify the \"LogFormat\" directive exists.\n\n    If the \"LogFormat\" directive does not exist, this is a finding.\n\n    Verify the \"LogFormat\" line contains the \"%t\" flag.\n\n    If \"%t\" flag is not present, time is not mapped to UTC or GMT time, this\nis a finding.","fix":"In a command line, run \"httpd -M\" to view a list of installed modules.\n\n    If \"log_config_module\" is not listed, enable this module.\n\n    Review the \"httpd.conf\" file.\n\n    Determine if the \"LogFormat\" directive exists. If it does not exist,\nensure the \"LogFormat\" line contains the %t flag."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000374-WSR-000172","satisfies":["SRG-APP-000374-WSR-000172","SRG-APP-000375-WSR-000171"],"gid":"V-92723","rid":"SV-102811r1_rule","stig_id":"AS24-U1-000750","fix_id":"F-98965r1_fix","cci":["CCI-001889","CCI-001890"],"nist":["AU-8 b","AU-8 b"]},"code":"control 'V-92723' do\n  title \"The Apache web server must generate log records that can be mapped to\nCoordinated Universal Time (UTC) or Greenwich Mean Time (GMT) which are stamped\nat a minimum granularity of one second.\"\n  desc  \"If time stamps are not consistently applied and there is no common\ntime reference, it is difficult to perform forensic analysis across multiple\ndevices and log records.\n\n    Time stamps generated by the Apache web server include date and time. Time\nis commonly expressed in UTC, a modern continuation of GMT, or local time with\nan offset from UTC.\n\n    Without sufficient granularity of time stamps, it is not possible to\nadequately determine the chronological order of records.\n\n    Time stamps generated by the Apache web server include date and time and\nmust be to a granularity of one second.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and configuration to determine the time\nstamp format for log data.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"log_config_module\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"LogFormat\\\"\n\n    Verify the \\\"LogFormat\\\" directive exists.\n\n    If the \\\"LogFormat\\\" directive does not exist, this is a finding.\n\n    Verify the \\\"LogFormat\\\" line contains the \\\"%t\\\" flag.\n\n    If \\\"%t\\\" flag is not present, time is not mapped to UTC or GMT time, this\nis a finding.\n  \"\n  desc 'fix', \"\n    In a command line, run \\\"httpd -M\\\" to view a list of installed modules.\n\n    If \\\"log_config_module\\\" is not listed, enable this module.\n\n    Review the \\\"httpd.conf\\\" file.\n\n    Determine if the \\\"LogFormat\\\" directive exists. If it does not exist,\nensure the \\\"LogFormat\\\" line contains the %t flag.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000374-WSR-000172'\n  tag satisfies: %w(SRG-APP-000374-WSR-000172 SRG-APP-000375-WSR-000171)\n  tag gid: 'V-92723'\n  tag rid: 'SV-102811r1_rule'\n  tag stig_id: 'AS24-U1-000750'\n  tag fix_id: 'F-98965r1_fix'\n  tag cci: %w(CCI-001889 CCI-001890)\n  tag nist: ['AU-8 b', 'AU-8 b']\n\n  config_path = input('config_path')\n  describe file(config_path) do\n    its('content') { should match '^[\\\\s]*LogFormat[\\\\s]+.*(?=.*\\%t).*$' }\n  end\n\n  log_config_module = command('httpd -M | grep log_config_module').stdout\n\n  describe log_config_module do\n    it { should include 'log_config_module' }\n  end\nend\n","source_location":{"ref":"./controls/V-92723.rb","line":1},"id":"V-92723"},{"title":"The Apache web server must prohibit or restrict the use of nonsecure\nor unnecessary ports, protocols, modules, and/or services.","desc":"Web servers provide numerous processes, features, and functionalities\nthat use TCP/IP ports. Some of these processes may be deemed unnecessary or too\nunsecure to run on a production system.\n\n    The Apache web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the Ports, Protocols, and\nServices Management (PPSM) Category Assurance List (CAL) and vulnerability\nassessments.","descriptions":{"default":"Web servers provide numerous processes, features, and functionalities\nthat use TCP/IP ports. Some of these processes may be deemed unnecessary or too\nunsecure to run on a production system.\n\n    The Apache web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the Ports, Protocols, and\nServices Management (PPSM) Category Assurance List (CAL) and vulnerability\nassessments.","rationale":"","check":"Review the website to determine if HTTP and HTTPs are used in\naccordance with well known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD PPSM. Any variation in PPS will\nbe documented, registered, and approved by the PPSM. If not, this is a finding.","fix":"Ensure the website enforces the use of IANA well-known ports\nfor HTTP and HTTPS."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000383-WSR-000175","gid":"V-92727","rid":"SV-102815r1_rule","stig_id":"AS24-U1-000780","fix_id":"F-98971r1_fix","cci":["CCI-001762"],"nist":["CM-7 (1) (b)"]},"code":"control 'V-92727' do\n  title \"The Apache web server must prohibit or restrict the use of nonsecure\nor unnecessary ports, protocols, modules, and/or services.\"\n  desc  \"Web servers provide numerous processes, features, and functionalities\nthat use TCP/IP ports. Some of these processes may be deemed unnecessary or too\nunsecure to run on a production system.\n\n    The Apache web server must provide the capability to disable or deactivate\nnetwork-related services that are deemed to be non-essential to the server\nmission, are too unsecure, or are prohibited by the Ports, Protocols, and\nServices Management (PPSM) Category Assurance List (CAL) and vulnerability\nassessments.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"Review the website to determine if HTTP and HTTPs are used in\naccordance with well known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD PPSM. Any variation in PPS will\nbe documented, registered, and approved by the PPSM. If not, this is a finding.\"\n  desc  'fix', \"Ensure the website enforces the use of IANA well-known ports\nfor HTTP and HTTPS.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000383-WSR-000175'\n  tag gid: 'V-92727'\n  tag rid: 'SV-102815r1_rule'\n  tag stig_id: 'AS24-U1-000780'\n  tag fix_id: 'F-98971r1_fix'\n  tag cci: ['CCI-001762']\n  tag nist: ['CM-7 (1) (b)']\n\n  describe 'Review the website to determine if HTTP and HTTPs are used in accordance with well known ports (e.g., 80 and 443) or those ports and services as registered and approved for use by the DoD PPSM. Any variation in PPS will be documented, registered, and approved by the PPSM' do\n    skip 'The Apache web server must prohibit or restrict the use of nonsecure or unnecessary ports, protocols, modules, and/or services. If not, this is a finding.'\n  end\nend\n","source_location":{"ref":"./controls/V-92727.rb","line":1},"id":"V-92727"},{"title":"The Apache web server must be protected from being stopped by a\nnon-privileged user.","desc":"An attacker has at least two reasons to stop a web server. The first\nis to cause a denial of service (DoS), and the second is to put in place\nchanges the attacker made to the web server configuration.\n\n    To prohibit an attacker from stopping the Apache web server, the process ID\n(pid) of the web server and the utilities used to start/stop it must be\nprotected from access by non-privileged users. By knowing the \"pid\" and\nhaving access to the Apache web server utilities, a non-privileged user has a\ngreater capability of stopping the server, whether intentionally or\nunintentionally.","descriptions":{"default":"An attacker has at least two reasons to stop a web server. The first\nis to cause a denial of service (DoS), and the second is to put in place\nchanges the attacker made to the web server configuration.\n\n    To prohibit an attacker from stopping the Apache web server, the process ID\n(pid) of the web server and the utilities used to start/stop it must be\nprotected from access by non-privileged users. By knowing the \"pid\" and\nhaving access to the Apache web server utilities, a non-privileged user has a\ngreater capability of stopping the server, whether intentionally or\nunintentionally.","rationale":"","check":"Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \"httpd.pid\" file is located by running the following\ncommand:\n\n    find / -name \"httpd.pid\"\n     \n    This file is automatically generated upon service start. Verify the file\nowner/group is of an administrative  service account:\n     \n    ls -lah <'httpd.pid location'>/httpd.pid\n     \n    If the file owner/group is not an administrative service account, this is a\nfinding.\n     \n    Verify the service utilities used to manage the Apache service owner/group\nis of an administrative service account.\n     \n    ls -lah /usr/sbin/service\n    ls -lah /usr/sbin/apachectl\n     \n    If the service utilities owner/group is not an administrative service\naccount, this is a finding.\n     \n    Determine whether the process ID and the utilities are protected from\nnon-privileged users.\n     \n    If the process ID and the utilities are not protected from non-privileged\nusers, this is a finding.","fix":"Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \"httpd.pid\" file is located by running the following\ncommand:\n\n    find / -name \"httpd.pid\"\n\n    Run the following commands:\n     \n    # cd <'httpd.pid location'>/\n    # chown <'service account'> httpd.pid \n    # chmod 644 httpd.pid \n    # cd /usr/sbin \n    # chown <'service account'> service apachectl \n    # chmod 755 service apachectl"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000435-WSR-000147","gid":"V-92731","rid":"SV-102819r1_rule","stig_id":"AS24-U1-000820","fix_id":"F-98975r1_fix","cci":["CCI-002385"],"nist":["SC-5"]},"code":"control 'V-92731' do\n  title \"The Apache web server must be protected from being stopped by a\nnon-privileged user.\"\n  desc  \"An attacker has at least two reasons to stop a web server. The first\nis to cause a denial of service (DoS), and the second is to put in place\nchanges the attacker made to the web server configuration.\n\n    To prohibit an attacker from stopping the Apache web server, the process ID\n(pid) of the web server and the utilities used to start/stop it must be\nprotected from access by non-privileged users. By knowing the \\\"pid\\\" and\nhaving access to the Apache web server utilities, a non-privileged user has a\ngreater capability of stopping the server, whether intentionally or\nunintentionally.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \\\"httpd.pid\\\" file is located by running the following\ncommand:\n\n    find / -name \\\"httpd.pid\\\"\n     \n    This file is automatically generated upon service start. Verify the file\nowner/group is of an administrative  service account:\n     \n    ls -lah <'httpd.pid location'>/httpd.pid\n     \n    If the file owner/group is not an administrative service account, this is a\nfinding.\n     \n    Verify the service utilities used to manage the Apache service owner/group\nis of an administrative service account.\n     \n    ls -lah /usr/sbin/service\n    ls -lah /usr/sbin/apachectl\n     \n    If the service utilities owner/group is not an administrative service\naccount, this is a finding.\n     \n    Determine whether the process ID and the utilities are protected from\nnon-privileged users.\n     \n    If the process ID and the utilities are not protected from non-privileged\nusers, this is a finding.\n  \"\n  desc 'fix', \"\n    Review the web server documentation and deployed configuration to determine\nwhere the process ID is stored and which utilities are used to start/stop the\nweb server.\n\n    Determine where the \\\"httpd.pid\\\" file is located by running the following\ncommand:\n\n    find / -name \\\"httpd.pid\\\"\n\n    Run the following commands:\n     \n    # cd <'httpd.pid location'>/\n    # chown <'service account'> httpd.pid \n    # chmod 644 httpd.pid \n    # cd /usr/sbin \n    # chown <'service account'> service apachectl \n    # chmod 755 service apachectl\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000435-WSR-000147'\n  tag gid: 'V-92731'\n  tag rid: 'SV-102819r1_rule'\n  tag stig_id: 'AS24-U1-000820'\n  tag fix_id: 'F-98975r1_fix'\n  tag cci: ['CCI-002385']\n  tag nist: ['SC-5']\n\n  pid_path = command('find / -name httpd.pid').stdout.strip\n  service_path = command('find / -name service').stdout.strip\n  apachectl_path = command('find / -name apachectl').stdout.strip\n\n  if file(pid_path).exist?\n    describe file(pid_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end\n\n  if file(service_path).exist?\n    describe file(service_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end\n\n  if file(apachectl_path).exist?\n    describe file(apachectl_path) do\n      its('owner') { should be_in input('server_admins') }\n      its('group') { should be_in input('server_admin_groups') }\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92731.rb","line":1},"id":"V-92731"},{"title":"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.","desc":"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.","descriptions":{"default":"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.","rationale":"","check":"In a command line, run \"httpd -M | grep -i session_cookie_module\".\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"Session\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Session\"\n\n    If the \"Session\" and \"SessionCookieName\" directives are not present,\nthis is a finding.\n\n    If \"Session\" is not set to \"on\" and \"SessionCookieName\" does not\ncontain \"httpOnly\" and \"secure\", this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set \"Session\" to \"on\".\n\n    Ensure the \"SessionCookieName\" directive includes \"httpOnly\" and\n\"secure\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000439-WSR-000154","satisfies":["SRG-APP-000439-WSR-000154","SRG-APP-000439-WSR-000155"],"gid":"V-92741","rid":"SV-102829r1_rule","stig_id":"AS24-U1-000870","fix_id":"F-98985r1_fix","cci":["CCI-002418"],"nist":["SC-8"]},"code":"control 'V-92741' do\n  title \"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.\"\n  desc  \"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i session_cookie_module\\\".\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"Session\\\" in the \\\"httpd.conf\\\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Session\\\"\n\n    If the \\\"Session\\\" and \\\"SessionCookieName\\\" directives are not present,\nthis is a finding.\n\n    If \\\"Session\\\" is not set to \\\"on\\\" and \\\"SessionCookieName\\\" does not\ncontain \\\"httpOnly\\\" and \\\"secure\\\", this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set \\\"Session\\\" to \\\"on\\\".\n\n    Ensure the \\\"SessionCookieName\\\" directive includes \\\"httpOnly\\\" and\n\\\"secure\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000439-WSR-000154'\n  tag satisfies: %w(SRG-APP-000439-WSR-000154 SRG-APP-000439-WSR-000155)\n  tag gid: 'V-92741'\n  tag rid: 'SV-102829r1_rule'\n  tag stig_id: 'AS24-U1-000870'\n  tag fix_id: 'F-98985r1_fix'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('Session') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Session.nil?\n    apache_conf(config_path).Session.each do |value|\n      describe 'Session value should be set to on' do\n        subject { value }\n        it { should cmp 'on' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92741.rb","line":1},"id":"V-92741"},{"title":"The Apache web server must remove all export ciphers to protect the\nconfidentiality and integrity of transmitted information.","desc":"During the initial setup of a Transport Layer Security (TLS)\nconnection to the Apache web server, the client sends a list of supported\ncipher suites in order of preference. The Apache web server will reply with the\ncipher suite it will use for communication from the client list. If an attacker\ncan intercept the submission of cipher suites to the Apache web server and\nplace, as the preferred cipher suite, a weak export suite, the encryption used\nfor the session becomes easy for the attacker to break, often within minutes to\nhours.","descriptions":{"default":"During the initial setup of a Transport Layer Security (TLS)\nconnection to the Apache web server, the client sends a list of supported\ncipher suites in order of preference. The Apache web server will reply with the\ncipher suite it will use for communication from the client list. If an attacker\ncan intercept the submission of cipher suites to the Apache web server and\nplace, as the preferred cipher suite, a weak export suite, the encryption used\nfor the session becomes easy for the attacker to break, often within minutes to\nhours.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"SSLCACertificateFile\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLCACertificateFile\"\n\n    Review the path of the \"SSLCACertificateFile\" directive.\n\n    Review the contents of <'path of cert'>\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLProtocol\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000439-WSR-000188","gid":"V-92745","rid":"SV-102833r1_rule","stig_id":"AS24-U1-000900","fix_id":"F-98989r1_fix","cci":["CCI-002418"],"nist":["SC-8"]},"code":"control 'V-92745' do\n  title \"The Apache web server must remove all export ciphers to protect the\nconfidentiality and integrity of transmitted information.\"\n  desc  \"During the initial setup of a Transport Layer Security (TLS)\nconnection to the Apache web server, the client sends a list of supported\ncipher suites in order of preference. The Apache web server will reply with the\ncipher suite it will use for communication from the client list. If an attacker\ncan intercept the submission of cipher suites to the Apache web server and\nplace, as the preferred cipher suite, a weak export suite, the encryption used\nfor the session becomes easy for the attacker to break, often within minutes to\nhours.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"SSLCACertificateFile\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SSLCACertificateFile\\\"\n\n    Review the path of the \\\"SSLCACertificateFile\\\" directive.\n\n    Review the contents of <'path of cert'>\\\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Ensure the \\\"SSLProtocol\\\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000439-WSR-000188'\n  tag gid: 'V-92745'\n  tag rid: 'SV-102833r1_rule'\n  tag stig_id: 'AS24-U1-000900'\n  tag fix_id: 'F-98989r1_fix'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('SSLCACertificateFile') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCACertificateFile.nil?\n    ca_path = File.dirname(apache_conf(config_path).SSLCACertificateFile[0])\n    ca_bundle = File.join(ca_path, 'ca-bundle.crt')\n    describe 'Examine CA Bundle' do\n      skip \"Check #{ca_bundle} to determine if the trusted CAs are DoD approved\"\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92745.rb","line":1},"id":"V-92745"},{"title":"The Apache web server must install security-relevant software updates\nwithin the configured time period directed by an authoritative source (e.g.,\nIAVM, CTOs, DTMs, and STIGs).","desc":"Security flaws with software applications are discovered daily.\nVendors are constantly updating and patching their products to address newly\ndiscovered security vulnerabilities. Organizations (including any contractor to\nthe organization) are required to promptly install security-relevant software\nupdates (e.g., patches, service packs, and hot fixes). Flaws discovered during\nsecurity assessments, continuous monitoring, incident response activities, or\ninformation system error handling must also be addressed expeditiously.\n\n    The Apache web server will be configured to check for and install\nsecurity-relevant software updates from an authoritative source within an\nidentified time period from the availability of the update. By default, this\ntime period will be every 24 hours.","descriptions":{"default":"Security flaws with software applications are discovered daily.\nVendors are constantly updating and patching their products to address newly\ndiscovered security vulnerabilities. Organizations (including any contractor to\nthe organization) are required to promptly install security-relevant software\nupdates (e.g., patches, service packs, and hot fixes). Flaws discovered during\nsecurity assessments, continuous monitoring, incident response activities, or\ninformation system error handling must also be addressed expeditiously.\n\n    The Apache web server will be configured to check for and install\nsecurity-relevant software updates from an authoritative source within an\nidentified time period from the availability of the update. By default, this\ntime period will be every 24 hours.","rationale":"","check":"Determine the most recent patch level of the Apache Web Server 2.4\nsoftware, as posted on the Apache HTTP Server Project website.\n\n    In a command line, type \"httpd -v\".\n\n    If the version is more than one version behind the most recent patch level,\nthis is a finding.","fix":"Install the current version of the web server software and\nmaintain appropriate service packs and patches."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000456-WSR-000187","gid":"V-92749","rid":"SV-102837r1_rule","stig_id":"AS24-U1-000930","fix_id":"F-98993r1_fix","cci":["CCI-002605"],"nist":["SI-2 c"]},"code":"control 'V-92749' do\n  title \"The Apache web server must install security-relevant software updates\nwithin the configured time period directed by an authoritative source (e.g.,\nIAVM, CTOs, DTMs, and STIGs).\"\n  desc  \"Security flaws with software applications are discovered daily.\nVendors are constantly updating and patching their products to address newly\ndiscovered security vulnerabilities. Organizations (including any contractor to\nthe organization) are required to promptly install security-relevant software\nupdates (e.g., patches, service packs, and hot fixes). Flaws discovered during\nsecurity assessments, continuous monitoring, incident response activities, or\ninformation system error handling must also be addressed expeditiously.\n\n    The Apache web server will be configured to check for and install\nsecurity-relevant software updates from an authoritative source within an\nidentified time period from the availability of the update. By default, this\ntime period will be every 24 hours.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the most recent patch level of the Apache Web Server 2.4\nsoftware, as posted on the Apache HTTP Server Project website.\n\n    In a command line, type \\\"httpd -v\\\".\n\n    If the version is more than one version behind the most recent patch level,\nthis is a finding.\n  \"\n  desc 'fix', \"Install the current version of the web server software and\nmaintain appropriate service packs and patches.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000456-WSR-000187'\n  tag gid: 'V-92749'\n  tag rid: 'SV-102837r1_rule'\n  tag stig_id: 'AS24-U1-000930'\n  tag fix_id: 'F-98993r1_fix'\n  tag cci: ['CCI-002605']\n  tag nist: ['SI-2 c']\n\n  httpd_version = command('httpd -v').stdout.scan(%r{Server version: Apache/(\\S+)\\s\\(\\w+\\)}).flatten\n\n  describe 'Apache Web Server installed must be updated' do\n    subject { httpd_version }\n    it { should cmp >= input('apache_version') }\n  end\nend\n","source_location":{"ref":"./controls/V-92749.rb","line":1},"id":"V-92749"},{"title":"The account used to run the Apache web server must not have a valid\nlogin shell and password defined.","desc":"During installation of the Apache web server software, accounts are\ncreated for the Apache web server to operate properly. The accounts installed\ncan have either no password installed or a default password, which will be\nknown and documented by the vendor and the user community.\n\n    The first things an attacker will try when presented with a logon screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the logon even easier. Once\nthe Apache web server is installed, the passwords for any created accounts\nshould be changed and documented. The new passwords must meet the requirements\nfor all passwords, i.e., uppercase/lowercase characters, numbers, special\ncharacters, time until change, reuse policy, etc.\n\n    Service accounts or system accounts that have no logon capability do not\nneed to have passwords set or changed.","descriptions":{"default":"During installation of the Apache web server software, accounts are\ncreated for the Apache web server to operate properly. The accounts installed\ncan have either no password installed or a default password, which will be\nknown and documented by the vendor and the user community.\n\n    The first things an attacker will try when presented with a logon screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the logon even easier. Once\nthe Apache web server is installed, the passwords for any created accounts\nshould be changed and documented. The new passwords must meet the requirements\nfor all passwords, i.e., uppercase/lowercase characters, numbers, special\ncharacters, time until change, reuse policy, etc.\n\n    Service accounts or system accounts that have no logon capability do not\nneed to have passwords set or changed.","rationale":"","check":"Identify the account that is running the \"httpd\" process:\n    # ps -ef | grep -i httpd | grep -v grep\n\n    apache   29613   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n    apache   29614   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n\n    Check to see if the account has a valid login shell:\n\n    # cut -d: -f1,7 /etc/passwd | grep -i <service_account>\n    apache:/sbin/nologin\n\n    If the service account has a valid login shell, verify that no password is\nconfigured for the account:\n\n    # cut -d: -f1,2 /etc/shadow | grep -i <service_account>\n    apache:!!\n\n    If the account has a valid login shell and a password defined, this is a\nfinding.","fix":"Update the /etc/passwd file to assign the account used to run the \"httpd\"\nprocess an invalid login shell such as \"/sbin/nologin\".\n\n    Lock the account used to run the \"httpd\" process:\n\n    # passwd -l <account>\n    Locking password for user <account>\n    passwd: Success"},"impact":0.7,"refs":[],"tags":{"severity":"high","gtitle":"SRG-APP-000516-WSR-000079","gid":"V-92751","rid":"SV-102839r1_rule","stig_id":"AS24-U1-000940","fix_id":"F-98995r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92751' do\n  title \"The account used to run the Apache web server must not have a valid\nlogin shell and password defined.\"\n  desc  \"During installation of the Apache web server software, accounts are\ncreated for the Apache web server to operate properly. The accounts installed\ncan have either no password installed or a default password, which will be\nknown and documented by the vendor and the user community.\n\n    The first things an attacker will try when presented with a logon screen\nare the default user identifiers with default passwords. Installed applications\nmay also install accounts with no password, making the logon even easier. Once\nthe Apache web server is installed, the passwords for any created accounts\nshould be changed and documented. The new passwords must meet the requirements\nfor all passwords, i.e., uppercase/lowercase characters, numbers, special\ncharacters, time until change, reuse policy, etc.\n\n    Service accounts or system accounts that have no logon capability do not\nneed to have passwords set or changed.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Identify the account that is running the \\\"httpd\\\" process:\n    # ps -ef | grep -i httpd | grep -v grep\n\n    apache   29613   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n    apache   29614   996  0 Feb17 ?        00:00:00 /usr/sbin/httpd\n\n    Check to see if the account has a valid login shell:\n\n    # cut -d: -f1,7 /etc/passwd | grep -i <service_account>\n    apache:/sbin/nologin\n\n    If the service account has a valid login shell, verify that no password is\nconfigured for the account:\n\n    # cut -d: -f1,2 /etc/shadow | grep -i <service_account>\n    apache:!!\n\n    If the account has a valid login shell and a password defined, this is a\nfinding.\n  \"\n  desc 'fix', \"\n    Update the /etc/passwd file to assign the account used to run the \\\"httpd\\\"\nprocess an invalid login shell such as \\\"/sbin/nologin\\\".\n\n    Lock the account used to run the \\\"httpd\\\" process:\n\n    # passwd -l <account>\n    Locking password for user <account>\n    passwd: Success\n  \"\n  impact 0.7\n  tag severity: 'high'\n  tag gtitle: 'SRG-APP-000516-WSR-000079'\n  tag gid: 'V-92751'\n  tag rid: 'SV-102839r1_rule'\n  tag stig_id: 'AS24-U1-000940'\n  tag fix_id: 'F-98995r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  describe 'The account used to run the Apache web server must not have a valid login shell and password defined.' do\n    skip 'Determine the account that is running the httpd process. If this account has a valid login shell and a password defined, this is a finding.'\n  end\nend\n","source_location":{"ref":"./controls/V-92751.rb","line":1},"id":"V-92751"},{"title":"The Apache web server must be configured in accordance with the\nsecurity configuration settings based on DoD security configuration or\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs.","desc":"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including those required to satisfy other security control\nrequirements.","descriptions":{"default":"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including those required to satisfy other security control\nrequirements.","rationale":"","check":"Review the website to determine if \"HTTP\" and \"HTTPS\" are used in\naccordance with well-known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD Ports, Protocols, and Services\nManagement (PPSM).\n\n    Verify that any variation in PPS is documented, registered, and approved by\nthe PPSM.\n\n    If well-known ports and services are not approved for used by PPSM, this is\na finding.","fix":"Ensure the website enforces the use of IANA well-known ports\nfor \"HTTP\" and \"HTTPS\"."},"impact":0.3,"refs":[],"tags":{"severity":"low","gtitle":"SRG-APP-000516-WSR-000174","gid":"V-92753","rid":"SV-102841r1_rule","stig_id":"AS24-U1-000950","fix_id":"F-98997r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92753' do\n  title \"The Apache web server must be configured in accordance with the\nsecurity configuration settings based on DoD security configuration or\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs.\"\n  desc  \"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including those required to satisfy other security control\nrequirements.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the website to determine if \\\"HTTP\\\" and \\\"HTTPS\\\" are used in\naccordance with well-known ports (e.g., 80 and 443) or those ports and services\nas registered and approved for use by the DoD Ports, Protocols, and Services\nManagement (PPSM).\n\n    Verify that any variation in PPS is documented, registered, and approved by\nthe PPSM.\n\n    If well-known ports and services are not approved for used by PPSM, this is\na finding.\n  \"\n  desc 'fix', \"Ensure the website enforces the use of IANA well-known ports\nfor \\\"HTTP\\\" and \\\"HTTPS\\\".\"\n  impact 0.3\n  tag severity: 'low'\n  tag gtitle: 'SRG-APP-000516-WSR-000174'\n  tag gid: 'V-92753'\n  tag rid: 'SV-102841r1_rule'\n  tag stig_id: 'AS24-U1-000950'\n  tag fix_id: 'F-98997r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  describe 'Ensure the website enforces the use of IANA well-known ports for HTTP and HTTPS.' do\n    skip \"Review the website to determine if \\\"HTTP\\\" and \\\"HTTPS\\\" are used in accordance\n      with well-known ports (e.g., 80 and 443) or those ports and services as registered and approved\n      for use by the DoD Ports, Protocols, and Services Management (PPSM).\n      Verify that any variation in PPS is documented, registered, and approved by the PPSM.\n      If well-known ports and services are not approved for used by PPSM, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92753.rb","line":1},"id":"V-92753"},{"title":"The Apache web server software must be a vendor-supported version.","desc":"Many vulnerabilities are associated with older versions of web server\nsoftware. As hot fixes and patches are issued, these solutions are included in\nthe next version of the server software. Maintaining the web server at a\ncurrent version makes the efforts of a malicious user to exploit the web\nservice more difficult.","descriptions":{"default":"Many vulnerabilities are associated with older versions of web server\nsoftware. As hot fixes and patches are issued, these solutions are included in\nthe next version of the server software. Maintaining the web server at a\ncurrent version makes the efforts of a malicious user to exploit the web\nservice more difficult.","rationale":"","check":"Determine the version of the Apache software that is running on the system\nby entering the following command:\n\n    httpd -v\n\n    If the version of Apache is not at the following version or higher, this is\na finding:\n\n    Apache 2.4 (February 2012)\n\n    NOTE: In some situations, the Apache software that is being used is\nsupported by another vendor, such as Oracle in the case of the Oracle\nApplication Server or IBM's HTTP Server. The versions of the software in these\ncases may not match the version number noted above. If the site can provide\nvendor documentation showing the version of the web server is supported, this\nwould not be a finding.","fix":"Install the current version of the web server software and\nmaintain appropriate service packs and patches."},"impact":0.7,"refs":[],"tags":{"severity":"high","gtitle":"SRG-APP-000516-WSR-000174","gid":"V-92755","rid":"SV-102843r1_rule","stig_id":"AS24-U1-000960","fix_id":"F-98999r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92755' do\n  title 'The Apache web server software must be a vendor-supported version.'\n  desc  \"Many vulnerabilities are associated with older versions of web server\nsoftware. As hot fixes and patches are issued, these solutions are included in\nthe next version of the server software. Maintaining the web server at a\ncurrent version makes the efforts of a malicious user to exploit the web\nservice more difficult.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the version of the Apache software that is running on the system\nby entering the following command:\n\n    httpd -v\n\n    If the version of Apache is not at the following version or higher, this is\na finding:\n\n    Apache 2.4 (February 2012)\n\n    NOTE: In some situations, the Apache software that is being used is\nsupported by another vendor, such as Oracle in the case of the Oracle\nApplication Server or IBM's HTTP Server. The versions of the software in these\ncases may not match the version number noted above. If the site can provide\nvendor documentation showing the version of the web server is supported, this\nwould not be a finding.\n  \"\n  desc 'fix', \"Install the current version of the web server software and\nmaintain appropriate service packs and patches.\"\n  impact 0.7\n  tag severity: 'high'\n  tag gtitle: 'SRG-APP-000516-WSR-000174'\n  tag gid: 'V-92755'\n  tag rid: 'SV-102843r1_rule'\n  tag stig_id: 'AS24-U1-000960'\n  tag fix_id: 'F-98999r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  httpd_version = command('httpd -v').stdout.scan(%r{Server version: Apache/(\\S+)\\s\\(\\w+\\)}).flatten\n\n  describe 'Apache Web Server installed must be updated' do\n    subject { httpd_version }\n    it { should cmp >= input('apache_version') }\n  end\nend\n","source_location":{"ref":"./controls/V-92755.rb","line":1},"id":"V-92755"},{"title":"The Apache web server htpasswd files (if present) must reflect proper\nownership and permissions.","desc":"In addition to OS restrictions, access rights to files and directories\ncan be set on a website using the web server software. That is, in addition to\nallowing or denying all access rights, a rule can be specified that allows or\ndenies partial access rights. For example, users can be given read-only access\nrights to files to view the information but not change the files.\n\n    This check verifies that the htpasswd file is only accessible by System\nAdministrators (SAs) or Web Managers, with the account running the web service\nhaving group permissions of read and execute. \"htpasswd\" is a utility used by\nNetscape and Apache to provide for password access to designated websites.","descriptions":{"default":"In addition to OS restrictions, access rights to files and directories\ncan be set on a website using the web server software. That is, in addition to\nallowing or denying all access rights, a rule can be specified that allows or\ndenies partial access rights. For example, users can be given read-only access\nrights to files to view the information but not change the files.\n\n    This check verifies that the htpasswd file is only accessible by System\nAdministrators (SAs) or Web Managers, with the account running the web service\nhaving group permissions of read and execute. \"htpasswd\" is a utility used by\nNetscape and Apache to provide for password access to designated websites.","rationale":"","check":"Locate the htpasswd file by entering the following command:\n\nfind / -name htpasswd\n\nNavigate to that directory.\n\nRun: ls -l htpasswd\n\nPermissions should be: r-x r - x - - - (550)\n\nIf permissions on \"htpasswd\" are greater than \"550\", this is a finding.\n\nVerify the owner is the SA or Web Manager account.\n\nIf another account has access to this file, this is a finding.","fix":"Ensure the SA or Web Manager account owns the \"htpasswd\" file.\n\nEnsure permissions are set to \"550\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000516-WSR-000174","gid":"V-92757","rid":"SV-102845r1_rule","stig_id":"AS24-U1-000970","fix_id":"F-99001r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92757' do\n  title \"The Apache web server htpasswd files (if present) must reflect proper\nownership and permissions.\"\n  desc  \"In addition to OS restrictions, access rights to files and directories\ncan be set on a website using the web server software. That is, in addition to\nallowing or denying all access rights, a rule can be specified that allows or\ndenies partial access rights. For example, users can be given read-only access\nrights to files to view the information but not change the files.\n\n    This check verifies that the htpasswd file is only accessible by System\nAdministrators (SAs) or Web Managers, with the account running the web service\nhaving group permissions of read and execute. \\\"htpasswd\\\" is a utility used by\nNetscape and Apache to provide for password access to designated websites.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Locate the htpasswd file by entering the following command:\n\n    find / -name htpasswd\n\n    Navigate to that directory.\n\n    Run: ls -l htpasswd\n\n    Permissions should be: r-x r - x - - - (550)\n\n    If permissions on \\\"htpasswd\\\" are greater than \\\"550\\\", this is a finding.\n\n    Verify the owner is the SA or Web Manager account.\n\n    If another account has access to this file, this is a finding.\n  \"\n  desc 'fix', \"\n    Ensure the SA or Web Manager account owns the \\\"htpasswd\\\" file.\n\n    Ensure permissions are set to \\\"550\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000516-WSR-000174'\n  tag gid: 'V-92757'\n  tag rid: 'SV-102845r1_rule'\n  tag stig_id: 'AS24-U1-000970'\n  tag fix_id: 'F-99001r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  htpasswd_command = command('find / -name htpasswd').stdout.strip\n\n  if !htpasswd_command.empty?\n    htpasswd = file(htpasswd_command)\n\n    describe htpasswd do\n      it { should_not be_more_permissive_than('0550') }\n      its('owner') { should be_in input('server_admins') }\n    end\n\n  else\n    describe htpasswd_command do\n      skip 'Could not find htpwasswd. This check has to be manually reviewed.'\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92757.rb","line":1},"id":"V-92757"},{"title":"HTTP request methods must be limited.","desc":"The HTTP 1.1 protocol supports several request methods that are rarely\nused and potentially high risk. For example, methods such as PUT and DELETE are\nrarely used and should be disabled in keeping with the primary security\nprincipal of minimize features and options. Also, since the usage of these\nmethods is typically to modify resources on the web server, they should be\nexplicitly disallowed. Normal web server operation will typically require\nallowing only the GET, HEAD, and POST request methods. This will allow for\ndownloading of web pages and submitting information to web forms. The OPTIONS\nrequest method will also be allowed as it is used to request which HTTP request\nmethods are allowed.","descriptions":{"default":"The HTTP 1.1 protocol supports several request methods that are rarely\nused and potentially high risk. For example, methods such as PUT and DELETE are\nrarely used and should be disabled in keeping with the primary security\nprincipal of minimize features and options. Also, since the usage of these\nmethods is typically to modify resources on the web server, they should be\nexplicitly disallowed. Normal web server operation will typically require\nallowing only the GET, HEAD, and POST request methods. This will allow for\ndownloading of web pages and submitting information to web forms. The OPTIONS\nrequest method will also be allowed as it is used to request which HTTP request\nmethods are allowed.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Enter the following command into a command line:\n\n    more <'INSTALLED PATH'>/conf/httpd.conf\n\n    For every enabled \"Directory\" directive (except root), verify the\nfollowing entry exists:\n\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n\n    If the statement above is not found in the \"LimitExcept\" statement (i.e.,\n<Directory />), this is a finding.\n\n    If the statement above is found enabled but without the appropriate\n\"LimitExcept\" or \"Order\" statement, this is a finding.\n\n    If the statement is not found inside an enabled \"Directory\" directive,\nthis is a finding.\n\n    NOTE: If the \"LimitExcept\" statement above is operationally limiting,\nthis should be explicitly documented and approved by the ISSO, at which point\nthis can be considered not a finding.","fix":"Edit the \"httpd.conf\" file and add the following entries for every\nenabled \"Directory\" directive (except root).\n\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n\n    Example:\n\n    <Directory \"/usr/local/apache2/cgi-bin\">\n    . . .\n    # Limit HTTP methods\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n    </Directory>"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000093-WSR-000053","gid":"V-92759","rid":"SV-102847r2_rule","stig_id":"AS24-U1-001000","fix_id":"F-99003r1_fix","cci":["CCI-001084"],"nist":["SC-3"]},"code":"control 'V-92759' do\n  title 'HTTP request methods must be limited.'\n  desc  \"The HTTP 1.1 protocol supports several request methods that are rarely\nused and potentially high risk. For example, methods such as PUT and DELETE are\nrarely used and should be disabled in keeping with the primary security\nprincipal of minimize features and options. Also, since the usage of these\nmethods is typically to modify resources on the web server, they should be\nexplicitly disallowed. Normal web server operation will typically require\nallowing only the GET, HEAD, and POST request methods. This will allow for\ndownloading of web pages and submitting information to web forms. The OPTIONS\nrequest method will also be allowed as it is used to request which HTTP request\nmethods are allowed.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Enter the following command into a command line:\n\n    more <'INSTALLED PATH'>/conf/httpd.conf\n\n    For every enabled \\\"Directory\\\" directive (except root), verify the\nfollowing entry exists:\n\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n\n    If the statement above is not found in the \\\"LimitExcept\\\" statement (i.e.,\n<Directory />), this is a finding.\n\n    If the statement above is found enabled but without the appropriate\n\\\"LimitExcept\\\" or \\\"Order\\\" statement, this is a finding.\n\n    If the statement is not found inside an enabled \\\"Directory\\\" directive,\nthis is a finding.\n\n    NOTE: If the \\\"LimitExcept\\\" statement above is operationally limiting,\nthis should be explicitly documented and approved by the ISSO, at which point\nthis can be considered not a finding.\n\n  \"\n  desc 'fix', \"\n    Edit the \\\"httpd.conf\\\" file and add the following entries for every\nenabled \\\"Directory\\\" directive (except root).\n\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n\n    Example:\n\n    <Directory \\\"/usr/local/apache2/cgi-bin\\\">\n    . . .\n    # Limit HTTP methods\n    <LimitExcept GET POST OPTIONS>\n    Require all denied\n    </LimitExcept>\n    </Directory>\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000093-WSR-000053'\n  tag gid: 'V-92759'\n  tag rid: 'SV-102847r2_rule'\n  tag stig_id: 'AS24-U1-001000'\n  tag fix_id: 'F-99003r1_fix'\n  tag cci: ['CCI-001084']\n  tag nist: ['SC-3']\n\n  config_path = input('config_path')\n  directory_list = file(config_path).content.scan(%r{^\\s*(<Directory[\\s\\S]*?>[\\s\\S]*?</Directory>)})\n\n  describe 'Each Directory directive has a LimitExcept defined' do\n    skip(\"All <Directory></Directory> directives except the root <Directory> must have a LimitExcept directive defined.\n      A list of directories has been found below:\\n#{directory_list}\\n\")\n  end\nend\n","source_location":{"ref":"./controls/V-92759.rb","line":1},"id":"V-92759"}],"groups":[{"title":null,"controls":["V-92597"],"id":"controls/V-92597.rb"},{"title":null,"controls":["V-92599"],"id":"controls/V-92599.rb"},{"title":null,"controls":["V-92601"],"id":"controls/V-92601.rb"},{"title":null,"controls":["V-92607"],"id":"controls/V-92607.rb"},{"title":null,"controls":["V-92609"],"id":"controls/V-92609.rb"},{"title":null,"controls":["V-92621"],"id":"controls/V-92621.rb"},{"title":null,"controls":["V-92627"],"id":"controls/V-92627.rb"},{"title":null,"controls":["V-92629"],"id":"controls/V-92629.rb"},{"title":null,"controls":["V-92631"],"id":"controls/V-92631.rb"},{"title":null,"controls":["V-92635"],"id":"controls/V-92635.rb"},{"title":null,"controls":["V-92637"],"id":"controls/V-92637.rb"},{"title":null,"controls":["V-92639"],"id":"controls/V-92639.rb"},{"title":null,"controls":["V-92641"],"id":"controls/V-92641.rb"},{"title":null,"controls":["V-92643"],"id":"controls/V-92643.rb"},{"title":null,"controls":["V-92645"],"id":"controls/V-92645.rb"},{"title":null,"controls":["V-92653"],"id":"controls/V-92653.rb"},{"title":null,"controls":["V-92655"],"id":"controls/V-92655.rb"},{"title":null,"controls":["V-92659"],"id":"controls/V-92659.rb"},{"title":null,"controls":["V-92661"],"id":"controls/V-92661.rb"},{"title":null,"controls":["V-92671"],"id":"controls/V-92671.rb"},{"title":null,"controls":["V-92673"],"id":"controls/V-92673.rb"},{"title":null,"controls":["V-92675"],"id":"controls/V-92675.rb"},{"title":null,"controls":["V-92677"],"id":"controls/V-92677.rb"},{"title":null,"controls":["V-92679"],"id":"controls/V-92679.rb"},{"title":null,"controls":["V-92687"],"id":"controls/V-92687.rb"},{"title":null,"controls":["V-92689"],"id":"controls/V-92689.rb"},{"title":null,"controls":["V-92695"],"id":"controls/V-92695.rb"},{"title":null,"controls":["V-92697"],"id":"controls/V-92697.rb"},{"title":null,"controls":["V-92699"],"id":"controls/V-92699.rb"},{"title":null,"controls":["V-92701"],"id":"controls/V-92701.rb"},{"title":null,"controls":["V-92705"],"id":"controls/V-92705.rb"},{"title":null,"controls":["V-92709"],"id":"controls/V-92709.rb"},{"title":null,"controls":["V-92711"],"id":"controls/V-92711.rb"},{"title":null,"controls":["V-92713"],"id":"controls/V-92713.rb"},{"title":null,"controls":["V-92715"],"id":"controls/V-92715.rb"},{"title":null,"controls":["V-92717"],"id":"controls/V-92717.rb"},{"title":null,"controls":["V-92719"],"id":"controls/V-92719.rb"},{"title":null,"controls":["V-92723"],"id":"controls/V-92723.rb"},{"title":null,"controls":["V-92727"],"id":"controls/V-92727.rb"},{"title":null,"controls":["V-92731"],"id":"controls/V-92731.rb"},{"title":null,"controls":["V-92741"],"id":"controls/V-92741.rb"},{"title":null,"controls":["V-92745"],"id":"controls/V-92745.rb"},{"title":null,"controls":["V-92749"],"id":"controls/V-92749.rb"},{"title":null,"controls":["V-92751"],"id":"controls/V-92751.rb"},{"title":null,"controls":["V-92753"],"id":"controls/V-92753.rb"},{"title":null,"controls":["V-92755"],"id":"controls/V-92755.rb"},{"title":null,"controls":["V-92757"],"id":"controls/V-92757.rb"},{"title":null,"controls":["V-92759"],"id":"controls/V-92759.rb"}],"sha256":"77962bc4eb6ca70df5b03ccf2987c2924aec5db48bdf3b82ed002d774eea1bd9","status_message":"","status":"loaded","generator":{"name":"inspec","version":"5.22.3"}}
